/**
 * @fileoverview gRPC-Web generated client stub for viam.app.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: app/v1/app.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var app_mltraining_v1_ml_training_pb = require('../../app/mltraining/v1/ml_training_pb.js')

var app_packages_v1_packages_pb = require('../../app/packages/v1/packages_pb.js')

var common_v1_common_pb = require('../../common/v1/common_pb.js')

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js')

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')

var tagger_v1_tagger_pb = require('../../tagger/v1/tagger_pb.js')
const proto = {};
proto.viam = {};
proto.viam.app = {};
proto.viam.app.v1 = require('./app_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.viam.app.v1.AppServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.viam.app.v1.AppServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.GetUserIDByEmailRequest,
 *   !proto.viam.app.v1.GetUserIDByEmailResponse>}
 */
const methodDescriptor_AppService_GetUserIDByEmail = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/GetUserIDByEmail',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.GetUserIDByEmailRequest,
  proto.viam.app.v1.GetUserIDByEmailResponse,
  /**
   * @param {!proto.viam.app.v1.GetUserIDByEmailRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.GetUserIDByEmailResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.GetUserIDByEmailRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.GetUserIDByEmailResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.GetUserIDByEmailResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.getUserIDByEmail =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/GetUserIDByEmail',
      request,
      metadata || {},
      methodDescriptor_AppService_GetUserIDByEmail,
      callback);
};


/**
 * @param {!proto.viam.app.v1.GetUserIDByEmailRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.GetUserIDByEmailResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.getUserIDByEmail =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/GetUserIDByEmail',
      request,
      metadata || {},
      methodDescriptor_AppService_GetUserIDByEmail);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.CreateOrganizationRequest,
 *   !proto.viam.app.v1.CreateOrganizationResponse>}
 */
const methodDescriptor_AppService_CreateOrganization = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/CreateOrganization',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.CreateOrganizationRequest,
  proto.viam.app.v1.CreateOrganizationResponse,
  /**
   * @param {!proto.viam.app.v1.CreateOrganizationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.CreateOrganizationResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.CreateOrganizationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.CreateOrganizationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.CreateOrganizationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.createOrganization =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/CreateOrganization',
      request,
      metadata || {},
      methodDescriptor_AppService_CreateOrganization,
      callback);
};


/**
 * @param {!proto.viam.app.v1.CreateOrganizationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.CreateOrganizationResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.createOrganization =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/CreateOrganization',
      request,
      metadata || {},
      methodDescriptor_AppService_CreateOrganization);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.ListOrganizationsRequest,
 *   !proto.viam.app.v1.ListOrganizationsResponse>}
 */
const methodDescriptor_AppService_ListOrganizations = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/ListOrganizations',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.ListOrganizationsRequest,
  proto.viam.app.v1.ListOrganizationsResponse,
  /**
   * @param {!proto.viam.app.v1.ListOrganizationsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.ListOrganizationsResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.ListOrganizationsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.ListOrganizationsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.ListOrganizationsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.listOrganizations =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/ListOrganizations',
      request,
      metadata || {},
      methodDescriptor_AppService_ListOrganizations,
      callback);
};


/**
 * @param {!proto.viam.app.v1.ListOrganizationsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.ListOrganizationsResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.listOrganizations =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/ListOrganizations',
      request,
      metadata || {},
      methodDescriptor_AppService_ListOrganizations);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.GetOrganizationsWithAccessToLocationRequest,
 *   !proto.viam.app.v1.GetOrganizationsWithAccessToLocationResponse>}
 */
const methodDescriptor_AppService_GetOrganizationsWithAccessToLocation = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/GetOrganizationsWithAccessToLocation',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.GetOrganizationsWithAccessToLocationRequest,
  proto.viam.app.v1.GetOrganizationsWithAccessToLocationResponse,
  /**
   * @param {!proto.viam.app.v1.GetOrganizationsWithAccessToLocationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.GetOrganizationsWithAccessToLocationResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.GetOrganizationsWithAccessToLocationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.GetOrganizationsWithAccessToLocationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.GetOrganizationsWithAccessToLocationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.getOrganizationsWithAccessToLocation =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/GetOrganizationsWithAccessToLocation',
      request,
      metadata || {},
      methodDescriptor_AppService_GetOrganizationsWithAccessToLocation,
      callback);
};


/**
 * @param {!proto.viam.app.v1.GetOrganizationsWithAccessToLocationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.GetOrganizationsWithAccessToLocationResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.getOrganizationsWithAccessToLocation =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/GetOrganizationsWithAccessToLocation',
      request,
      metadata || {},
      methodDescriptor_AppService_GetOrganizationsWithAccessToLocation);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.ListOrganizationsByUserRequest,
 *   !proto.viam.app.v1.ListOrganizationsByUserResponse>}
 */
const methodDescriptor_AppService_ListOrganizationsByUser = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/ListOrganizationsByUser',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.ListOrganizationsByUserRequest,
  proto.viam.app.v1.ListOrganizationsByUserResponse,
  /**
   * @param {!proto.viam.app.v1.ListOrganizationsByUserRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.ListOrganizationsByUserResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.ListOrganizationsByUserRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.ListOrganizationsByUserResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.ListOrganizationsByUserResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.listOrganizationsByUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/ListOrganizationsByUser',
      request,
      metadata || {},
      methodDescriptor_AppService_ListOrganizationsByUser,
      callback);
};


/**
 * @param {!proto.viam.app.v1.ListOrganizationsByUserRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.ListOrganizationsByUserResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.listOrganizationsByUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/ListOrganizationsByUser',
      request,
      metadata || {},
      methodDescriptor_AppService_ListOrganizationsByUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.GetOrganizationRequest,
 *   !proto.viam.app.v1.GetOrganizationResponse>}
 */
const methodDescriptor_AppService_GetOrganization = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/GetOrganization',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.GetOrganizationRequest,
  proto.viam.app.v1.GetOrganizationResponse,
  /**
   * @param {!proto.viam.app.v1.GetOrganizationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.GetOrganizationResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.GetOrganizationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.GetOrganizationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.GetOrganizationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.getOrganization =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/GetOrganization',
      request,
      metadata || {},
      methodDescriptor_AppService_GetOrganization,
      callback);
};


/**
 * @param {!proto.viam.app.v1.GetOrganizationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.GetOrganizationResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.getOrganization =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/GetOrganization',
      request,
      metadata || {},
      methodDescriptor_AppService_GetOrganization);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.GetOrganizationNamespaceAvailabilityRequest,
 *   !proto.viam.app.v1.GetOrganizationNamespaceAvailabilityResponse>}
 */
const methodDescriptor_AppService_GetOrganizationNamespaceAvailability = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/GetOrganizationNamespaceAvailability',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.GetOrganizationNamespaceAvailabilityRequest,
  proto.viam.app.v1.GetOrganizationNamespaceAvailabilityResponse,
  /**
   * @param {!proto.viam.app.v1.GetOrganizationNamespaceAvailabilityRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.GetOrganizationNamespaceAvailabilityResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.GetOrganizationNamespaceAvailabilityRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.GetOrganizationNamespaceAvailabilityResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.GetOrganizationNamespaceAvailabilityResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.getOrganizationNamespaceAvailability =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/GetOrganizationNamespaceAvailability',
      request,
      metadata || {},
      methodDescriptor_AppService_GetOrganizationNamespaceAvailability,
      callback);
};


/**
 * @param {!proto.viam.app.v1.GetOrganizationNamespaceAvailabilityRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.GetOrganizationNamespaceAvailabilityResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.getOrganizationNamespaceAvailability =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/GetOrganizationNamespaceAvailability',
      request,
      metadata || {},
      methodDescriptor_AppService_GetOrganizationNamespaceAvailability);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.UpdateOrganizationRequest,
 *   !proto.viam.app.v1.UpdateOrganizationResponse>}
 */
const methodDescriptor_AppService_UpdateOrganization = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/UpdateOrganization',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.UpdateOrganizationRequest,
  proto.viam.app.v1.UpdateOrganizationResponse,
  /**
   * @param {!proto.viam.app.v1.UpdateOrganizationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.UpdateOrganizationResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.UpdateOrganizationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.UpdateOrganizationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.UpdateOrganizationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.updateOrganization =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/UpdateOrganization',
      request,
      metadata || {},
      methodDescriptor_AppService_UpdateOrganization,
      callback);
};


/**
 * @param {!proto.viam.app.v1.UpdateOrganizationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.UpdateOrganizationResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.updateOrganization =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/UpdateOrganization',
      request,
      metadata || {},
      methodDescriptor_AppService_UpdateOrganization);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.DeleteOrganizationRequest,
 *   !proto.viam.app.v1.DeleteOrganizationResponse>}
 */
const methodDescriptor_AppService_DeleteOrganization = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/DeleteOrganization',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.DeleteOrganizationRequest,
  proto.viam.app.v1.DeleteOrganizationResponse,
  /**
   * @param {!proto.viam.app.v1.DeleteOrganizationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.DeleteOrganizationResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.DeleteOrganizationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.DeleteOrganizationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.DeleteOrganizationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.deleteOrganization =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/DeleteOrganization',
      request,
      metadata || {},
      methodDescriptor_AppService_DeleteOrganization,
      callback);
};


/**
 * @param {!proto.viam.app.v1.DeleteOrganizationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.DeleteOrganizationResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.deleteOrganization =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/DeleteOrganization',
      request,
      metadata || {},
      methodDescriptor_AppService_DeleteOrganization);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.ListOrganizationMembersRequest,
 *   !proto.viam.app.v1.ListOrganizationMembersResponse>}
 */
const methodDescriptor_AppService_ListOrganizationMembers = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/ListOrganizationMembers',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.ListOrganizationMembersRequest,
  proto.viam.app.v1.ListOrganizationMembersResponse,
  /**
   * @param {!proto.viam.app.v1.ListOrganizationMembersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.ListOrganizationMembersResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.ListOrganizationMembersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.ListOrganizationMembersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.ListOrganizationMembersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.listOrganizationMembers =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/ListOrganizationMembers',
      request,
      metadata || {},
      methodDescriptor_AppService_ListOrganizationMembers,
      callback);
};


/**
 * @param {!proto.viam.app.v1.ListOrganizationMembersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.ListOrganizationMembersResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.listOrganizationMembers =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/ListOrganizationMembers',
      request,
      metadata || {},
      methodDescriptor_AppService_ListOrganizationMembers);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.CreateOrganizationInviteRequest,
 *   !proto.viam.app.v1.CreateOrganizationInviteResponse>}
 */
const methodDescriptor_AppService_CreateOrganizationInvite = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/CreateOrganizationInvite',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.CreateOrganizationInviteRequest,
  proto.viam.app.v1.CreateOrganizationInviteResponse,
  /**
   * @param {!proto.viam.app.v1.CreateOrganizationInviteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.CreateOrganizationInviteResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.CreateOrganizationInviteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.CreateOrganizationInviteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.CreateOrganizationInviteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.createOrganizationInvite =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/CreateOrganizationInvite',
      request,
      metadata || {},
      methodDescriptor_AppService_CreateOrganizationInvite,
      callback);
};


/**
 * @param {!proto.viam.app.v1.CreateOrganizationInviteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.CreateOrganizationInviteResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.createOrganizationInvite =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/CreateOrganizationInvite',
      request,
      metadata || {},
      methodDescriptor_AppService_CreateOrganizationInvite);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest,
 *   !proto.viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse>}
 */
const methodDescriptor_AppService_UpdateOrganizationInviteAuthorizations = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/UpdateOrganizationInviteAuthorizations',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest,
  proto.viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse,
  /**
   * @param {!proto.viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.updateOrganizationInviteAuthorizations =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/UpdateOrganizationInviteAuthorizations',
      request,
      metadata || {},
      methodDescriptor_AppService_UpdateOrganizationInviteAuthorizations,
      callback);
};


/**
 * @param {!proto.viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.updateOrganizationInviteAuthorizations =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/UpdateOrganizationInviteAuthorizations',
      request,
      metadata || {},
      methodDescriptor_AppService_UpdateOrganizationInviteAuthorizations);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.DeleteOrganizationMemberRequest,
 *   !proto.viam.app.v1.DeleteOrganizationMemberResponse>}
 */
const methodDescriptor_AppService_DeleteOrganizationMember = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/DeleteOrganizationMember',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.DeleteOrganizationMemberRequest,
  proto.viam.app.v1.DeleteOrganizationMemberResponse,
  /**
   * @param {!proto.viam.app.v1.DeleteOrganizationMemberRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.DeleteOrganizationMemberResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.DeleteOrganizationMemberRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.DeleteOrganizationMemberResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.DeleteOrganizationMemberResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.deleteOrganizationMember =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/DeleteOrganizationMember',
      request,
      metadata || {},
      methodDescriptor_AppService_DeleteOrganizationMember,
      callback);
};


/**
 * @param {!proto.viam.app.v1.DeleteOrganizationMemberRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.DeleteOrganizationMemberResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.deleteOrganizationMember =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/DeleteOrganizationMember',
      request,
      metadata || {},
      methodDescriptor_AppService_DeleteOrganizationMember);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.DeleteOrganizationInviteRequest,
 *   !proto.viam.app.v1.DeleteOrganizationInviteResponse>}
 */
const methodDescriptor_AppService_DeleteOrganizationInvite = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/DeleteOrganizationInvite',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.DeleteOrganizationInviteRequest,
  proto.viam.app.v1.DeleteOrganizationInviteResponse,
  /**
   * @param {!proto.viam.app.v1.DeleteOrganizationInviteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.DeleteOrganizationInviteResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.DeleteOrganizationInviteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.DeleteOrganizationInviteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.DeleteOrganizationInviteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.deleteOrganizationInvite =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/DeleteOrganizationInvite',
      request,
      metadata || {},
      methodDescriptor_AppService_DeleteOrganizationInvite,
      callback);
};


/**
 * @param {!proto.viam.app.v1.DeleteOrganizationInviteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.DeleteOrganizationInviteResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.deleteOrganizationInvite =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/DeleteOrganizationInvite',
      request,
      metadata || {},
      methodDescriptor_AppService_DeleteOrganizationInvite);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.ResendOrganizationInviteRequest,
 *   !proto.viam.app.v1.ResendOrganizationInviteResponse>}
 */
const methodDescriptor_AppService_ResendOrganizationInvite = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/ResendOrganizationInvite',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.ResendOrganizationInviteRequest,
  proto.viam.app.v1.ResendOrganizationInviteResponse,
  /**
   * @param {!proto.viam.app.v1.ResendOrganizationInviteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.ResendOrganizationInviteResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.ResendOrganizationInviteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.ResendOrganizationInviteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.ResendOrganizationInviteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.resendOrganizationInvite =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/ResendOrganizationInvite',
      request,
      metadata || {},
      methodDescriptor_AppService_ResendOrganizationInvite,
      callback);
};


/**
 * @param {!proto.viam.app.v1.ResendOrganizationInviteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.ResendOrganizationInviteResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.resendOrganizationInvite =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/ResendOrganizationInvite',
      request,
      metadata || {},
      methodDescriptor_AppService_ResendOrganizationInvite);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.CreateLocationRequest,
 *   !proto.viam.app.v1.CreateLocationResponse>}
 */
const methodDescriptor_AppService_CreateLocation = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/CreateLocation',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.CreateLocationRequest,
  proto.viam.app.v1.CreateLocationResponse,
  /**
   * @param {!proto.viam.app.v1.CreateLocationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.CreateLocationResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.CreateLocationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.CreateLocationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.CreateLocationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.createLocation =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/CreateLocation',
      request,
      metadata || {},
      methodDescriptor_AppService_CreateLocation,
      callback);
};


/**
 * @param {!proto.viam.app.v1.CreateLocationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.CreateLocationResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.createLocation =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/CreateLocation',
      request,
      metadata || {},
      methodDescriptor_AppService_CreateLocation);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.GetLocationRequest,
 *   !proto.viam.app.v1.GetLocationResponse>}
 */
const methodDescriptor_AppService_GetLocation = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/GetLocation',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.GetLocationRequest,
  proto.viam.app.v1.GetLocationResponse,
  /**
   * @param {!proto.viam.app.v1.GetLocationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.GetLocationResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.GetLocationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.GetLocationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.GetLocationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.getLocation =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/GetLocation',
      request,
      metadata || {},
      methodDescriptor_AppService_GetLocation,
      callback);
};


/**
 * @param {!proto.viam.app.v1.GetLocationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.GetLocationResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.getLocation =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/GetLocation',
      request,
      metadata || {},
      methodDescriptor_AppService_GetLocation);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.UpdateLocationRequest,
 *   !proto.viam.app.v1.UpdateLocationResponse>}
 */
const methodDescriptor_AppService_UpdateLocation = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/UpdateLocation',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.UpdateLocationRequest,
  proto.viam.app.v1.UpdateLocationResponse,
  /**
   * @param {!proto.viam.app.v1.UpdateLocationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.UpdateLocationResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.UpdateLocationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.UpdateLocationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.UpdateLocationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.updateLocation =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/UpdateLocation',
      request,
      metadata || {},
      methodDescriptor_AppService_UpdateLocation,
      callback);
};


/**
 * @param {!proto.viam.app.v1.UpdateLocationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.UpdateLocationResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.updateLocation =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/UpdateLocation',
      request,
      metadata || {},
      methodDescriptor_AppService_UpdateLocation);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.DeleteLocationRequest,
 *   !proto.viam.app.v1.DeleteLocationResponse>}
 */
const methodDescriptor_AppService_DeleteLocation = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/DeleteLocation',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.DeleteLocationRequest,
  proto.viam.app.v1.DeleteLocationResponse,
  /**
   * @param {!proto.viam.app.v1.DeleteLocationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.DeleteLocationResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.DeleteLocationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.DeleteLocationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.DeleteLocationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.deleteLocation =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/DeleteLocation',
      request,
      metadata || {},
      methodDescriptor_AppService_DeleteLocation,
      callback);
};


/**
 * @param {!proto.viam.app.v1.DeleteLocationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.DeleteLocationResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.deleteLocation =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/DeleteLocation',
      request,
      metadata || {},
      methodDescriptor_AppService_DeleteLocation);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.ListLocationsRequest,
 *   !proto.viam.app.v1.ListLocationsResponse>}
 */
const methodDescriptor_AppService_ListLocations = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/ListLocations',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.ListLocationsRequest,
  proto.viam.app.v1.ListLocationsResponse,
  /**
   * @param {!proto.viam.app.v1.ListLocationsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.ListLocationsResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.ListLocationsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.ListLocationsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.ListLocationsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.listLocations =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/ListLocations',
      request,
      metadata || {},
      methodDescriptor_AppService_ListLocations,
      callback);
};


/**
 * @param {!proto.viam.app.v1.ListLocationsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.ListLocationsResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.listLocations =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/ListLocations',
      request,
      metadata || {},
      methodDescriptor_AppService_ListLocations);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.ShareLocationRequest,
 *   !proto.viam.app.v1.ShareLocationResponse>}
 */
const methodDescriptor_AppService_ShareLocation = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/ShareLocation',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.ShareLocationRequest,
  proto.viam.app.v1.ShareLocationResponse,
  /**
   * @param {!proto.viam.app.v1.ShareLocationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.ShareLocationResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.ShareLocationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.ShareLocationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.ShareLocationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.shareLocation =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/ShareLocation',
      request,
      metadata || {},
      methodDescriptor_AppService_ShareLocation,
      callback);
};


/**
 * @param {!proto.viam.app.v1.ShareLocationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.ShareLocationResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.shareLocation =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/ShareLocation',
      request,
      metadata || {},
      methodDescriptor_AppService_ShareLocation);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.UnshareLocationRequest,
 *   !proto.viam.app.v1.UnshareLocationResponse>}
 */
const methodDescriptor_AppService_UnshareLocation = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/UnshareLocation',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.UnshareLocationRequest,
  proto.viam.app.v1.UnshareLocationResponse,
  /**
   * @param {!proto.viam.app.v1.UnshareLocationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.UnshareLocationResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.UnshareLocationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.UnshareLocationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.UnshareLocationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.unshareLocation =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/UnshareLocation',
      request,
      metadata || {},
      methodDescriptor_AppService_UnshareLocation,
      callback);
};


/**
 * @param {!proto.viam.app.v1.UnshareLocationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.UnshareLocationResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.unshareLocation =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/UnshareLocation',
      request,
      metadata || {},
      methodDescriptor_AppService_UnshareLocation);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.LocationAuthRequest,
 *   !proto.viam.app.v1.LocationAuthResponse>}
 */
const methodDescriptor_AppService_LocationAuth = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/LocationAuth',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.LocationAuthRequest,
  proto.viam.app.v1.LocationAuthResponse,
  /**
   * @param {!proto.viam.app.v1.LocationAuthRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.LocationAuthResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.LocationAuthRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.LocationAuthResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.LocationAuthResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.locationAuth =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/LocationAuth',
      request,
      metadata || {},
      methodDescriptor_AppService_LocationAuth,
      callback);
};


/**
 * @param {!proto.viam.app.v1.LocationAuthRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.LocationAuthResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.locationAuth =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/LocationAuth',
      request,
      metadata || {},
      methodDescriptor_AppService_LocationAuth);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.CreateLocationSecretRequest,
 *   !proto.viam.app.v1.CreateLocationSecretResponse>}
 */
const methodDescriptor_AppService_CreateLocationSecret = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/CreateLocationSecret',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.CreateLocationSecretRequest,
  proto.viam.app.v1.CreateLocationSecretResponse,
  /**
   * @param {!proto.viam.app.v1.CreateLocationSecretRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.CreateLocationSecretResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.CreateLocationSecretRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.CreateLocationSecretResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.CreateLocationSecretResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.createLocationSecret =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/CreateLocationSecret',
      request,
      metadata || {},
      methodDescriptor_AppService_CreateLocationSecret,
      callback);
};


/**
 * @param {!proto.viam.app.v1.CreateLocationSecretRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.CreateLocationSecretResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.createLocationSecret =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/CreateLocationSecret',
      request,
      metadata || {},
      methodDescriptor_AppService_CreateLocationSecret);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.DeleteLocationSecretRequest,
 *   !proto.viam.app.v1.DeleteLocationSecretResponse>}
 */
const methodDescriptor_AppService_DeleteLocationSecret = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/DeleteLocationSecret',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.DeleteLocationSecretRequest,
  proto.viam.app.v1.DeleteLocationSecretResponse,
  /**
   * @param {!proto.viam.app.v1.DeleteLocationSecretRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.DeleteLocationSecretResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.DeleteLocationSecretRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.DeleteLocationSecretResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.DeleteLocationSecretResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.deleteLocationSecret =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/DeleteLocationSecret',
      request,
      metadata || {},
      methodDescriptor_AppService_DeleteLocationSecret,
      callback);
};


/**
 * @param {!proto.viam.app.v1.DeleteLocationSecretRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.DeleteLocationSecretResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.deleteLocationSecret =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/DeleteLocationSecret',
      request,
      metadata || {},
      methodDescriptor_AppService_DeleteLocationSecret);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.GetphysicalDeviceRequest,
 *   !proto.viam.app.v1.GetphysicalDeviceResponse>}
 */
const methodDescriptor_AppService_GetphysicalDevice = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/GetphysicalDevice',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.GetphysicalDeviceRequest,
  proto.viam.app.v1.GetphysicalDeviceResponse,
  /**
   * @param {!proto.viam.app.v1.GetphysicalDeviceRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.GetphysicalDeviceResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.GetphysicalDeviceRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.GetphysicalDeviceResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.GetphysicalDeviceResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.getphysicalDevice =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/GetphysicalDevice',
      request,
      metadata || {},
      methodDescriptor_AppService_GetphysicalDevice,
      callback);
};


/**
 * @param {!proto.viam.app.v1.GetphysicalDeviceRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.GetphysicalDeviceResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.getphysicalDevice =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/GetphysicalDevice',
      request,
      metadata || {},
      methodDescriptor_AppService_GetphysicalDevice);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.GetRoverRentalphysicalDevicesRequest,
 *   !proto.viam.app.v1.GetRoverRentalphysicalDevicesResponse>}
 */
const methodDescriptor_AppService_GetRoverRentalphysicalDevices = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/GetRoverRentalphysicalDevices',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.GetRoverRentalphysicalDevicesRequest,
  proto.viam.app.v1.GetRoverRentalphysicalDevicesResponse,
  /**
   * @param {!proto.viam.app.v1.GetRoverRentalphysicalDevicesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.GetRoverRentalphysicalDevicesResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.GetRoverRentalphysicalDevicesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.GetRoverRentalphysicalDevicesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.GetRoverRentalphysicalDevicesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.getRoverRentalphysicalDevices =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/GetRoverRentalphysicalDevices',
      request,
      metadata || {},
      methodDescriptor_AppService_GetRoverRentalphysicalDevices,
      callback);
};


/**
 * @param {!proto.viam.app.v1.GetRoverRentalphysicalDevicesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.GetRoverRentalphysicalDevicesResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.getRoverRentalphysicalDevices =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/GetRoverRentalphysicalDevices',
      request,
      metadata || {},
      methodDescriptor_AppService_GetRoverRentalphysicalDevices);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.GetphysicalDevicePartsRequest,
 *   !proto.viam.app.v1.GetphysicalDevicePartsResponse>}
 */
const methodDescriptor_AppService_GetphysicalDeviceParts = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/GetphysicalDeviceParts',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.GetphysicalDevicePartsRequest,
  proto.viam.app.v1.GetphysicalDevicePartsResponse,
  /**
   * @param {!proto.viam.app.v1.GetphysicalDevicePartsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.GetphysicalDevicePartsResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.GetphysicalDevicePartsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.GetphysicalDevicePartsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.GetphysicalDevicePartsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.getphysicalDeviceParts =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/GetphysicalDeviceParts',
      request,
      metadata || {},
      methodDescriptor_AppService_GetphysicalDeviceParts,
      callback);
};


/**
 * @param {!proto.viam.app.v1.GetphysicalDevicePartsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.GetphysicalDevicePartsResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.getphysicalDeviceParts =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/GetphysicalDeviceParts',
      request,
      metadata || {},
      methodDescriptor_AppService_GetphysicalDeviceParts);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.GetphysicalDevicePartRequest,
 *   !proto.viam.app.v1.GetphysicalDevicePartResponse>}
 */
const methodDescriptor_AppService_GetphysicalDevicePart = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/GetphysicalDevicePart',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.GetphysicalDevicePartRequest,
  proto.viam.app.v1.GetphysicalDevicePartResponse,
  /**
   * @param {!proto.viam.app.v1.GetphysicalDevicePartRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.GetphysicalDevicePartResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.GetphysicalDevicePartRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.GetphysicalDevicePartResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.GetphysicalDevicePartResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.getphysicalDevicePart =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/GetphysicalDevicePart',
      request,
      metadata || {},
      methodDescriptor_AppService_GetphysicalDevicePart,
      callback);
};


/**
 * @param {!proto.viam.app.v1.GetphysicalDevicePartRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.GetphysicalDevicePartResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.getphysicalDevicePart =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/GetphysicalDevicePart',
      request,
      metadata || {},
      methodDescriptor_AppService_GetphysicalDevicePart);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.GetphysicalDevicePartLogsRequest,
 *   !proto.viam.app.v1.GetphysicalDevicePartLogsResponse>}
 */
const methodDescriptor_AppService_GetphysicalDevicePartLogs = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/GetphysicalDevicePartLogs',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.GetphysicalDevicePartLogsRequest,
  proto.viam.app.v1.GetphysicalDevicePartLogsResponse,
  /**
   * @param {!proto.viam.app.v1.GetphysicalDevicePartLogsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.GetphysicalDevicePartLogsResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.GetphysicalDevicePartLogsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.GetphysicalDevicePartLogsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.GetphysicalDevicePartLogsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.getphysicalDevicePartLogs =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/GetphysicalDevicePartLogs',
      request,
      metadata || {},
      methodDescriptor_AppService_GetphysicalDevicePartLogs,
      callback);
};


/**
 * @param {!proto.viam.app.v1.GetphysicalDevicePartLogsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.GetphysicalDevicePartLogsResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.getphysicalDevicePartLogs =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/GetphysicalDevicePartLogs',
      request,
      metadata || {},
      methodDescriptor_AppService_GetphysicalDevicePartLogs);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.TailphysicalDevicePartLogsRequest,
 *   !proto.viam.app.v1.TailphysicalDevicePartLogsResponse>}
 */
const methodDescriptor_AppService_TailphysicalDevicePartLogs = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/TailphysicalDevicePartLogs',
  grpc.web.MethodType.SERVER_STREAMING,
  proto.viam.app.v1.TailphysicalDevicePartLogsRequest,
  proto.viam.app.v1.TailphysicalDevicePartLogsResponse,
  /**
   * @param {!proto.viam.app.v1.TailphysicalDevicePartLogsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.TailphysicalDevicePartLogsResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.TailphysicalDevicePartLogsRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.TailphysicalDevicePartLogsResponse>}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.tailphysicalDevicePartLogs =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/viam.app.v1.AppService/TailphysicalDevicePartLogs',
      request,
      metadata || {},
      methodDescriptor_AppService_TailphysicalDevicePartLogs);
};


/**
 * @param {!proto.viam.app.v1.TailphysicalDevicePartLogsRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.TailphysicalDevicePartLogsResponse>}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.tailphysicalDevicePartLogs =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/viam.app.v1.AppService/TailphysicalDevicePartLogs',
      request,
      metadata || {},
      methodDescriptor_AppService_TailphysicalDevicePartLogs);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.GetphysicalDevicePartHistoryRequest,
 *   !proto.viam.app.v1.GetphysicalDevicePartHistoryResponse>}
 */
const methodDescriptor_AppService_GetphysicalDevicePartHistory = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/GetphysicalDevicePartHistory',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.GetphysicalDevicePartHistoryRequest,
  proto.viam.app.v1.GetphysicalDevicePartHistoryResponse,
  /**
   * @param {!proto.viam.app.v1.GetphysicalDevicePartHistoryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.GetphysicalDevicePartHistoryResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.GetphysicalDevicePartHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.GetphysicalDevicePartHistoryResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.GetphysicalDevicePartHistoryResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.getphysicalDevicePartHistory =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/GetphysicalDevicePartHistory',
      request,
      metadata || {},
      methodDescriptor_AppService_GetphysicalDevicePartHistory,
      callback);
};


/**
 * @param {!proto.viam.app.v1.GetphysicalDevicePartHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.GetphysicalDevicePartHistoryResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.getphysicalDevicePartHistory =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/GetphysicalDevicePartHistory',
      request,
      metadata || {},
      methodDescriptor_AppService_GetphysicalDevicePartHistory);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.UpdatephysicalDevicePartRequest,
 *   !proto.viam.app.v1.UpdatephysicalDevicePartResponse>}
 */
const methodDescriptor_AppService_UpdatephysicalDevicePart = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/UpdatephysicalDevicePart',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.UpdatephysicalDevicePartRequest,
  proto.viam.app.v1.UpdatephysicalDevicePartResponse,
  /**
   * @param {!proto.viam.app.v1.UpdatephysicalDevicePartRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.UpdatephysicalDevicePartResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.UpdatephysicalDevicePartRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.UpdatephysicalDevicePartResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.UpdatephysicalDevicePartResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.updatephysicalDevicePart =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/UpdatephysicalDevicePart',
      request,
      metadata || {},
      methodDescriptor_AppService_UpdatephysicalDevicePart,
      callback);
};


/**
 * @param {!proto.viam.app.v1.UpdatephysicalDevicePartRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.UpdatephysicalDevicePartResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.updatephysicalDevicePart =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/UpdatephysicalDevicePart',
      request,
      metadata || {},
      methodDescriptor_AppService_UpdatephysicalDevicePart);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.NewphysicalDevicePartRequest,
 *   !proto.viam.app.v1.NewphysicalDevicePartResponse>}
 */
const methodDescriptor_AppService_NewphysicalDevicePart = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/NewphysicalDevicePart',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.NewphysicalDevicePartRequest,
  proto.viam.app.v1.NewphysicalDevicePartResponse,
  /**
   * @param {!proto.viam.app.v1.NewphysicalDevicePartRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.NewphysicalDevicePartResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.NewphysicalDevicePartRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.NewphysicalDevicePartResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.NewphysicalDevicePartResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.newphysicalDevicePart =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/NewphysicalDevicePart',
      request,
      metadata || {},
      methodDescriptor_AppService_NewphysicalDevicePart,
      callback);
};


/**
 * @param {!proto.viam.app.v1.NewphysicalDevicePartRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.NewphysicalDevicePartResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.newphysicalDevicePart =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/NewphysicalDevicePart',
      request,
      metadata || {},
      methodDescriptor_AppService_NewphysicalDevicePart);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.DeletephysicalDevicePartRequest,
 *   !proto.viam.app.v1.DeletephysicalDevicePartResponse>}
 */
const methodDescriptor_AppService_DeletephysicalDevicePart = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/DeletephysicalDevicePart',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.DeletephysicalDevicePartRequest,
  proto.viam.app.v1.DeletephysicalDevicePartResponse,
  /**
   * @param {!proto.viam.app.v1.DeletephysicalDevicePartRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.DeletephysicalDevicePartResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.DeletephysicalDevicePartRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.DeletephysicalDevicePartResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.DeletephysicalDevicePartResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.deletephysicalDevicePart =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/DeletephysicalDevicePart',
      request,
      metadata || {},
      methodDescriptor_AppService_DeletephysicalDevicePart,
      callback);
};


/**
 * @param {!proto.viam.app.v1.DeletephysicalDevicePartRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.DeletephysicalDevicePartResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.deletephysicalDevicePart =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/DeletephysicalDevicePart',
      request,
      metadata || {},
      methodDescriptor_AppService_DeletephysicalDevicePart);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.GetphysicalDeviceAPIKeysRequest,
 *   !proto.viam.app.v1.GetphysicalDeviceAPIKeysResponse>}
 */
const methodDescriptor_AppService_GetphysicalDeviceAPIKeys = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/GetphysicalDeviceAPIKeys',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.GetphysicalDeviceAPIKeysRequest,
  proto.viam.app.v1.GetphysicalDeviceAPIKeysResponse,
  /**
   * @param {!proto.viam.app.v1.GetphysicalDeviceAPIKeysRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.GetphysicalDeviceAPIKeysResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.GetphysicalDeviceAPIKeysRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.GetphysicalDeviceAPIKeysResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.GetphysicalDeviceAPIKeysResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.getphysicalDeviceAPIKeys =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/GetphysicalDeviceAPIKeys',
      request,
      metadata || {},
      methodDescriptor_AppService_GetphysicalDeviceAPIKeys,
      callback);
};


/**
 * @param {!proto.viam.app.v1.GetphysicalDeviceAPIKeysRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.GetphysicalDeviceAPIKeysResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.getphysicalDeviceAPIKeys =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/GetphysicalDeviceAPIKeys',
      request,
      metadata || {},
      methodDescriptor_AppService_GetphysicalDeviceAPIKeys);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.MarkPartAsMainRequest,
 *   !proto.viam.app.v1.MarkPartAsMainResponse>}
 */
const methodDescriptor_AppService_MarkPartAsMain = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/MarkPartAsMain',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.MarkPartAsMainRequest,
  proto.viam.app.v1.MarkPartAsMainResponse,
  /**
   * @param {!proto.viam.app.v1.MarkPartAsMainRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.MarkPartAsMainResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.MarkPartAsMainRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.MarkPartAsMainResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.MarkPartAsMainResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.markPartAsMain =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/MarkPartAsMain',
      request,
      metadata || {},
      methodDescriptor_AppService_MarkPartAsMain,
      callback);
};


/**
 * @param {!proto.viam.app.v1.MarkPartAsMainRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.MarkPartAsMainResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.markPartAsMain =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/MarkPartAsMain',
      request,
      metadata || {},
      methodDescriptor_AppService_MarkPartAsMain);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.MarkPartForRestartRequest,
 *   !proto.viam.app.v1.MarkPartForRestartResponse>}
 */
const methodDescriptor_AppService_MarkPartForRestart = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/MarkPartForRestart',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.MarkPartForRestartRequest,
  proto.viam.app.v1.MarkPartForRestartResponse,
  /**
   * @param {!proto.viam.app.v1.MarkPartForRestartRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.MarkPartForRestartResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.MarkPartForRestartRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.MarkPartForRestartResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.MarkPartForRestartResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.markPartForRestart =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/MarkPartForRestart',
      request,
      metadata || {},
      methodDescriptor_AppService_MarkPartForRestart,
      callback);
};


/**
 * @param {!proto.viam.app.v1.MarkPartForRestartRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.MarkPartForRestartResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.markPartForRestart =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/MarkPartForRestart',
      request,
      metadata || {},
      methodDescriptor_AppService_MarkPartForRestart);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.CreatephysicalDevicePartSecretRequest,
 *   !proto.viam.app.v1.CreatephysicalDevicePartSecretResponse>}
 */
const methodDescriptor_AppService_CreatephysicalDevicePartSecret = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/CreatephysicalDevicePartSecret',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.CreatephysicalDevicePartSecretRequest,
  proto.viam.app.v1.CreatephysicalDevicePartSecretResponse,
  /**
   * @param {!proto.viam.app.v1.CreatephysicalDevicePartSecretRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.CreatephysicalDevicePartSecretResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.CreatephysicalDevicePartSecretRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.CreatephysicalDevicePartSecretResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.CreatephysicalDevicePartSecretResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.createphysicalDevicePartSecret =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/CreatephysicalDevicePartSecret',
      request,
      metadata || {},
      methodDescriptor_AppService_CreatephysicalDevicePartSecret,
      callback);
};


/**
 * @param {!proto.viam.app.v1.CreatephysicalDevicePartSecretRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.CreatephysicalDevicePartSecretResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.createphysicalDevicePartSecret =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/CreatephysicalDevicePartSecret',
      request,
      metadata || {},
      methodDescriptor_AppService_CreatephysicalDevicePartSecret);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.DeletephysicalDevicePartSecretRequest,
 *   !proto.viam.app.v1.DeletephysicalDevicePartSecretResponse>}
 */
const methodDescriptor_AppService_DeletephysicalDevicePartSecret = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/DeletephysicalDevicePartSecret',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.DeletephysicalDevicePartSecretRequest,
  proto.viam.app.v1.DeletephysicalDevicePartSecretResponse,
  /**
   * @param {!proto.viam.app.v1.DeletephysicalDevicePartSecretRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.DeletephysicalDevicePartSecretResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.DeletephysicalDevicePartSecretRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.DeletephysicalDevicePartSecretResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.DeletephysicalDevicePartSecretResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.deletephysicalDevicePartSecret =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/DeletephysicalDevicePartSecret',
      request,
      metadata || {},
      methodDescriptor_AppService_DeletephysicalDevicePartSecret,
      callback);
};


/**
 * @param {!proto.viam.app.v1.DeletephysicalDevicePartSecretRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.DeletephysicalDevicePartSecretResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.deletephysicalDevicePartSecret =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/DeletephysicalDevicePartSecret',
      request,
      metadata || {},
      methodDescriptor_AppService_DeletephysicalDevicePartSecret);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.ListphysicalDevicesRequest,
 *   !proto.viam.app.v1.ListphysicalDevicesResponse>}
 */
const methodDescriptor_AppService_ListphysicalDevices = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/ListphysicalDevices',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.ListphysicalDevicesRequest,
  proto.viam.app.v1.ListphysicalDevicesResponse,
  /**
   * @param {!proto.viam.app.v1.ListphysicalDevicesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.ListphysicalDevicesResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.ListphysicalDevicesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.ListphysicalDevicesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.ListphysicalDevicesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.listphysicalDevices =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/ListphysicalDevices',
      request,
      metadata || {},
      methodDescriptor_AppService_ListphysicalDevices,
      callback);
};


/**
 * @param {!proto.viam.app.v1.ListphysicalDevicesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.ListphysicalDevicesResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.listphysicalDevices =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/ListphysicalDevices',
      request,
      metadata || {},
      methodDescriptor_AppService_ListphysicalDevices);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.NewphysicalDeviceRequest,
 *   !proto.viam.app.v1.NewphysicalDeviceResponse>}
 */
const methodDescriptor_AppService_NewphysicalDevice = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/NewphysicalDevice',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.NewphysicalDeviceRequest,
  proto.viam.app.v1.NewphysicalDeviceResponse,
  /**
   * @param {!proto.viam.app.v1.NewphysicalDeviceRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.NewphysicalDeviceResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.NewphysicalDeviceRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.NewphysicalDeviceResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.NewphysicalDeviceResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.newphysicalDevice =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/NewphysicalDevice',
      request,
      metadata || {},
      methodDescriptor_AppService_NewphysicalDevice,
      callback);
};


/**
 * @param {!proto.viam.app.v1.NewphysicalDeviceRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.NewphysicalDeviceResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.newphysicalDevice =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/NewphysicalDevice',
      request,
      metadata || {},
      methodDescriptor_AppService_NewphysicalDevice);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.UpdatephysicalDeviceRequest,
 *   !proto.viam.app.v1.UpdatephysicalDeviceResponse>}
 */
const methodDescriptor_AppService_UpdatephysicalDevice = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/UpdatephysicalDevice',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.UpdatephysicalDeviceRequest,
  proto.viam.app.v1.UpdatephysicalDeviceResponse,
  /**
   * @param {!proto.viam.app.v1.UpdatephysicalDeviceRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.UpdatephysicalDeviceResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.UpdatephysicalDeviceRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.UpdatephysicalDeviceResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.UpdatephysicalDeviceResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.updatephysicalDevice =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/UpdatephysicalDevice',
      request,
      metadata || {},
      methodDescriptor_AppService_UpdatephysicalDevice,
      callback);
};


/**
 * @param {!proto.viam.app.v1.UpdatephysicalDeviceRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.UpdatephysicalDeviceResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.updatephysicalDevice =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/UpdatephysicalDevice',
      request,
      metadata || {},
      methodDescriptor_AppService_UpdatephysicalDevice);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.DeletephysicalDeviceRequest,
 *   !proto.viam.app.v1.DeletephysicalDeviceResponse>}
 */
const methodDescriptor_AppService_DeletephysicalDevice = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/DeletephysicalDevice',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.DeletephysicalDeviceRequest,
  proto.viam.app.v1.DeletephysicalDeviceResponse,
  /**
   * @param {!proto.viam.app.v1.DeletephysicalDeviceRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.DeletephysicalDeviceResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.DeletephysicalDeviceRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.DeletephysicalDeviceResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.DeletephysicalDeviceResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.deletephysicalDevice =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/DeletephysicalDevice',
      request,
      metadata || {},
      methodDescriptor_AppService_DeletephysicalDevice,
      callback);
};


/**
 * @param {!proto.viam.app.v1.DeletephysicalDeviceRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.DeletephysicalDeviceResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.deletephysicalDevice =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/DeletephysicalDevice',
      request,
      metadata || {},
      methodDescriptor_AppService_DeletephysicalDevice);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.ListFragmentsRequest,
 *   !proto.viam.app.v1.ListFragmentsResponse>}
 */
const methodDescriptor_AppService_ListFragments = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/ListFragments',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.ListFragmentsRequest,
  proto.viam.app.v1.ListFragmentsResponse,
  /**
   * @param {!proto.viam.app.v1.ListFragmentsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.ListFragmentsResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.ListFragmentsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.ListFragmentsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.ListFragmentsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.listFragments =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/ListFragments',
      request,
      metadata || {},
      methodDescriptor_AppService_ListFragments,
      callback);
};


/**
 * @param {!proto.viam.app.v1.ListFragmentsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.ListFragmentsResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.listFragments =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/ListFragments',
      request,
      metadata || {},
      methodDescriptor_AppService_ListFragments);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.GetFragmentRequest,
 *   !proto.viam.app.v1.GetFragmentResponse>}
 */
const methodDescriptor_AppService_GetFragment = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/GetFragment',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.GetFragmentRequest,
  proto.viam.app.v1.GetFragmentResponse,
  /**
   * @param {!proto.viam.app.v1.GetFragmentRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.GetFragmentResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.GetFragmentRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.GetFragmentResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.GetFragmentResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.getFragment =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/GetFragment',
      request,
      metadata || {},
      methodDescriptor_AppService_GetFragment,
      callback);
};


/**
 * @param {!proto.viam.app.v1.GetFragmentRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.GetFragmentResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.getFragment =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/GetFragment',
      request,
      metadata || {},
      methodDescriptor_AppService_GetFragment);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.CreateFragmentRequest,
 *   !proto.viam.app.v1.CreateFragmentResponse>}
 */
const methodDescriptor_AppService_CreateFragment = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/CreateFragment',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.CreateFragmentRequest,
  proto.viam.app.v1.CreateFragmentResponse,
  /**
   * @param {!proto.viam.app.v1.CreateFragmentRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.CreateFragmentResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.CreateFragmentRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.CreateFragmentResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.CreateFragmentResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.createFragment =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/CreateFragment',
      request,
      metadata || {},
      methodDescriptor_AppService_CreateFragment,
      callback);
};


/**
 * @param {!proto.viam.app.v1.CreateFragmentRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.CreateFragmentResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.createFragment =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/CreateFragment',
      request,
      metadata || {},
      methodDescriptor_AppService_CreateFragment);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.UpdateFragmentRequest,
 *   !proto.viam.app.v1.UpdateFragmentResponse>}
 */
const methodDescriptor_AppService_UpdateFragment = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/UpdateFragment',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.UpdateFragmentRequest,
  proto.viam.app.v1.UpdateFragmentResponse,
  /**
   * @param {!proto.viam.app.v1.UpdateFragmentRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.UpdateFragmentResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.UpdateFragmentRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.UpdateFragmentResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.UpdateFragmentResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.updateFragment =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/UpdateFragment',
      request,
      metadata || {},
      methodDescriptor_AppService_UpdateFragment,
      callback);
};


/**
 * @param {!proto.viam.app.v1.UpdateFragmentRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.UpdateFragmentResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.updateFragment =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/UpdateFragment',
      request,
      metadata || {},
      methodDescriptor_AppService_UpdateFragment);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.DeleteFragmentRequest,
 *   !proto.viam.app.v1.DeleteFragmentResponse>}
 */
const methodDescriptor_AppService_DeleteFragment = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/DeleteFragment',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.DeleteFragmentRequest,
  proto.viam.app.v1.DeleteFragmentResponse,
  /**
   * @param {!proto.viam.app.v1.DeleteFragmentRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.DeleteFragmentResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.DeleteFragmentRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.DeleteFragmentResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.DeleteFragmentResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.deleteFragment =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/DeleteFragment',
      request,
      metadata || {},
      methodDescriptor_AppService_DeleteFragment,
      callback);
};


/**
 * @param {!proto.viam.app.v1.DeleteFragmentRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.DeleteFragmentResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.deleteFragment =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/DeleteFragment',
      request,
      metadata || {},
      methodDescriptor_AppService_DeleteFragment);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.AddRoleRequest,
 *   !proto.viam.app.v1.AddRoleResponse>}
 */
const methodDescriptor_AppService_AddRole = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/AddRole',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.AddRoleRequest,
  proto.viam.app.v1.AddRoleResponse,
  /**
   * @param {!proto.viam.app.v1.AddRoleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.AddRoleResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.AddRoleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.AddRoleResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.AddRoleResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.addRole =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/AddRole',
      request,
      metadata || {},
      methodDescriptor_AppService_AddRole,
      callback);
};


/**
 * @param {!proto.viam.app.v1.AddRoleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.AddRoleResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.addRole =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/AddRole',
      request,
      metadata || {},
      methodDescriptor_AppService_AddRole);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.RemoveRoleRequest,
 *   !proto.viam.app.v1.RemoveRoleResponse>}
 */
const methodDescriptor_AppService_RemoveRole = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/RemoveRole',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.RemoveRoleRequest,
  proto.viam.app.v1.RemoveRoleResponse,
  /**
   * @param {!proto.viam.app.v1.RemoveRoleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.RemoveRoleResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.RemoveRoleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.RemoveRoleResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.RemoveRoleResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.removeRole =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/RemoveRole',
      request,
      metadata || {},
      methodDescriptor_AppService_RemoveRole,
      callback);
};


/**
 * @param {!proto.viam.app.v1.RemoveRoleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.RemoveRoleResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.removeRole =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/RemoveRole',
      request,
      metadata || {},
      methodDescriptor_AppService_RemoveRole);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.ChangeRoleRequest,
 *   !proto.viam.app.v1.ChangeRoleResponse>}
 */
const methodDescriptor_AppService_ChangeRole = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/ChangeRole',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.ChangeRoleRequest,
  proto.viam.app.v1.ChangeRoleResponse,
  /**
   * @param {!proto.viam.app.v1.ChangeRoleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.ChangeRoleResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.ChangeRoleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.ChangeRoleResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.ChangeRoleResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.changeRole =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/ChangeRole',
      request,
      metadata || {},
      methodDescriptor_AppService_ChangeRole,
      callback);
};


/**
 * @param {!proto.viam.app.v1.ChangeRoleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.ChangeRoleResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.changeRole =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/ChangeRole',
      request,
      metadata || {},
      methodDescriptor_AppService_ChangeRole);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.ListAuthorizationsRequest,
 *   !proto.viam.app.v1.ListAuthorizationsResponse>}
 */
const methodDescriptor_AppService_ListAuthorizations = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/ListAuthorizations',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.ListAuthorizationsRequest,
  proto.viam.app.v1.ListAuthorizationsResponse,
  /**
   * @param {!proto.viam.app.v1.ListAuthorizationsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.ListAuthorizationsResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.ListAuthorizationsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.ListAuthorizationsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.ListAuthorizationsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.listAuthorizations =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/ListAuthorizations',
      request,
      metadata || {},
      methodDescriptor_AppService_ListAuthorizations,
      callback);
};


/**
 * @param {!proto.viam.app.v1.ListAuthorizationsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.ListAuthorizationsResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.listAuthorizations =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/ListAuthorizations',
      request,
      metadata || {},
      methodDescriptor_AppService_ListAuthorizations);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.CheckPermissionsRequest,
 *   !proto.viam.app.v1.CheckPermissionsResponse>}
 */
const methodDescriptor_AppService_CheckPermissions = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/CheckPermissions',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.CheckPermissionsRequest,
  proto.viam.app.v1.CheckPermissionsResponse,
  /**
   * @param {!proto.viam.app.v1.CheckPermissionsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.CheckPermissionsResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.CheckPermissionsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.CheckPermissionsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.CheckPermissionsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.checkPermissions =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/CheckPermissions',
      request,
      metadata || {},
      methodDescriptor_AppService_CheckPermissions,
      callback);
};


/**
 * @param {!proto.viam.app.v1.CheckPermissionsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.CheckPermissionsResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.checkPermissions =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/CheckPermissions',
      request,
      metadata || {},
      methodDescriptor_AppService_CheckPermissions);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.GetRegistryItemRequest,
 *   !proto.viam.app.v1.GetRegistryItemResponse>}
 */
const methodDescriptor_AppService_GetRegistryItem = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/GetRegistryItem',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.GetRegistryItemRequest,
  proto.viam.app.v1.GetRegistryItemResponse,
  /**
   * @param {!proto.viam.app.v1.GetRegistryItemRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.GetRegistryItemResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.GetRegistryItemRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.GetRegistryItemResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.GetRegistryItemResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.getRegistryItem =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/GetRegistryItem',
      request,
      metadata || {},
      methodDescriptor_AppService_GetRegistryItem,
      callback);
};


/**
 * @param {!proto.viam.app.v1.GetRegistryItemRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.GetRegistryItemResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.getRegistryItem =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/GetRegistryItem',
      request,
      metadata || {},
      methodDescriptor_AppService_GetRegistryItem);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.CreateRegistryItemRequest,
 *   !proto.viam.app.v1.CreateRegistryItemResponse>}
 */
const methodDescriptor_AppService_CreateRegistryItem = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/CreateRegistryItem',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.CreateRegistryItemRequest,
  proto.viam.app.v1.CreateRegistryItemResponse,
  /**
   * @param {!proto.viam.app.v1.CreateRegistryItemRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.CreateRegistryItemResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.CreateRegistryItemRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.CreateRegistryItemResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.CreateRegistryItemResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.createRegistryItem =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/CreateRegistryItem',
      request,
      metadata || {},
      methodDescriptor_AppService_CreateRegistryItem,
      callback);
};


/**
 * @param {!proto.viam.app.v1.CreateRegistryItemRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.CreateRegistryItemResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.createRegistryItem =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/CreateRegistryItem',
      request,
      metadata || {},
      methodDescriptor_AppService_CreateRegistryItem);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.UpdateRegistryItemRequest,
 *   !proto.viam.app.v1.UpdateRegistryItemResponse>}
 */
const methodDescriptor_AppService_UpdateRegistryItem = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/UpdateRegistryItem',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.UpdateRegistryItemRequest,
  proto.viam.app.v1.UpdateRegistryItemResponse,
  /**
   * @param {!proto.viam.app.v1.UpdateRegistryItemRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.UpdateRegistryItemResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.UpdateRegistryItemRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.UpdateRegistryItemResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.UpdateRegistryItemResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.updateRegistryItem =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/UpdateRegistryItem',
      request,
      metadata || {},
      methodDescriptor_AppService_UpdateRegistryItem,
      callback);
};


/**
 * @param {!proto.viam.app.v1.UpdateRegistryItemRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.UpdateRegistryItemResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.updateRegistryItem =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/UpdateRegistryItem',
      request,
      metadata || {},
      methodDescriptor_AppService_UpdateRegistryItem);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.ListRegistryItemsRequest,
 *   !proto.viam.app.v1.ListRegistryItemsResponse>}
 */
const methodDescriptor_AppService_ListRegistryItems = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/ListRegistryItems',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.ListRegistryItemsRequest,
  proto.viam.app.v1.ListRegistryItemsResponse,
  /**
   * @param {!proto.viam.app.v1.ListRegistryItemsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.ListRegistryItemsResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.ListRegistryItemsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.ListRegistryItemsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.ListRegistryItemsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.listRegistryItems =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/ListRegistryItems',
      request,
      metadata || {},
      methodDescriptor_AppService_ListRegistryItems,
      callback);
};


/**
 * @param {!proto.viam.app.v1.ListRegistryItemsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.ListRegistryItemsResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.listRegistryItems =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/ListRegistryItems',
      request,
      metadata || {},
      methodDescriptor_AppService_ListRegistryItems);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.DeleteRegistryItemRequest,
 *   !proto.viam.app.v1.DeleteRegistryItemResponse>}
 */
const methodDescriptor_AppService_DeleteRegistryItem = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/DeleteRegistryItem',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.DeleteRegistryItemRequest,
  proto.viam.app.v1.DeleteRegistryItemResponse,
  /**
   * @param {!proto.viam.app.v1.DeleteRegistryItemRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.DeleteRegistryItemResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.DeleteRegistryItemRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.DeleteRegistryItemResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.DeleteRegistryItemResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.deleteRegistryItem =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/DeleteRegistryItem',
      request,
      metadata || {},
      methodDescriptor_AppService_DeleteRegistryItem,
      callback);
};


/**
 * @param {!proto.viam.app.v1.DeleteRegistryItemRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.DeleteRegistryItemResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.deleteRegistryItem =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/DeleteRegistryItem',
      request,
      metadata || {},
      methodDescriptor_AppService_DeleteRegistryItem);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.CreateModuleRequest,
 *   !proto.viam.app.v1.CreateModuleResponse>}
 */
const methodDescriptor_AppService_CreateModule = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/CreateModule',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.CreateModuleRequest,
  proto.viam.app.v1.CreateModuleResponse,
  /**
   * @param {!proto.viam.app.v1.CreateModuleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.CreateModuleResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.CreateModuleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.CreateModuleResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.CreateModuleResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.createModule =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/CreateModule',
      request,
      metadata || {},
      methodDescriptor_AppService_CreateModule,
      callback);
};


/**
 * @param {!proto.viam.app.v1.CreateModuleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.CreateModuleResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.createModule =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/CreateModule',
      request,
      metadata || {},
      methodDescriptor_AppService_CreateModule);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.UpdateModuleRequest,
 *   !proto.viam.app.v1.UpdateModuleResponse>}
 */
const methodDescriptor_AppService_UpdateModule = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/UpdateModule',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.UpdateModuleRequest,
  proto.viam.app.v1.UpdateModuleResponse,
  /**
   * @param {!proto.viam.app.v1.UpdateModuleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.UpdateModuleResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.UpdateModuleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.UpdateModuleResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.UpdateModuleResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.updateModule =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/UpdateModule',
      request,
      metadata || {},
      methodDescriptor_AppService_UpdateModule,
      callback);
};


/**
 * @param {!proto.viam.app.v1.UpdateModuleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.UpdateModuleResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.updateModule =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/UpdateModule',
      request,
      metadata || {},
      methodDescriptor_AppService_UpdateModule);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.GetModuleRequest,
 *   !proto.viam.app.v1.GetModuleResponse>}
 */
const methodDescriptor_AppService_GetModule = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/GetModule',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.GetModuleRequest,
  proto.viam.app.v1.GetModuleResponse,
  /**
   * @param {!proto.viam.app.v1.GetModuleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.GetModuleResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.GetModuleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.GetModuleResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.GetModuleResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.getModule =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/GetModule',
      request,
      metadata || {},
      methodDescriptor_AppService_GetModule,
      callback);
};


/**
 * @param {!proto.viam.app.v1.GetModuleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.GetModuleResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.getModule =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/GetModule',
      request,
      metadata || {},
      methodDescriptor_AppService_GetModule);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.ListModulesRequest,
 *   !proto.viam.app.v1.ListModulesResponse>}
 */
const methodDescriptor_AppService_ListModules = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/ListModules',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.ListModulesRequest,
  proto.viam.app.v1.ListModulesResponse,
  /**
   * @param {!proto.viam.app.v1.ListModulesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.ListModulesResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.ListModulesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.ListModulesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.ListModulesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.listModules =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/ListModules',
      request,
      metadata || {},
      methodDescriptor_AppService_ListModules,
      callback);
};


/**
 * @param {!proto.viam.app.v1.ListModulesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.ListModulesResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.listModules =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/ListModules',
      request,
      metadata || {},
      methodDescriptor_AppService_ListModules);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.CreateKeyRequest,
 *   !proto.viam.app.v1.CreateKeyResponse>}
 */
const methodDescriptor_AppService_CreateKey = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/CreateKey',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.CreateKeyRequest,
  proto.viam.app.v1.CreateKeyResponse,
  /**
   * @param {!proto.viam.app.v1.CreateKeyRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.CreateKeyResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.CreateKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.CreateKeyResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.CreateKeyResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.createKey =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/CreateKey',
      request,
      metadata || {},
      methodDescriptor_AppService_CreateKey,
      callback);
};


/**
 * @param {!proto.viam.app.v1.CreateKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.CreateKeyResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.createKey =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/CreateKey',
      request,
      metadata || {},
      methodDescriptor_AppService_CreateKey);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.DeleteKeyRequest,
 *   !proto.viam.app.v1.DeleteKeyResponse>}
 */
const methodDescriptor_AppService_DeleteKey = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/DeleteKey',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.DeleteKeyRequest,
  proto.viam.app.v1.DeleteKeyResponse,
  /**
   * @param {!proto.viam.app.v1.DeleteKeyRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.DeleteKeyResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.DeleteKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.DeleteKeyResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.DeleteKeyResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.deleteKey =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/DeleteKey',
      request,
      metadata || {},
      methodDescriptor_AppService_DeleteKey,
      callback);
};


/**
 * @param {!proto.viam.app.v1.DeleteKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.DeleteKeyResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.deleteKey =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/DeleteKey',
      request,
      metadata || {},
      methodDescriptor_AppService_DeleteKey);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.ListKeysRequest,
 *   !proto.viam.app.v1.ListKeysResponse>}
 */
const methodDescriptor_AppService_ListKeys = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/ListKeys',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.ListKeysRequest,
  proto.viam.app.v1.ListKeysResponse,
  /**
   * @param {!proto.viam.app.v1.ListKeysRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.ListKeysResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.ListKeysRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.ListKeysResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.ListKeysResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.listKeys =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/ListKeys',
      request,
      metadata || {},
      methodDescriptor_AppService_ListKeys,
      callback);
};


/**
 * @param {!proto.viam.app.v1.ListKeysRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.ListKeysResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.listKeys =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/ListKeys',
      request,
      metadata || {},
      methodDescriptor_AppService_ListKeys);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.RenameKeyRequest,
 *   !proto.viam.app.v1.RenameKeyResponse>}
 */
const methodDescriptor_AppService_RenameKey = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/RenameKey',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.RenameKeyRequest,
  proto.viam.app.v1.RenameKeyResponse,
  /**
   * @param {!proto.viam.app.v1.RenameKeyRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.RenameKeyResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.RenameKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.RenameKeyResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.RenameKeyResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.renameKey =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/RenameKey',
      request,
      metadata || {},
      methodDescriptor_AppService_RenameKey,
      callback);
};


/**
 * @param {!proto.viam.app.v1.RenameKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.RenameKeyResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.renameKey =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/RenameKey',
      request,
      metadata || {},
      methodDescriptor_AppService_RenameKey);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.RotateKeyRequest,
 *   !proto.viam.app.v1.RotateKeyResponse>}
 */
const methodDescriptor_AppService_RotateKey = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/RotateKey',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.RotateKeyRequest,
  proto.viam.app.v1.RotateKeyResponse,
  /**
   * @param {!proto.viam.app.v1.RotateKeyRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.RotateKeyResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.RotateKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.RotateKeyResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.RotateKeyResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.rotateKey =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/RotateKey',
      request,
      metadata || {},
      methodDescriptor_AppService_RotateKey,
      callback);
};


/**
 * @param {!proto.viam.app.v1.RotateKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.RotateKeyResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.rotateKey =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/RotateKey',
      request,
      metadata || {},
      methodDescriptor_AppService_RotateKey);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.viam.app.v1.CreateKeyFromExistingKeyAuthorizationsRequest,
 *   !proto.viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse>}
 */
const methodDescriptor_AppService_CreateKeyFromExistingKeyAuthorizations = new grpc.web.MethodDescriptor(
  '/viam.app.v1.AppService/CreateKeyFromExistingKeyAuthorizations',
  grpc.web.MethodType.UNARY,
  proto.viam.app.v1.CreateKeyFromExistingKeyAuthorizationsRequest,
  proto.viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse,
  /**
   * @param {!proto.viam.app.v1.CreateKeyFromExistingKeyAuthorizationsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse.deserializeBinary
);


/**
 * @param {!proto.viam.app.v1.CreateKeyFromExistingKeyAuthorizationsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.viam.app.v1.AppServiceClient.prototype.createKeyFromExistingKeyAuthorizations =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/viam.app.v1.AppService/CreateKeyFromExistingKeyAuthorizations',
      request,
      metadata || {},
      methodDescriptor_AppService_CreateKeyFromExistingKeyAuthorizations,
      callback);
};


/**
 * @param {!proto.viam.app.v1.CreateKeyFromExistingKeyAuthorizationsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse>}
 *     Promise that resolves to the response
 */
proto.viam.app.v1.AppServicePromiseClient.prototype.createKeyFromExistingKeyAuthorizations =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/viam.app.v1.AppService/CreateKeyFromExistingKeyAuthorizations',
      request,
      metadata || {},
      methodDescriptor_AppService_CreateKeyFromExistingKeyAuthorizations);
};


module.exports = proto.viam.app.v1;

