// source: app/v1/robot.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var app_v1_app_pb = require('../../app/v1/app_pb.js');
goog.object.extend(proto, app_v1_app_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var tagger_v1_tagger_pb = require('../../tagger/v1/tagger_pb.js');
goog.object.extend(proto, tagger_v1_tagger_pb);
goog.exportSymbol('proto.viam.app.v1.AgentInfo', null, global);
goog.exportSymbol('proto.viam.app.v1.AuthConfig', null, global);
goog.exportSymbol('proto.viam.app.v1.AuthHandlerConfig', null, global);
goog.exportSymbol('proto.viam.app.v1.CertificateRequest', null, global);
goog.exportSymbol('proto.viam.app.v1.CertificateResponse', null, global);
goog.exportSymbol('proto.viam.app.v1.CloudConfig', null, global);
goog.exportSymbol('proto.viam.app.v1.ComponentConfig', null, global);
goog.exportSymbol('proto.viam.app.v1.ConfigRequest', null, global);
goog.exportSymbol('proto.viam.app.v1.ConfigResponse', null, global);
goog.exportSymbol('proto.viam.app.v1.CredentialsType', null, global);
goog.exportSymbol('proto.viam.app.v1.Frame', null, global);
goog.exportSymbol('proto.viam.app.v1.LocationSecret', null, global);
goog.exportSymbol('proto.viam.app.v1.LogRequest', null, global);
goog.exportSymbol('proto.viam.app.v1.LogResponse', null, global);
goog.exportSymbol('proto.viam.app.v1.NeedsRestartRequest', null, global);
goog.exportSymbol('proto.viam.app.v1.NeedsRestartResponse', null, global);
goog.exportSymbol('proto.viam.app.v1.NetworkConfig', null, global);
goog.exportSymbol('proto.viam.app.v1.Orientation', null, global);
goog.exportSymbol('proto.viam.app.v1.Orientation.AxisAngles', null, global);
goog.exportSymbol('proto.viam.app.v1.Orientation.EulerAngles', null, global);
goog.exportSymbol('proto.viam.app.v1.Orientation.NoOrientation', null, global);
goog.exportSymbol('proto.viam.app.v1.Orientation.OrientationVectorDegrees', null, global);
goog.exportSymbol('proto.viam.app.v1.Orientation.OrientationVectorRadians', null, global);
goog.exportSymbol('proto.viam.app.v1.Orientation.Quaternion', null, global);
goog.exportSymbol('proto.viam.app.v1.Orientation.TypeCase', null, global);
goog.exportSymbol('proto.viam.app.v1.ProcessConfig', null, global);
goog.exportSymbol('proto.viam.app.v1.RemoteAuth', null, global);
goog.exportSymbol('proto.viam.app.v1.RemoteAuth.Credentials', null, global);
goog.exportSymbol('proto.viam.app.v1.RemoteConfig', null, global);
goog.exportSymbol('proto.viam.app.v1.ResourceLevelServiceConfig', null, global);
goog.exportSymbol('proto.viam.app.v1.RobotConfig', null, global);
goog.exportSymbol('proto.viam.app.v1.ServiceConfig', null, global);
goog.exportSymbol('proto.viam.app.v1.Translation', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.RobotConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.app.v1.RobotConfig.repeatedFields_, null);
};
goog.inherits(proto.viam.app.v1.RobotConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.RobotConfig.displayName = 'proto.viam.app.v1.RobotConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.LocationSecret = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.LocationSecret, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.LocationSecret.displayName = 'proto.viam.app.v1.LocationSecret';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.CloudConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.app.v1.CloudConfig.repeatedFields_, null);
};
goog.inherits(proto.viam.app.v1.CloudConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.CloudConfig.displayName = 'proto.viam.app.v1.CloudConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.ComponentConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.app.v1.ComponentConfig.repeatedFields_, null);
};
goog.inherits(proto.viam.app.v1.ComponentConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.ComponentConfig.displayName = 'proto.viam.app.v1.ComponentConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.ResourceLevelServiceConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.ResourceLevelServiceConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.ResourceLevelServiceConfig.displayName = 'proto.viam.app.v1.ResourceLevelServiceConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.ProcessConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.app.v1.ProcessConfig.repeatedFields_, null);
};
goog.inherits(proto.viam.app.v1.ProcessConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.ProcessConfig.displayName = 'proto.viam.app.v1.ProcessConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.ServiceConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.app.v1.ServiceConfig.repeatedFields_, null);
};
goog.inherits(proto.viam.app.v1.ServiceConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.ServiceConfig.displayName = 'proto.viam.app.v1.ServiceConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.NetworkConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.NetworkConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.NetworkConfig.displayName = 'proto.viam.app.v1.NetworkConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.AuthConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.app.v1.AuthConfig.repeatedFields_, null);
};
goog.inherits(proto.viam.app.v1.AuthConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.AuthConfig.displayName = 'proto.viam.app.v1.AuthConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.AuthHandlerConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.AuthHandlerConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.AuthHandlerConfig.displayName = 'proto.viam.app.v1.AuthHandlerConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.Frame = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.Frame, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.Frame.displayName = 'proto.viam.app.v1.Frame';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.Translation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.Translation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.Translation.displayName = 'proto.viam.app.v1.Translation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.Orientation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.viam.app.v1.Orientation.oneofGroups_);
};
goog.inherits(proto.viam.app.v1.Orientation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.Orientation.displayName = 'proto.viam.app.v1.Orientation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.Orientation.NoOrientation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.Orientation.NoOrientation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.Orientation.NoOrientation.displayName = 'proto.viam.app.v1.Orientation.NoOrientation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.Orientation.OrientationVectorRadians = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.Orientation.OrientationVectorRadians, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.Orientation.OrientationVectorRadians.displayName = 'proto.viam.app.v1.Orientation.OrientationVectorRadians';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.Orientation.OrientationVectorDegrees = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.Orientation.OrientationVectorDegrees, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.Orientation.OrientationVectorDegrees.displayName = 'proto.viam.app.v1.Orientation.OrientationVectorDegrees';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.Orientation.EulerAngles = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.Orientation.EulerAngles, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.Orientation.EulerAngles.displayName = 'proto.viam.app.v1.Orientation.EulerAngles';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.Orientation.AxisAngles = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.Orientation.AxisAngles, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.Orientation.AxisAngles.displayName = 'proto.viam.app.v1.Orientation.AxisAngles';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.Orientation.Quaternion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.Orientation.Quaternion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.Orientation.Quaternion.displayName = 'proto.viam.app.v1.Orientation.Quaternion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.RemoteConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.app.v1.RemoteConfig.repeatedFields_, null);
};
goog.inherits(proto.viam.app.v1.RemoteConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.RemoteConfig.displayName = 'proto.viam.app.v1.RemoteConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.RemoteAuth = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.RemoteAuth, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.RemoteAuth.displayName = 'proto.viam.app.v1.RemoteAuth';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.RemoteAuth.Credentials = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.RemoteAuth.Credentials, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.RemoteAuth.Credentials.displayName = 'proto.viam.app.v1.RemoteAuth.Credentials';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.AgentInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.app.v1.AgentInfo.repeatedFields_, null);
};
goog.inherits(proto.viam.app.v1.AgentInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.AgentInfo.displayName = 'proto.viam.app.v1.AgentInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.ConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.ConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.ConfigRequest.displayName = 'proto.viam.app.v1.ConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.ConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.ConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.ConfigResponse.displayName = 'proto.viam.app.v1.ConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.CertificateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.CertificateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.CertificateRequest.displayName = 'proto.viam.app.v1.CertificateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.CertificateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.CertificateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.CertificateResponse.displayName = 'proto.viam.app.v1.CertificateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.LogRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.app.v1.LogRequest.repeatedFields_, null);
};
goog.inherits(proto.viam.app.v1.LogRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.LogRequest.displayName = 'proto.viam.app.v1.LogRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.LogResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.LogResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.LogResponse.displayName = 'proto.viam.app.v1.LogResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.NeedsRestartRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.NeedsRestartRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.NeedsRestartRequest.displayName = 'proto.viam.app.v1.NeedsRestartRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.v1.NeedsRestartResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.v1.NeedsRestartResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.v1.NeedsRestartResponse.displayName = 'proto.viam.app.v1.NeedsRestartResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.app.v1.RobotConfig.repeatedFields_ = [2,3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.RobotConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.RobotConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.RobotConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.RobotConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    cloud: (f = msg.getCloud()) && proto.viam.app.v1.CloudConfig.toObject(includeInstance, f),
    remotesList: jspb.Message.toObjectList(msg.getRemotesList(),
    proto.viam.app.v1.RemoteConfig.toObject, includeInstance),
    componentsList: jspb.Message.toObjectList(msg.getComponentsList(),
    proto.viam.app.v1.ComponentConfig.toObject, includeInstance),
    processesList: jspb.Message.toObjectList(msg.getProcessesList(),
    proto.viam.app.v1.ProcessConfig.toObject, includeInstance),
    servicesList: jspb.Message.toObjectList(msg.getServicesList(),
    proto.viam.app.v1.ServiceConfig.toObject, includeInstance),
    network: (f = msg.getNetwork()) && proto.viam.app.v1.NetworkConfig.toObject(includeInstance, f),
    auth: (f = msg.getAuth()) && proto.viam.app.v1.AuthConfig.toObject(includeInstance, f),
    debug: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.RobotConfig}
 */
proto.viam.app.v1.RobotConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.RobotConfig;
  return proto.viam.app.v1.RobotConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.RobotConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.RobotConfig}
 */
proto.viam.app.v1.RobotConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.app.v1.CloudConfig;
      reader.readMessage(value,proto.viam.app.v1.CloudConfig.deserializeBinaryFromReader);
      msg.setCloud(value);
      break;
    case 2:
      var value = new proto.viam.app.v1.RemoteConfig;
      reader.readMessage(value,proto.viam.app.v1.RemoteConfig.deserializeBinaryFromReader);
      msg.addRemotes(value);
      break;
    case 3:
      var value = new proto.viam.app.v1.ComponentConfig;
      reader.readMessage(value,proto.viam.app.v1.ComponentConfig.deserializeBinaryFromReader);
      msg.addComponents(value);
      break;
    case 4:
      var value = new proto.viam.app.v1.ProcessConfig;
      reader.readMessage(value,proto.viam.app.v1.ProcessConfig.deserializeBinaryFromReader);
      msg.addProcesses(value);
      break;
    case 5:
      var value = new proto.viam.app.v1.ServiceConfig;
      reader.readMessage(value,proto.viam.app.v1.ServiceConfig.deserializeBinaryFromReader);
      msg.addServices(value);
      break;
    case 6:
      var value = new proto.viam.app.v1.NetworkConfig;
      reader.readMessage(value,proto.viam.app.v1.NetworkConfig.deserializeBinaryFromReader);
      msg.setNetwork(value);
      break;
    case 7:
      var value = new proto.viam.app.v1.AuthConfig;
      reader.readMessage(value,proto.viam.app.v1.AuthConfig.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDebug(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.RobotConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.RobotConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.RobotConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.RobotConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCloud();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.viam.app.v1.CloudConfig.serializeBinaryToWriter
    );
  }
  f = message.getRemotesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.viam.app.v1.RemoteConfig.serializeBinaryToWriter
    );
  }
  f = message.getComponentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.viam.app.v1.ComponentConfig.serializeBinaryToWriter
    );
  }
  f = message.getProcessesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.viam.app.v1.ProcessConfig.serializeBinaryToWriter
    );
  }
  f = message.getServicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.viam.app.v1.ServiceConfig.serializeBinaryToWriter
    );
  }
  f = message.getNetwork();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.viam.app.v1.NetworkConfig.serializeBinaryToWriter
    );
  }
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.viam.app.v1.AuthConfig.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional CloudConfig cloud = 1;
 * @return {?proto.viam.app.v1.CloudConfig}
 */
proto.viam.app.v1.RobotConfig.prototype.getCloud = function() {
  return /** @type{?proto.viam.app.v1.CloudConfig} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.v1.CloudConfig, 1));
};


/**
 * @param {?proto.viam.app.v1.CloudConfig|undefined} value
 * @return {!proto.viam.app.v1.RobotConfig} returns this
*/
proto.viam.app.v1.RobotConfig.prototype.setCloud = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.RobotConfig} returns this
 */
proto.viam.app.v1.RobotConfig.prototype.clearCloud = function() {
  return this.setCloud(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.RobotConfig.prototype.hasCloud = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated RemoteConfig remotes = 2;
 * @return {!Array<!proto.viam.app.v1.RemoteConfig>}
 */
proto.viam.app.v1.RobotConfig.prototype.getRemotesList = function() {
  return /** @type{!Array<!proto.viam.app.v1.RemoteConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.app.v1.RemoteConfig, 2));
};


/**
 * @param {!Array<!proto.viam.app.v1.RemoteConfig>} value
 * @return {!proto.viam.app.v1.RobotConfig} returns this
*/
proto.viam.app.v1.RobotConfig.prototype.setRemotesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.viam.app.v1.RemoteConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.app.v1.RemoteConfig}
 */
proto.viam.app.v1.RobotConfig.prototype.addRemotes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.viam.app.v1.RemoteConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.v1.RobotConfig} returns this
 */
proto.viam.app.v1.RobotConfig.prototype.clearRemotesList = function() {
  return this.setRemotesList([]);
};


/**
 * repeated ComponentConfig components = 3;
 * @return {!Array<!proto.viam.app.v1.ComponentConfig>}
 */
proto.viam.app.v1.RobotConfig.prototype.getComponentsList = function() {
  return /** @type{!Array<!proto.viam.app.v1.ComponentConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.app.v1.ComponentConfig, 3));
};


/**
 * @param {!Array<!proto.viam.app.v1.ComponentConfig>} value
 * @return {!proto.viam.app.v1.RobotConfig} returns this
*/
proto.viam.app.v1.RobotConfig.prototype.setComponentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.viam.app.v1.ComponentConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.app.v1.ComponentConfig}
 */
proto.viam.app.v1.RobotConfig.prototype.addComponents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.viam.app.v1.ComponentConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.v1.RobotConfig} returns this
 */
proto.viam.app.v1.RobotConfig.prototype.clearComponentsList = function() {
  return this.setComponentsList([]);
};


/**
 * repeated ProcessConfig processes = 4;
 * @return {!Array<!proto.viam.app.v1.ProcessConfig>}
 */
proto.viam.app.v1.RobotConfig.prototype.getProcessesList = function() {
  return /** @type{!Array<!proto.viam.app.v1.ProcessConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.app.v1.ProcessConfig, 4));
};


/**
 * @param {!Array<!proto.viam.app.v1.ProcessConfig>} value
 * @return {!proto.viam.app.v1.RobotConfig} returns this
*/
proto.viam.app.v1.RobotConfig.prototype.setProcessesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.viam.app.v1.ProcessConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.app.v1.ProcessConfig}
 */
proto.viam.app.v1.RobotConfig.prototype.addProcesses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.viam.app.v1.ProcessConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.v1.RobotConfig} returns this
 */
proto.viam.app.v1.RobotConfig.prototype.clearProcessesList = function() {
  return this.setProcessesList([]);
};


/**
 * repeated ServiceConfig services = 5;
 * @return {!Array<!proto.viam.app.v1.ServiceConfig>}
 */
proto.viam.app.v1.RobotConfig.prototype.getServicesList = function() {
  return /** @type{!Array<!proto.viam.app.v1.ServiceConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.app.v1.ServiceConfig, 5));
};


/**
 * @param {!Array<!proto.viam.app.v1.ServiceConfig>} value
 * @return {!proto.viam.app.v1.RobotConfig} returns this
*/
proto.viam.app.v1.RobotConfig.prototype.setServicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.viam.app.v1.ServiceConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.app.v1.ServiceConfig}
 */
proto.viam.app.v1.RobotConfig.prototype.addServices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.viam.app.v1.ServiceConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.v1.RobotConfig} returns this
 */
proto.viam.app.v1.RobotConfig.prototype.clearServicesList = function() {
  return this.setServicesList([]);
};


/**
 * optional NetworkConfig network = 6;
 * @return {?proto.viam.app.v1.NetworkConfig}
 */
proto.viam.app.v1.RobotConfig.prototype.getNetwork = function() {
  return /** @type{?proto.viam.app.v1.NetworkConfig} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.v1.NetworkConfig, 6));
};


/**
 * @param {?proto.viam.app.v1.NetworkConfig|undefined} value
 * @return {!proto.viam.app.v1.RobotConfig} returns this
*/
proto.viam.app.v1.RobotConfig.prototype.setNetwork = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.RobotConfig} returns this
 */
proto.viam.app.v1.RobotConfig.prototype.clearNetwork = function() {
  return this.setNetwork(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.RobotConfig.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional AuthConfig auth = 7;
 * @return {?proto.viam.app.v1.AuthConfig}
 */
proto.viam.app.v1.RobotConfig.prototype.getAuth = function() {
  return /** @type{?proto.viam.app.v1.AuthConfig} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.v1.AuthConfig, 7));
};


/**
 * @param {?proto.viam.app.v1.AuthConfig|undefined} value
 * @return {!proto.viam.app.v1.RobotConfig} returns this
*/
proto.viam.app.v1.RobotConfig.prototype.setAuth = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.RobotConfig} returns this
 */
proto.viam.app.v1.RobotConfig.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.RobotConfig.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool debug = 8;
 * @return {boolean}
 */
proto.viam.app.v1.RobotConfig.prototype.getDebug = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.app.v1.RobotConfig} returns this
 */
proto.viam.app.v1.RobotConfig.prototype.setDebug = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.app.v1.RobotConfig} returns this
 */
proto.viam.app.v1.RobotConfig.prototype.clearDebug = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.RobotConfig.prototype.hasDebug = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.LocationSecret.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.LocationSecret.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.LocationSecret} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.LocationSecret.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    secret: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.LocationSecret}
 */
proto.viam.app.v1.LocationSecret.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.LocationSecret;
  return proto.viam.app.v1.LocationSecret.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.LocationSecret} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.LocationSecret}
 */
proto.viam.app.v1.LocationSecret.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.LocationSecret.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.LocationSecret.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.LocationSecret} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.LocationSecret.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.viam.app.v1.LocationSecret.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.LocationSecret} returns this
 */
proto.viam.app.v1.LocationSecret.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string secret = 2;
 * @return {string}
 */
proto.viam.app.v1.LocationSecret.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.LocationSecret} returns this
 */
proto.viam.app.v1.LocationSecret.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.app.v1.CloudConfig.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.CloudConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.CloudConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.CloudConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.CloudConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fqdn: jspb.Message.getFieldWithDefault(msg, 2, ""),
    localFqdn: jspb.Message.getFieldWithDefault(msg, 3, ""),
    managedBy: jspb.Message.getFieldWithDefault(msg, 4, ""),
    signalingAddress: jspb.Message.getFieldWithDefault(msg, 5, ""),
    signalingInsecure: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    locationSecret: jspb.Message.getFieldWithDefault(msg, 7, ""),
    secret: jspb.Message.getFieldWithDefault(msg, 8, ""),
    locationSecretsList: jspb.Message.toObjectList(msg.getLocationSecretsList(),
    proto.viam.app.v1.LocationSecret.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.CloudConfig}
 */
proto.viam.app.v1.CloudConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.CloudConfig;
  return proto.viam.app.v1.CloudConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.CloudConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.CloudConfig}
 */
proto.viam.app.v1.CloudConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFqdn(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocalFqdn(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setManagedBy(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignalingAddress(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSignalingInsecure(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationSecret(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    case 9:
      var value = new proto.viam.app.v1.LocationSecret;
      reader.readMessage(value,proto.viam.app.v1.LocationSecret.deserializeBinaryFromReader);
      msg.addLocationSecrets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.CloudConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.CloudConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.CloudConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.CloudConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFqdn();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLocalFqdn();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getManagedBy();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSignalingAddress();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSignalingInsecure();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getLocationSecret();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLocationSecretsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.viam.app.v1.LocationSecret.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.viam.app.v1.CloudConfig.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.CloudConfig} returns this
 */
proto.viam.app.v1.CloudConfig.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string fqdn = 2;
 * @return {string}
 */
proto.viam.app.v1.CloudConfig.prototype.getFqdn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.CloudConfig} returns this
 */
proto.viam.app.v1.CloudConfig.prototype.setFqdn = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string local_fqdn = 3;
 * @return {string}
 */
proto.viam.app.v1.CloudConfig.prototype.getLocalFqdn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.CloudConfig} returns this
 */
proto.viam.app.v1.CloudConfig.prototype.setLocalFqdn = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string managed_by = 4;
 * @return {string}
 */
proto.viam.app.v1.CloudConfig.prototype.getManagedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.CloudConfig} returns this
 */
proto.viam.app.v1.CloudConfig.prototype.setManagedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string signaling_address = 5;
 * @return {string}
 */
proto.viam.app.v1.CloudConfig.prototype.getSignalingAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.CloudConfig} returns this
 */
proto.viam.app.v1.CloudConfig.prototype.setSignalingAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool signaling_insecure = 6;
 * @return {boolean}
 */
proto.viam.app.v1.CloudConfig.prototype.getSignalingInsecure = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.app.v1.CloudConfig} returns this
 */
proto.viam.app.v1.CloudConfig.prototype.setSignalingInsecure = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string location_secret = 7;
 * @return {string}
 */
proto.viam.app.v1.CloudConfig.prototype.getLocationSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.CloudConfig} returns this
 */
proto.viam.app.v1.CloudConfig.prototype.setLocationSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string secret = 8;
 * @return {string}
 */
proto.viam.app.v1.CloudConfig.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.CloudConfig} returns this
 */
proto.viam.app.v1.CloudConfig.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated LocationSecret location_secrets = 9;
 * @return {!Array<!proto.viam.app.v1.LocationSecret>}
 */
proto.viam.app.v1.CloudConfig.prototype.getLocationSecretsList = function() {
  return /** @type{!Array<!proto.viam.app.v1.LocationSecret>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.app.v1.LocationSecret, 9));
};


/**
 * @param {!Array<!proto.viam.app.v1.LocationSecret>} value
 * @return {!proto.viam.app.v1.CloudConfig} returns this
*/
proto.viam.app.v1.CloudConfig.prototype.setLocationSecretsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.viam.app.v1.LocationSecret=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.app.v1.LocationSecret}
 */
proto.viam.app.v1.CloudConfig.prototype.addLocationSecrets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.viam.app.v1.LocationSecret, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.v1.CloudConfig} returns this
 */
proto.viam.app.v1.CloudConfig.prototype.clearLocationSecretsList = function() {
  return this.setLocationSecretsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.app.v1.ComponentConfig.repeatedFields_ = [6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.ComponentConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.ComponentConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.ComponentConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.ComponentConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    model: jspb.Message.getFieldWithDefault(msg, 4, ""),
    frame: (f = msg.getFrame()) && proto.viam.app.v1.Frame.toObject(includeInstance, f),
    dependsOnList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    serviceConfigsList: jspb.Message.toObjectList(msg.getServiceConfigsList(),
    proto.viam.app.v1.ResourceLevelServiceConfig.toObject, includeInstance),
    attributes: (f = msg.getAttributes()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.ComponentConfig}
 */
proto.viam.app.v1.ComponentConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.ComponentConfig;
  return proto.viam.app.v1.ComponentConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.ComponentConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.ComponentConfig}
 */
proto.viam.app.v1.ComponentConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 5:
      var value = new proto.viam.app.v1.Frame;
      reader.readMessage(value,proto.viam.app.v1.Frame.deserializeBinaryFromReader);
      msg.setFrame(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addDependsOn(value);
      break;
    case 7:
      var value = new proto.viam.app.v1.ResourceLevelServiceConfig;
      reader.readMessage(value,proto.viam.app.v1.ResourceLevelServiceConfig.deserializeBinaryFromReader);
      msg.addServiceConfigs(value);
      break;
    case 8:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.ComponentConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.ComponentConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.ComponentConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.ComponentConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFrame();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.viam.app.v1.Frame.serializeBinaryToWriter
    );
  }
  f = message.getDependsOnList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getServiceConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.viam.app.v1.ResourceLevelServiceConfig.serializeBinaryToWriter
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.app.v1.ComponentConfig.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.ComponentConfig} returns this
 */
proto.viam.app.v1.ComponentConfig.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.viam.app.v1.ComponentConfig.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.ComponentConfig} returns this
 */
proto.viam.app.v1.ComponentConfig.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.viam.app.v1.ComponentConfig.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.ComponentConfig} returns this
 */
proto.viam.app.v1.ComponentConfig.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string model = 4;
 * @return {string}
 */
proto.viam.app.v1.ComponentConfig.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.ComponentConfig} returns this
 */
proto.viam.app.v1.ComponentConfig.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Frame frame = 5;
 * @return {?proto.viam.app.v1.Frame}
 */
proto.viam.app.v1.ComponentConfig.prototype.getFrame = function() {
  return /** @type{?proto.viam.app.v1.Frame} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.v1.Frame, 5));
};


/**
 * @param {?proto.viam.app.v1.Frame|undefined} value
 * @return {!proto.viam.app.v1.ComponentConfig} returns this
*/
proto.viam.app.v1.ComponentConfig.prototype.setFrame = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.ComponentConfig} returns this
 */
proto.viam.app.v1.ComponentConfig.prototype.clearFrame = function() {
  return this.setFrame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.ComponentConfig.prototype.hasFrame = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated string depends_on = 6;
 * @return {!Array<string>}
 */
proto.viam.app.v1.ComponentConfig.prototype.getDependsOnList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.viam.app.v1.ComponentConfig} returns this
 */
proto.viam.app.v1.ComponentConfig.prototype.setDependsOnList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.viam.app.v1.ComponentConfig} returns this
 */
proto.viam.app.v1.ComponentConfig.prototype.addDependsOn = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.v1.ComponentConfig} returns this
 */
proto.viam.app.v1.ComponentConfig.prototype.clearDependsOnList = function() {
  return this.setDependsOnList([]);
};


/**
 * repeated ResourceLevelServiceConfig service_configs = 7;
 * @return {!Array<!proto.viam.app.v1.ResourceLevelServiceConfig>}
 */
proto.viam.app.v1.ComponentConfig.prototype.getServiceConfigsList = function() {
  return /** @type{!Array<!proto.viam.app.v1.ResourceLevelServiceConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.app.v1.ResourceLevelServiceConfig, 7));
};


/**
 * @param {!Array<!proto.viam.app.v1.ResourceLevelServiceConfig>} value
 * @return {!proto.viam.app.v1.ComponentConfig} returns this
*/
proto.viam.app.v1.ComponentConfig.prototype.setServiceConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.viam.app.v1.ResourceLevelServiceConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.app.v1.ResourceLevelServiceConfig}
 */
proto.viam.app.v1.ComponentConfig.prototype.addServiceConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.viam.app.v1.ResourceLevelServiceConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.v1.ComponentConfig} returns this
 */
proto.viam.app.v1.ComponentConfig.prototype.clearServiceConfigsList = function() {
  return this.setServiceConfigsList([]);
};


/**
 * optional google.protobuf.Struct attributes = 8;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.app.v1.ComponentConfig.prototype.getAttributes = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 8));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.app.v1.ComponentConfig} returns this
*/
proto.viam.app.v1.ComponentConfig.prototype.setAttributes = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.ComponentConfig} returns this
 */
proto.viam.app.v1.ComponentConfig.prototype.clearAttributes = function() {
  return this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.ComponentConfig.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.ResourceLevelServiceConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.ResourceLevelServiceConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.ResourceLevelServiceConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.ResourceLevelServiceConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    attributes: (f = msg.getAttributes()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.ResourceLevelServiceConfig}
 */
proto.viam.app.v1.ResourceLevelServiceConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.ResourceLevelServiceConfig;
  return proto.viam.app.v1.ResourceLevelServiceConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.ResourceLevelServiceConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.ResourceLevelServiceConfig}
 */
proto.viam.app.v1.ResourceLevelServiceConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.ResourceLevelServiceConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.ResourceLevelServiceConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.ResourceLevelServiceConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.ResourceLevelServiceConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.viam.app.v1.ResourceLevelServiceConfig.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.ResourceLevelServiceConfig} returns this
 */
proto.viam.app.v1.ResourceLevelServiceConfig.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Struct attributes = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.app.v1.ResourceLevelServiceConfig.prototype.getAttributes = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.app.v1.ResourceLevelServiceConfig} returns this
*/
proto.viam.app.v1.ResourceLevelServiceConfig.prototype.setAttributes = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.ResourceLevelServiceConfig} returns this
 */
proto.viam.app.v1.ResourceLevelServiceConfig.prototype.clearAttributes = function() {
  return this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.ResourceLevelServiceConfig.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.app.v1.ProcessConfig.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.ProcessConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.ProcessConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.ProcessConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.ProcessConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    argsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    cwd: jspb.Message.getFieldWithDefault(msg, 4, ""),
    oneShot: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    log: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.ProcessConfig}
 */
proto.viam.app.v1.ProcessConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.ProcessConfig;
  return proto.viam.app.v1.ProcessConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.ProcessConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.ProcessConfig}
 */
proto.viam.app.v1.ProcessConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addArgs(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCwd(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOneShot(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLog(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.ProcessConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.ProcessConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.ProcessConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.ProcessConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getArgsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getCwd();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOneShot();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getLog();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.viam.app.v1.ProcessConfig.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.ProcessConfig} returns this
 */
proto.viam.app.v1.ProcessConfig.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.viam.app.v1.ProcessConfig.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.ProcessConfig} returns this
 */
proto.viam.app.v1.ProcessConfig.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string args = 3;
 * @return {!Array<string>}
 */
proto.viam.app.v1.ProcessConfig.prototype.getArgsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.viam.app.v1.ProcessConfig} returns this
 */
proto.viam.app.v1.ProcessConfig.prototype.setArgsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.viam.app.v1.ProcessConfig} returns this
 */
proto.viam.app.v1.ProcessConfig.prototype.addArgs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.v1.ProcessConfig} returns this
 */
proto.viam.app.v1.ProcessConfig.prototype.clearArgsList = function() {
  return this.setArgsList([]);
};


/**
 * optional string cwd = 4;
 * @return {string}
 */
proto.viam.app.v1.ProcessConfig.prototype.getCwd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.ProcessConfig} returns this
 */
proto.viam.app.v1.ProcessConfig.prototype.setCwd = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool one_shot = 5;
 * @return {boolean}
 */
proto.viam.app.v1.ProcessConfig.prototype.getOneShot = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.app.v1.ProcessConfig} returns this
 */
proto.viam.app.v1.ProcessConfig.prototype.setOneShot = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool log = 6;
 * @return {boolean}
 */
proto.viam.app.v1.ProcessConfig.prototype.getLog = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.app.v1.ProcessConfig} returns this
 */
proto.viam.app.v1.ProcessConfig.prototype.setLog = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.app.v1.ServiceConfig.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.ServiceConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.ServiceConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.ServiceConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.ServiceConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    attributes: (f = msg.getAttributes()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    dependsOnList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    model: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.ServiceConfig}
 */
proto.viam.app.v1.ServiceConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.ServiceConfig;
  return proto.viam.app.v1.ServiceConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.ServiceConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.ServiceConfig}
 */
proto.viam.app.v1.ServiceConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addDependsOn(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.ServiceConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.ServiceConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.ServiceConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.ServiceConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getDependsOnList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.app.v1.ServiceConfig.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.ServiceConfig} returns this
 */
proto.viam.app.v1.ServiceConfig.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.viam.app.v1.ServiceConfig.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.ServiceConfig} returns this
 */
proto.viam.app.v1.ServiceConfig.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.viam.app.v1.ServiceConfig.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.ServiceConfig} returns this
 */
proto.viam.app.v1.ServiceConfig.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Struct attributes = 4;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.app.v1.ServiceConfig.prototype.getAttributes = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 4));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.app.v1.ServiceConfig} returns this
*/
proto.viam.app.v1.ServiceConfig.prototype.setAttributes = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.ServiceConfig} returns this
 */
proto.viam.app.v1.ServiceConfig.prototype.clearAttributes = function() {
  return this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.ServiceConfig.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string depends_on = 5;
 * @return {!Array<string>}
 */
proto.viam.app.v1.ServiceConfig.prototype.getDependsOnList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.viam.app.v1.ServiceConfig} returns this
 */
proto.viam.app.v1.ServiceConfig.prototype.setDependsOnList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.viam.app.v1.ServiceConfig} returns this
 */
proto.viam.app.v1.ServiceConfig.prototype.addDependsOn = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.v1.ServiceConfig} returns this
 */
proto.viam.app.v1.ServiceConfig.prototype.clearDependsOnList = function() {
  return this.setDependsOnList([]);
};


/**
 * optional string model = 6;
 * @return {string}
 */
proto.viam.app.v1.ServiceConfig.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.ServiceConfig} returns this
 */
proto.viam.app.v1.ServiceConfig.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.NetworkConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.NetworkConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.NetworkConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.NetworkConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    fqdn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bindAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tlsCertFile: jspb.Message.getFieldWithDefault(msg, 3, ""),
    tlsKeyFile: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.NetworkConfig}
 */
proto.viam.app.v1.NetworkConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.NetworkConfig;
  return proto.viam.app.v1.NetworkConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.NetworkConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.NetworkConfig}
 */
proto.viam.app.v1.NetworkConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFqdn(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBindAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTlsCertFile(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTlsKeyFile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.NetworkConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.NetworkConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.NetworkConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.NetworkConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFqdn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBindAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTlsCertFile();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTlsKeyFile();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string fqdn = 1;
 * @return {string}
 */
proto.viam.app.v1.NetworkConfig.prototype.getFqdn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.NetworkConfig} returns this
 */
proto.viam.app.v1.NetworkConfig.prototype.setFqdn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bind_address = 2;
 * @return {string}
 */
proto.viam.app.v1.NetworkConfig.prototype.getBindAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.NetworkConfig} returns this
 */
proto.viam.app.v1.NetworkConfig.prototype.setBindAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string tls_cert_file = 3;
 * @return {string}
 */
proto.viam.app.v1.NetworkConfig.prototype.getTlsCertFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.NetworkConfig} returns this
 */
proto.viam.app.v1.NetworkConfig.prototype.setTlsCertFile = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string tls_key_file = 4;
 * @return {string}
 */
proto.viam.app.v1.NetworkConfig.prototype.getTlsKeyFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.NetworkConfig} returns this
 */
proto.viam.app.v1.NetworkConfig.prototype.setTlsKeyFile = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.app.v1.AuthConfig.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.AuthConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.AuthConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.AuthConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.AuthConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    handlersList: jspb.Message.toObjectList(msg.getHandlersList(),
    proto.viam.app.v1.AuthHandlerConfig.toObject, includeInstance),
    tlsAuthEntitiesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.AuthConfig}
 */
proto.viam.app.v1.AuthConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.AuthConfig;
  return proto.viam.app.v1.AuthConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.AuthConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.AuthConfig}
 */
proto.viam.app.v1.AuthConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.app.v1.AuthHandlerConfig;
      reader.readMessage(value,proto.viam.app.v1.AuthHandlerConfig.deserializeBinaryFromReader);
      msg.addHandlers(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTlsAuthEntities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.AuthConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.AuthConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.AuthConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.AuthConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHandlersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.viam.app.v1.AuthHandlerConfig.serializeBinaryToWriter
    );
  }
  f = message.getTlsAuthEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated AuthHandlerConfig handlers = 1;
 * @return {!Array<!proto.viam.app.v1.AuthHandlerConfig>}
 */
proto.viam.app.v1.AuthConfig.prototype.getHandlersList = function() {
  return /** @type{!Array<!proto.viam.app.v1.AuthHandlerConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.app.v1.AuthHandlerConfig, 1));
};


/**
 * @param {!Array<!proto.viam.app.v1.AuthHandlerConfig>} value
 * @return {!proto.viam.app.v1.AuthConfig} returns this
*/
proto.viam.app.v1.AuthConfig.prototype.setHandlersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.viam.app.v1.AuthHandlerConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.app.v1.AuthHandlerConfig}
 */
proto.viam.app.v1.AuthConfig.prototype.addHandlers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.viam.app.v1.AuthHandlerConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.v1.AuthConfig} returns this
 */
proto.viam.app.v1.AuthConfig.prototype.clearHandlersList = function() {
  return this.setHandlersList([]);
};


/**
 * repeated string tls_auth_entities = 2;
 * @return {!Array<string>}
 */
proto.viam.app.v1.AuthConfig.prototype.getTlsAuthEntitiesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.viam.app.v1.AuthConfig} returns this
 */
proto.viam.app.v1.AuthConfig.prototype.setTlsAuthEntitiesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.viam.app.v1.AuthConfig} returns this
 */
proto.viam.app.v1.AuthConfig.prototype.addTlsAuthEntities = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.v1.AuthConfig} returns this
 */
proto.viam.app.v1.AuthConfig.prototype.clearTlsAuthEntitiesList = function() {
  return this.setTlsAuthEntitiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.AuthHandlerConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.AuthHandlerConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.AuthHandlerConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.AuthHandlerConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    config: (f = msg.getConfig()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.AuthHandlerConfig}
 */
proto.viam.app.v1.AuthHandlerConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.AuthHandlerConfig;
  return proto.viam.app.v1.AuthHandlerConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.AuthHandlerConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.AuthHandlerConfig}
 */
proto.viam.app.v1.AuthHandlerConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.viam.app.v1.CredentialsType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 5:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.AuthHandlerConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.AuthHandlerConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.AuthHandlerConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.AuthHandlerConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional CredentialsType type = 1;
 * @return {!proto.viam.app.v1.CredentialsType}
 */
proto.viam.app.v1.AuthHandlerConfig.prototype.getType = function() {
  return /** @type {!proto.viam.app.v1.CredentialsType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.viam.app.v1.CredentialsType} value
 * @return {!proto.viam.app.v1.AuthHandlerConfig} returns this
 */
proto.viam.app.v1.AuthHandlerConfig.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional google.protobuf.Struct config = 5;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.app.v1.AuthHandlerConfig.prototype.getConfig = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 5));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.app.v1.AuthHandlerConfig} returns this
*/
proto.viam.app.v1.AuthHandlerConfig.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.AuthHandlerConfig} returns this
 */
proto.viam.app.v1.AuthHandlerConfig.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.AuthHandlerConfig.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.Frame.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.Frame.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.Frame} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.Frame.toObject = function(includeInstance, msg) {
  var f, obj = {
    parent: jspb.Message.getFieldWithDefault(msg, 1, ""),
    translation: (f = msg.getTranslation()) && proto.viam.app.v1.Translation.toObject(includeInstance, f),
    orientation: (f = msg.getOrientation()) && proto.viam.app.v1.Orientation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.Frame}
 */
proto.viam.app.v1.Frame.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.Frame;
  return proto.viam.app.v1.Frame.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.Frame} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.Frame}
 */
proto.viam.app.v1.Frame.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setParent(value);
      break;
    case 2:
      var value = new proto.viam.app.v1.Translation;
      reader.readMessage(value,proto.viam.app.v1.Translation.deserializeBinaryFromReader);
      msg.setTranslation(value);
      break;
    case 3:
      var value = new proto.viam.app.v1.Orientation;
      reader.readMessage(value,proto.viam.app.v1.Orientation.deserializeBinaryFromReader);
      msg.setOrientation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.Frame.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.Frame.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.Frame} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.Frame.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTranslation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.viam.app.v1.Translation.serializeBinaryToWriter
    );
  }
  f = message.getOrientation();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.viam.app.v1.Orientation.serializeBinaryToWriter
    );
  }
};


/**
 * optional string parent = 1;
 * @return {string}
 */
proto.viam.app.v1.Frame.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.Frame} returns this
 */
proto.viam.app.v1.Frame.prototype.setParent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Translation translation = 2;
 * @return {?proto.viam.app.v1.Translation}
 */
proto.viam.app.v1.Frame.prototype.getTranslation = function() {
  return /** @type{?proto.viam.app.v1.Translation} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.v1.Translation, 2));
};


/**
 * @param {?proto.viam.app.v1.Translation|undefined} value
 * @return {!proto.viam.app.v1.Frame} returns this
*/
proto.viam.app.v1.Frame.prototype.setTranslation = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.Frame} returns this
 */
proto.viam.app.v1.Frame.prototype.clearTranslation = function() {
  return this.setTranslation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.Frame.prototype.hasTranslation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Orientation orientation = 3;
 * @return {?proto.viam.app.v1.Orientation}
 */
proto.viam.app.v1.Frame.prototype.getOrientation = function() {
  return /** @type{?proto.viam.app.v1.Orientation} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.v1.Orientation, 3));
};


/**
 * @param {?proto.viam.app.v1.Orientation|undefined} value
 * @return {!proto.viam.app.v1.Frame} returns this
*/
proto.viam.app.v1.Frame.prototype.setOrientation = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.Frame} returns this
 */
proto.viam.app.v1.Frame.prototype.clearOrientation = function() {
  return this.setOrientation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.Frame.prototype.hasOrientation = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.Translation.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.Translation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.Translation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.Translation.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    z: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.Translation}
 */
proto.viam.app.v1.Translation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.Translation;
  return proto.viam.app.v1.Translation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.Translation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.Translation}
 */
proto.viam.app.v1.Translation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.Translation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.Translation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.Translation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.Translation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional double x = 1;
 * @return {number}
 */
proto.viam.app.v1.Translation.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Translation} returns this
 */
proto.viam.app.v1.Translation.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double y = 2;
 * @return {number}
 */
proto.viam.app.v1.Translation.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Translation} returns this
 */
proto.viam.app.v1.Translation.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double z = 3;
 * @return {number}
 */
proto.viam.app.v1.Translation.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Translation} returns this
 */
proto.viam.app.v1.Translation.prototype.setZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.viam.app.v1.Orientation.oneofGroups_ = [[1,2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.viam.app.v1.Orientation.TypeCase = {
  TYPE_NOT_SET: 0,
  NO_ORIENTATION: 1,
  VECTOR_RADIANS: 2,
  VECTOR_DEGREES: 3,
  EULER_ANGLES: 4,
  AXIS_ANGLES: 5,
  QUATERNION: 6
};

/**
 * @return {proto.viam.app.v1.Orientation.TypeCase}
 */
proto.viam.app.v1.Orientation.prototype.getTypeCase = function() {
  return /** @type {proto.viam.app.v1.Orientation.TypeCase} */(jspb.Message.computeOneofCase(this, proto.viam.app.v1.Orientation.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.Orientation.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.Orientation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.Orientation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.Orientation.toObject = function(includeInstance, msg) {
  var f, obj = {
    noOrientation: (f = msg.getNoOrientation()) && proto.viam.app.v1.Orientation.NoOrientation.toObject(includeInstance, f),
    vectorRadians: (f = msg.getVectorRadians()) && proto.viam.app.v1.Orientation.OrientationVectorRadians.toObject(includeInstance, f),
    vectorDegrees: (f = msg.getVectorDegrees()) && proto.viam.app.v1.Orientation.OrientationVectorDegrees.toObject(includeInstance, f),
    eulerAngles: (f = msg.getEulerAngles()) && proto.viam.app.v1.Orientation.EulerAngles.toObject(includeInstance, f),
    axisAngles: (f = msg.getAxisAngles()) && proto.viam.app.v1.Orientation.AxisAngles.toObject(includeInstance, f),
    quaternion: (f = msg.getQuaternion()) && proto.viam.app.v1.Orientation.Quaternion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.Orientation}
 */
proto.viam.app.v1.Orientation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.Orientation;
  return proto.viam.app.v1.Orientation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.Orientation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.Orientation}
 */
proto.viam.app.v1.Orientation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.app.v1.Orientation.NoOrientation;
      reader.readMessage(value,proto.viam.app.v1.Orientation.NoOrientation.deserializeBinaryFromReader);
      msg.setNoOrientation(value);
      break;
    case 2:
      var value = new proto.viam.app.v1.Orientation.OrientationVectorRadians;
      reader.readMessage(value,proto.viam.app.v1.Orientation.OrientationVectorRadians.deserializeBinaryFromReader);
      msg.setVectorRadians(value);
      break;
    case 3:
      var value = new proto.viam.app.v1.Orientation.OrientationVectorDegrees;
      reader.readMessage(value,proto.viam.app.v1.Orientation.OrientationVectorDegrees.deserializeBinaryFromReader);
      msg.setVectorDegrees(value);
      break;
    case 4:
      var value = new proto.viam.app.v1.Orientation.EulerAngles;
      reader.readMessage(value,proto.viam.app.v1.Orientation.EulerAngles.deserializeBinaryFromReader);
      msg.setEulerAngles(value);
      break;
    case 5:
      var value = new proto.viam.app.v1.Orientation.AxisAngles;
      reader.readMessage(value,proto.viam.app.v1.Orientation.AxisAngles.deserializeBinaryFromReader);
      msg.setAxisAngles(value);
      break;
    case 6:
      var value = new proto.viam.app.v1.Orientation.Quaternion;
      reader.readMessage(value,proto.viam.app.v1.Orientation.Quaternion.deserializeBinaryFromReader);
      msg.setQuaternion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.Orientation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.Orientation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.Orientation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.Orientation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNoOrientation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.viam.app.v1.Orientation.NoOrientation.serializeBinaryToWriter
    );
  }
  f = message.getVectorRadians();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.viam.app.v1.Orientation.OrientationVectorRadians.serializeBinaryToWriter
    );
  }
  f = message.getVectorDegrees();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.viam.app.v1.Orientation.OrientationVectorDegrees.serializeBinaryToWriter
    );
  }
  f = message.getEulerAngles();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.viam.app.v1.Orientation.EulerAngles.serializeBinaryToWriter
    );
  }
  f = message.getAxisAngles();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.viam.app.v1.Orientation.AxisAngles.serializeBinaryToWriter
    );
  }
  f = message.getQuaternion();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.viam.app.v1.Orientation.Quaternion.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.Orientation.NoOrientation.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.Orientation.NoOrientation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.Orientation.NoOrientation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.Orientation.NoOrientation.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.Orientation.NoOrientation}
 */
proto.viam.app.v1.Orientation.NoOrientation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.Orientation.NoOrientation;
  return proto.viam.app.v1.Orientation.NoOrientation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.Orientation.NoOrientation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.Orientation.NoOrientation}
 */
proto.viam.app.v1.Orientation.NoOrientation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.Orientation.NoOrientation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.Orientation.NoOrientation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.Orientation.NoOrientation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.Orientation.NoOrientation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.Orientation.OrientationVectorRadians.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.Orientation.OrientationVectorRadians.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.Orientation.OrientationVectorRadians} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.Orientation.OrientationVectorRadians.toObject = function(includeInstance, msg) {
  var f, obj = {
    theta: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    z: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.Orientation.OrientationVectorRadians}
 */
proto.viam.app.v1.Orientation.OrientationVectorRadians.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.Orientation.OrientationVectorRadians;
  return proto.viam.app.v1.Orientation.OrientationVectorRadians.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.Orientation.OrientationVectorRadians} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.Orientation.OrientationVectorRadians}
 */
proto.viam.app.v1.Orientation.OrientationVectorRadians.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTheta(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setY(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.Orientation.OrientationVectorRadians.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.Orientation.OrientationVectorRadians.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.Orientation.OrientationVectorRadians} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.Orientation.OrientationVectorRadians.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTheta();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getX();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional double theta = 1;
 * @return {number}
 */
proto.viam.app.v1.Orientation.OrientationVectorRadians.prototype.getTheta = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Orientation.OrientationVectorRadians} returns this
 */
proto.viam.app.v1.Orientation.OrientationVectorRadians.prototype.setTheta = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double x = 2;
 * @return {number}
 */
proto.viam.app.v1.Orientation.OrientationVectorRadians.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Orientation.OrientationVectorRadians} returns this
 */
proto.viam.app.v1.Orientation.OrientationVectorRadians.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double y = 3;
 * @return {number}
 */
proto.viam.app.v1.Orientation.OrientationVectorRadians.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Orientation.OrientationVectorRadians} returns this
 */
proto.viam.app.v1.Orientation.OrientationVectorRadians.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double z = 4;
 * @return {number}
 */
proto.viam.app.v1.Orientation.OrientationVectorRadians.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Orientation.OrientationVectorRadians} returns this
 */
proto.viam.app.v1.Orientation.OrientationVectorRadians.prototype.setZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.Orientation.OrientationVectorDegrees.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.Orientation.OrientationVectorDegrees.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.Orientation.OrientationVectorDegrees} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.Orientation.OrientationVectorDegrees.toObject = function(includeInstance, msg) {
  var f, obj = {
    theta: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    z: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.Orientation.OrientationVectorDegrees}
 */
proto.viam.app.v1.Orientation.OrientationVectorDegrees.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.Orientation.OrientationVectorDegrees;
  return proto.viam.app.v1.Orientation.OrientationVectorDegrees.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.Orientation.OrientationVectorDegrees} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.Orientation.OrientationVectorDegrees}
 */
proto.viam.app.v1.Orientation.OrientationVectorDegrees.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTheta(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setY(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.Orientation.OrientationVectorDegrees.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.Orientation.OrientationVectorDegrees.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.Orientation.OrientationVectorDegrees} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.Orientation.OrientationVectorDegrees.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTheta();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getX();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional double theta = 1;
 * @return {number}
 */
proto.viam.app.v1.Orientation.OrientationVectorDegrees.prototype.getTheta = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Orientation.OrientationVectorDegrees} returns this
 */
proto.viam.app.v1.Orientation.OrientationVectorDegrees.prototype.setTheta = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double x = 2;
 * @return {number}
 */
proto.viam.app.v1.Orientation.OrientationVectorDegrees.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Orientation.OrientationVectorDegrees} returns this
 */
proto.viam.app.v1.Orientation.OrientationVectorDegrees.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double y = 3;
 * @return {number}
 */
proto.viam.app.v1.Orientation.OrientationVectorDegrees.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Orientation.OrientationVectorDegrees} returns this
 */
proto.viam.app.v1.Orientation.OrientationVectorDegrees.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double z = 4;
 * @return {number}
 */
proto.viam.app.v1.Orientation.OrientationVectorDegrees.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Orientation.OrientationVectorDegrees} returns this
 */
proto.viam.app.v1.Orientation.OrientationVectorDegrees.prototype.setZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.Orientation.EulerAngles.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.Orientation.EulerAngles.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.Orientation.EulerAngles} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.Orientation.EulerAngles.toObject = function(includeInstance, msg) {
  var f, obj = {
    roll: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    pitch: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    yaw: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.Orientation.EulerAngles}
 */
proto.viam.app.v1.Orientation.EulerAngles.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.Orientation.EulerAngles;
  return proto.viam.app.v1.Orientation.EulerAngles.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.Orientation.EulerAngles} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.Orientation.EulerAngles}
 */
proto.viam.app.v1.Orientation.EulerAngles.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRoll(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPitch(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setYaw(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.Orientation.EulerAngles.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.Orientation.EulerAngles.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.Orientation.EulerAngles} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.Orientation.EulerAngles.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoll();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getPitch();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getYaw();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional double roll = 1;
 * @return {number}
 */
proto.viam.app.v1.Orientation.EulerAngles.prototype.getRoll = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Orientation.EulerAngles} returns this
 */
proto.viam.app.v1.Orientation.EulerAngles.prototype.setRoll = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double pitch = 2;
 * @return {number}
 */
proto.viam.app.v1.Orientation.EulerAngles.prototype.getPitch = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Orientation.EulerAngles} returns this
 */
proto.viam.app.v1.Orientation.EulerAngles.prototype.setPitch = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double yaw = 3;
 * @return {number}
 */
proto.viam.app.v1.Orientation.EulerAngles.prototype.getYaw = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Orientation.EulerAngles} returns this
 */
proto.viam.app.v1.Orientation.EulerAngles.prototype.setYaw = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.Orientation.AxisAngles.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.Orientation.AxisAngles.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.Orientation.AxisAngles} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.Orientation.AxisAngles.toObject = function(includeInstance, msg) {
  var f, obj = {
    theta: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    z: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.Orientation.AxisAngles}
 */
proto.viam.app.v1.Orientation.AxisAngles.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.Orientation.AxisAngles;
  return proto.viam.app.v1.Orientation.AxisAngles.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.Orientation.AxisAngles} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.Orientation.AxisAngles}
 */
proto.viam.app.v1.Orientation.AxisAngles.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTheta(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setY(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.Orientation.AxisAngles.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.Orientation.AxisAngles.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.Orientation.AxisAngles} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.Orientation.AxisAngles.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTheta();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getX();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional double theta = 1;
 * @return {number}
 */
proto.viam.app.v1.Orientation.AxisAngles.prototype.getTheta = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Orientation.AxisAngles} returns this
 */
proto.viam.app.v1.Orientation.AxisAngles.prototype.setTheta = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double x = 2;
 * @return {number}
 */
proto.viam.app.v1.Orientation.AxisAngles.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Orientation.AxisAngles} returns this
 */
proto.viam.app.v1.Orientation.AxisAngles.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double y = 3;
 * @return {number}
 */
proto.viam.app.v1.Orientation.AxisAngles.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Orientation.AxisAngles} returns this
 */
proto.viam.app.v1.Orientation.AxisAngles.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double z = 4;
 * @return {number}
 */
proto.viam.app.v1.Orientation.AxisAngles.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Orientation.AxisAngles} returns this
 */
proto.viam.app.v1.Orientation.AxisAngles.prototype.setZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.Orientation.Quaternion.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.Orientation.Quaternion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.Orientation.Quaternion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.Orientation.Quaternion.toObject = function(includeInstance, msg) {
  var f, obj = {
    w: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    z: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.Orientation.Quaternion}
 */
proto.viam.app.v1.Orientation.Quaternion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.Orientation.Quaternion;
  return proto.viam.app.v1.Orientation.Quaternion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.Orientation.Quaternion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.Orientation.Quaternion}
 */
proto.viam.app.v1.Orientation.Quaternion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setW(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setY(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.Orientation.Quaternion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.Orientation.Quaternion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.Orientation.Quaternion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.Orientation.Quaternion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getW();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getX();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional double w = 1;
 * @return {number}
 */
proto.viam.app.v1.Orientation.Quaternion.prototype.getW = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Orientation.Quaternion} returns this
 */
proto.viam.app.v1.Orientation.Quaternion.prototype.setW = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double x = 2;
 * @return {number}
 */
proto.viam.app.v1.Orientation.Quaternion.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Orientation.Quaternion} returns this
 */
proto.viam.app.v1.Orientation.Quaternion.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double y = 3;
 * @return {number}
 */
proto.viam.app.v1.Orientation.Quaternion.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Orientation.Quaternion} returns this
 */
proto.viam.app.v1.Orientation.Quaternion.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double z = 4;
 * @return {number}
 */
proto.viam.app.v1.Orientation.Quaternion.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.v1.Orientation.Quaternion} returns this
 */
proto.viam.app.v1.Orientation.Quaternion.prototype.setZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional NoOrientation no_orientation = 1;
 * @return {?proto.viam.app.v1.Orientation.NoOrientation}
 */
proto.viam.app.v1.Orientation.prototype.getNoOrientation = function() {
  return /** @type{?proto.viam.app.v1.Orientation.NoOrientation} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.v1.Orientation.NoOrientation, 1));
};


/**
 * @param {?proto.viam.app.v1.Orientation.NoOrientation|undefined} value
 * @return {!proto.viam.app.v1.Orientation} returns this
*/
proto.viam.app.v1.Orientation.prototype.setNoOrientation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.viam.app.v1.Orientation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.Orientation} returns this
 */
proto.viam.app.v1.Orientation.prototype.clearNoOrientation = function() {
  return this.setNoOrientation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.Orientation.prototype.hasNoOrientation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional OrientationVectorRadians vector_radians = 2;
 * @return {?proto.viam.app.v1.Orientation.OrientationVectorRadians}
 */
proto.viam.app.v1.Orientation.prototype.getVectorRadians = function() {
  return /** @type{?proto.viam.app.v1.Orientation.OrientationVectorRadians} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.v1.Orientation.OrientationVectorRadians, 2));
};


/**
 * @param {?proto.viam.app.v1.Orientation.OrientationVectorRadians|undefined} value
 * @return {!proto.viam.app.v1.Orientation} returns this
*/
proto.viam.app.v1.Orientation.prototype.setVectorRadians = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.viam.app.v1.Orientation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.Orientation} returns this
 */
proto.viam.app.v1.Orientation.prototype.clearVectorRadians = function() {
  return this.setVectorRadians(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.Orientation.prototype.hasVectorRadians = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OrientationVectorDegrees vector_degrees = 3;
 * @return {?proto.viam.app.v1.Orientation.OrientationVectorDegrees}
 */
proto.viam.app.v1.Orientation.prototype.getVectorDegrees = function() {
  return /** @type{?proto.viam.app.v1.Orientation.OrientationVectorDegrees} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.v1.Orientation.OrientationVectorDegrees, 3));
};


/**
 * @param {?proto.viam.app.v1.Orientation.OrientationVectorDegrees|undefined} value
 * @return {!proto.viam.app.v1.Orientation} returns this
*/
proto.viam.app.v1.Orientation.prototype.setVectorDegrees = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.viam.app.v1.Orientation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.Orientation} returns this
 */
proto.viam.app.v1.Orientation.prototype.clearVectorDegrees = function() {
  return this.setVectorDegrees(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.Orientation.prototype.hasVectorDegrees = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional EulerAngles euler_angles = 4;
 * @return {?proto.viam.app.v1.Orientation.EulerAngles}
 */
proto.viam.app.v1.Orientation.prototype.getEulerAngles = function() {
  return /** @type{?proto.viam.app.v1.Orientation.EulerAngles} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.v1.Orientation.EulerAngles, 4));
};


/**
 * @param {?proto.viam.app.v1.Orientation.EulerAngles|undefined} value
 * @return {!proto.viam.app.v1.Orientation} returns this
*/
proto.viam.app.v1.Orientation.prototype.setEulerAngles = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.viam.app.v1.Orientation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.Orientation} returns this
 */
proto.viam.app.v1.Orientation.prototype.clearEulerAngles = function() {
  return this.setEulerAngles(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.Orientation.prototype.hasEulerAngles = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional AxisAngles axis_angles = 5;
 * @return {?proto.viam.app.v1.Orientation.AxisAngles}
 */
proto.viam.app.v1.Orientation.prototype.getAxisAngles = function() {
  return /** @type{?proto.viam.app.v1.Orientation.AxisAngles} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.v1.Orientation.AxisAngles, 5));
};


/**
 * @param {?proto.viam.app.v1.Orientation.AxisAngles|undefined} value
 * @return {!proto.viam.app.v1.Orientation} returns this
*/
proto.viam.app.v1.Orientation.prototype.setAxisAngles = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.viam.app.v1.Orientation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.Orientation} returns this
 */
proto.viam.app.v1.Orientation.prototype.clearAxisAngles = function() {
  return this.setAxisAngles(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.Orientation.prototype.hasAxisAngles = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Quaternion quaternion = 6;
 * @return {?proto.viam.app.v1.Orientation.Quaternion}
 */
proto.viam.app.v1.Orientation.prototype.getQuaternion = function() {
  return /** @type{?proto.viam.app.v1.Orientation.Quaternion} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.v1.Orientation.Quaternion, 6));
};


/**
 * @param {?proto.viam.app.v1.Orientation.Quaternion|undefined} value
 * @return {!proto.viam.app.v1.Orientation} returns this
*/
proto.viam.app.v1.Orientation.prototype.setQuaternion = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.viam.app.v1.Orientation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.Orientation} returns this
 */
proto.viam.app.v1.Orientation.prototype.clearQuaternion = function() {
  return this.setQuaternion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.Orientation.prototype.hasQuaternion = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.app.v1.RemoteConfig.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.RemoteConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.RemoteConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.RemoteConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.RemoteConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    address: jspb.Message.getFieldWithDefault(msg, 2, ""),
    frame: (f = msg.getFrame()) && proto.viam.app.v1.Frame.toObject(includeInstance, f),
    auth: (f = msg.getAuth()) && proto.viam.app.v1.RemoteAuth.toObject(includeInstance, f),
    managedBy: jspb.Message.getFieldWithDefault(msg, 5, ""),
    insecure: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    connectionCheckInterval: (f = msg.getConnectionCheckInterval()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    reconnectInterval: (f = msg.getReconnectInterval()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    serviceConfigsList: jspb.Message.toObjectList(msg.getServiceConfigsList(),
    proto.viam.app.v1.ResourceLevelServiceConfig.toObject, includeInstance),
    secret: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.RemoteConfig}
 */
proto.viam.app.v1.RemoteConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.RemoteConfig;
  return proto.viam.app.v1.RemoteConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.RemoteConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.RemoteConfig}
 */
proto.viam.app.v1.RemoteConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 3:
      var value = new proto.viam.app.v1.Frame;
      reader.readMessage(value,proto.viam.app.v1.Frame.deserializeBinaryFromReader);
      msg.setFrame(value);
      break;
    case 4:
      var value = new proto.viam.app.v1.RemoteAuth;
      reader.readMessage(value,proto.viam.app.v1.RemoteAuth.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setManagedBy(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInsecure(value);
      break;
    case 7:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setConnectionCheckInterval(value);
      break;
    case 8:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setReconnectInterval(value);
      break;
    case 9:
      var value = new proto.viam.app.v1.ResourceLevelServiceConfig;
      reader.readMessage(value,proto.viam.app.v1.ResourceLevelServiceConfig.deserializeBinaryFromReader);
      msg.addServiceConfigs(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.RemoteConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.RemoteConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.RemoteConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.RemoteConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFrame();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.viam.app.v1.Frame.serializeBinaryToWriter
    );
  }
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.viam.app.v1.RemoteAuth.serializeBinaryToWriter
    );
  }
  f = message.getManagedBy();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getInsecure();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getConnectionCheckInterval();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getReconnectInterval();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getServiceConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.viam.app.v1.ResourceLevelServiceConfig.serializeBinaryToWriter
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.app.v1.RemoteConfig.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.RemoteConfig} returns this
 */
proto.viam.app.v1.RemoteConfig.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.viam.app.v1.RemoteConfig.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.RemoteConfig} returns this
 */
proto.viam.app.v1.RemoteConfig.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Frame frame = 3;
 * @return {?proto.viam.app.v1.Frame}
 */
proto.viam.app.v1.RemoteConfig.prototype.getFrame = function() {
  return /** @type{?proto.viam.app.v1.Frame} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.v1.Frame, 3));
};


/**
 * @param {?proto.viam.app.v1.Frame|undefined} value
 * @return {!proto.viam.app.v1.RemoteConfig} returns this
*/
proto.viam.app.v1.RemoteConfig.prototype.setFrame = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.RemoteConfig} returns this
 */
proto.viam.app.v1.RemoteConfig.prototype.clearFrame = function() {
  return this.setFrame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.RemoteConfig.prototype.hasFrame = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RemoteAuth auth = 4;
 * @return {?proto.viam.app.v1.RemoteAuth}
 */
proto.viam.app.v1.RemoteConfig.prototype.getAuth = function() {
  return /** @type{?proto.viam.app.v1.RemoteAuth} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.v1.RemoteAuth, 4));
};


/**
 * @param {?proto.viam.app.v1.RemoteAuth|undefined} value
 * @return {!proto.viam.app.v1.RemoteConfig} returns this
*/
proto.viam.app.v1.RemoteConfig.prototype.setAuth = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.RemoteConfig} returns this
 */
proto.viam.app.v1.RemoteConfig.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.RemoteConfig.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string managed_by = 5;
 * @return {string}
 */
proto.viam.app.v1.RemoteConfig.prototype.getManagedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.RemoteConfig} returns this
 */
proto.viam.app.v1.RemoteConfig.prototype.setManagedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool insecure = 6;
 * @return {boolean}
 */
proto.viam.app.v1.RemoteConfig.prototype.getInsecure = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.app.v1.RemoteConfig} returns this
 */
proto.viam.app.v1.RemoteConfig.prototype.setInsecure = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional google.protobuf.Duration connection_check_interval = 7;
 * @return {?proto.google.protobuf.Duration}
 */
proto.viam.app.v1.RemoteConfig.prototype.getConnectionCheckInterval = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 7));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.viam.app.v1.RemoteConfig} returns this
*/
proto.viam.app.v1.RemoteConfig.prototype.setConnectionCheckInterval = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.RemoteConfig} returns this
 */
proto.viam.app.v1.RemoteConfig.prototype.clearConnectionCheckInterval = function() {
  return this.setConnectionCheckInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.RemoteConfig.prototype.hasConnectionCheckInterval = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Duration reconnect_interval = 8;
 * @return {?proto.google.protobuf.Duration}
 */
proto.viam.app.v1.RemoteConfig.prototype.getReconnectInterval = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 8));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.viam.app.v1.RemoteConfig} returns this
*/
proto.viam.app.v1.RemoteConfig.prototype.setReconnectInterval = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.RemoteConfig} returns this
 */
proto.viam.app.v1.RemoteConfig.prototype.clearReconnectInterval = function() {
  return this.setReconnectInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.RemoteConfig.prototype.hasReconnectInterval = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated ResourceLevelServiceConfig service_configs = 9;
 * @return {!Array<!proto.viam.app.v1.ResourceLevelServiceConfig>}
 */
proto.viam.app.v1.RemoteConfig.prototype.getServiceConfigsList = function() {
  return /** @type{!Array<!proto.viam.app.v1.ResourceLevelServiceConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.app.v1.ResourceLevelServiceConfig, 9));
};


/**
 * @param {!Array<!proto.viam.app.v1.ResourceLevelServiceConfig>} value
 * @return {!proto.viam.app.v1.RemoteConfig} returns this
*/
proto.viam.app.v1.RemoteConfig.prototype.setServiceConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.viam.app.v1.ResourceLevelServiceConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.app.v1.ResourceLevelServiceConfig}
 */
proto.viam.app.v1.RemoteConfig.prototype.addServiceConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.viam.app.v1.ResourceLevelServiceConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.v1.RemoteConfig} returns this
 */
proto.viam.app.v1.RemoteConfig.prototype.clearServiceConfigsList = function() {
  return this.setServiceConfigsList([]);
};


/**
 * optional string secret = 10;
 * @return {string}
 */
proto.viam.app.v1.RemoteConfig.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.RemoteConfig} returns this
 */
proto.viam.app.v1.RemoteConfig.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.RemoteAuth.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.RemoteAuth.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.RemoteAuth} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.RemoteAuth.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentials: (f = msg.getCredentials()) && proto.viam.app.v1.RemoteAuth.Credentials.toObject(includeInstance, f),
    entity: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.RemoteAuth}
 */
proto.viam.app.v1.RemoteAuth.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.RemoteAuth;
  return proto.viam.app.v1.RemoteAuth.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.RemoteAuth} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.RemoteAuth}
 */
proto.viam.app.v1.RemoteAuth.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.app.v1.RemoteAuth.Credentials;
      reader.readMessage(value,proto.viam.app.v1.RemoteAuth.Credentials.deserializeBinaryFromReader);
      msg.setCredentials(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.RemoteAuth.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.RemoteAuth.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.RemoteAuth} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.RemoteAuth.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentials();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.viam.app.v1.RemoteAuth.Credentials.serializeBinaryToWriter
    );
  }
  f = message.getEntity();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.RemoteAuth.Credentials.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.RemoteAuth.Credentials.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.RemoteAuth.Credentials} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.RemoteAuth.Credentials.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    payload: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.RemoteAuth.Credentials}
 */
proto.viam.app.v1.RemoteAuth.Credentials.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.RemoteAuth.Credentials;
  return proto.viam.app.v1.RemoteAuth.Credentials.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.RemoteAuth.Credentials} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.RemoteAuth.Credentials}
 */
proto.viam.app.v1.RemoteAuth.Credentials.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.viam.app.v1.CredentialsType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.RemoteAuth.Credentials.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.RemoteAuth.Credentials.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.RemoteAuth.Credentials} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.RemoteAuth.Credentials.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPayload();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional CredentialsType type = 1;
 * @return {!proto.viam.app.v1.CredentialsType}
 */
proto.viam.app.v1.RemoteAuth.Credentials.prototype.getType = function() {
  return /** @type {!proto.viam.app.v1.CredentialsType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.viam.app.v1.CredentialsType} value
 * @return {!proto.viam.app.v1.RemoteAuth.Credentials} returns this
 */
proto.viam.app.v1.RemoteAuth.Credentials.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string payload = 2;
 * @return {string}
 */
proto.viam.app.v1.RemoteAuth.Credentials.prototype.getPayload = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.RemoteAuth.Credentials} returns this
 */
proto.viam.app.v1.RemoteAuth.Credentials.prototype.setPayload = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Credentials credentials = 1;
 * @return {?proto.viam.app.v1.RemoteAuth.Credentials}
 */
proto.viam.app.v1.RemoteAuth.prototype.getCredentials = function() {
  return /** @type{?proto.viam.app.v1.RemoteAuth.Credentials} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.v1.RemoteAuth.Credentials, 1));
};


/**
 * @param {?proto.viam.app.v1.RemoteAuth.Credentials|undefined} value
 * @return {!proto.viam.app.v1.RemoteAuth} returns this
*/
proto.viam.app.v1.RemoteAuth.prototype.setCredentials = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.RemoteAuth} returns this
 */
proto.viam.app.v1.RemoteAuth.prototype.clearCredentials = function() {
  return this.setCredentials(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.RemoteAuth.prototype.hasCredentials = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string entity = 2;
 * @return {string}
 */
proto.viam.app.v1.RemoteAuth.prototype.getEntity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.RemoteAuth} returns this
 */
proto.viam.app.v1.RemoteAuth.prototype.setEntity = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.app.v1.AgentInfo.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.AgentInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.AgentInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.AgentInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.AgentInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: jspb.Message.getFieldWithDefault(msg, 1, ""),
    os: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ipsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    version: jspb.Message.getFieldWithDefault(msg, 4, ""),
    gitRevision: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.AgentInfo}
 */
proto.viam.app.v1.AgentInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.AgentInfo;
  return proto.viam.app.v1.AgentInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.AgentInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.AgentInfo}
 */
proto.viam.app.v1.AgentInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOs(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addIps(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setGitRevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.AgentInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.AgentInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.AgentInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.AgentInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHost();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOs();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIpsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGitRevision();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.viam.app.v1.AgentInfo.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.AgentInfo} returns this
 */
proto.viam.app.v1.AgentInfo.prototype.setHost = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string os = 2;
 * @return {string}
 */
proto.viam.app.v1.AgentInfo.prototype.getOs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.AgentInfo} returns this
 */
proto.viam.app.v1.AgentInfo.prototype.setOs = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string ips = 3;
 * @return {!Array<string>}
 */
proto.viam.app.v1.AgentInfo.prototype.getIpsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.viam.app.v1.AgentInfo} returns this
 */
proto.viam.app.v1.AgentInfo.prototype.setIpsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.viam.app.v1.AgentInfo} returns this
 */
proto.viam.app.v1.AgentInfo.prototype.addIps = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.v1.AgentInfo} returns this
 */
proto.viam.app.v1.AgentInfo.prototype.clearIpsList = function() {
  return this.setIpsList([]);
};


/**
 * optional string version = 4;
 * @return {string}
 */
proto.viam.app.v1.AgentInfo.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.AgentInfo} returns this
 */
proto.viam.app.v1.AgentInfo.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string git_revision = 5;
 * @return {string}
 */
proto.viam.app.v1.AgentInfo.prototype.getGitRevision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.AgentInfo} returns this
 */
proto.viam.app.v1.AgentInfo.prototype.setGitRevision = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.ConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.ConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.ConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.ConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    agentInfo: (f = msg.getAgentInfo()) && proto.viam.app.v1.AgentInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.ConfigRequest}
 */
proto.viam.app.v1.ConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.ConfigRequest;
  return proto.viam.app.v1.ConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.ConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.ConfigRequest}
 */
proto.viam.app.v1.ConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.viam.app.v1.AgentInfo;
      reader.readMessage(value,proto.viam.app.v1.AgentInfo.deserializeBinaryFromReader);
      msg.setAgentInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.ConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.ConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.ConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.ConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAgentInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.viam.app.v1.AgentInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.viam.app.v1.ConfigRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.ConfigRequest} returns this
 */
proto.viam.app.v1.ConfigRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional AgentInfo agent_info = 2;
 * @return {?proto.viam.app.v1.AgentInfo}
 */
proto.viam.app.v1.ConfigRequest.prototype.getAgentInfo = function() {
  return /** @type{?proto.viam.app.v1.AgentInfo} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.v1.AgentInfo, 2));
};


/**
 * @param {?proto.viam.app.v1.AgentInfo|undefined} value
 * @return {!proto.viam.app.v1.ConfigRequest} returns this
*/
proto.viam.app.v1.ConfigRequest.prototype.setAgentInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.ConfigRequest} returns this
 */
proto.viam.app.v1.ConfigRequest.prototype.clearAgentInfo = function() {
  return this.setAgentInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.ConfigRequest.prototype.hasAgentInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.ConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.ConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.ConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.ConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.viam.app.v1.RobotConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.ConfigResponse}
 */
proto.viam.app.v1.ConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.ConfigResponse;
  return proto.viam.app.v1.ConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.ConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.ConfigResponse}
 */
proto.viam.app.v1.ConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.app.v1.RobotConfig;
      reader.readMessage(value,proto.viam.app.v1.RobotConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.ConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.ConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.ConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.ConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.viam.app.v1.RobotConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional RobotConfig config = 1;
 * @return {?proto.viam.app.v1.RobotConfig}
 */
proto.viam.app.v1.ConfigResponse.prototype.getConfig = function() {
  return /** @type{?proto.viam.app.v1.RobotConfig} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.v1.RobotConfig, 1));
};


/**
 * @param {?proto.viam.app.v1.RobotConfig|undefined} value
 * @return {!proto.viam.app.v1.ConfigResponse} returns this
*/
proto.viam.app.v1.ConfigResponse.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.ConfigResponse} returns this
 */
proto.viam.app.v1.ConfigResponse.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.ConfigResponse.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.CertificateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.CertificateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.CertificateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.CertificateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.CertificateRequest}
 */
proto.viam.app.v1.CertificateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.CertificateRequest;
  return proto.viam.app.v1.CertificateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.CertificateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.CertificateRequest}
 */
proto.viam.app.v1.CertificateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.CertificateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.CertificateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.CertificateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.CertificateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.viam.app.v1.CertificateRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.CertificateRequest} returns this
 */
proto.viam.app.v1.CertificateRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.CertificateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.CertificateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.CertificateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.CertificateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tlsCertificate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tlsPrivateKey: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.CertificateResponse}
 */
proto.viam.app.v1.CertificateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.CertificateResponse;
  return proto.viam.app.v1.CertificateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.CertificateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.CertificateResponse}
 */
proto.viam.app.v1.CertificateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTlsCertificate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTlsPrivateKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.CertificateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.CertificateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.CertificateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.CertificateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTlsCertificate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTlsPrivateKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.viam.app.v1.CertificateResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.CertificateResponse} returns this
 */
proto.viam.app.v1.CertificateResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string tls_certificate = 2;
 * @return {string}
 */
proto.viam.app.v1.CertificateResponse.prototype.getTlsCertificate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.CertificateResponse} returns this
 */
proto.viam.app.v1.CertificateResponse.prototype.setTlsCertificate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string tls_private_key = 3;
 * @return {string}
 */
proto.viam.app.v1.CertificateResponse.prototype.getTlsPrivateKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.CertificateResponse} returns this
 */
proto.viam.app.v1.CertificateResponse.prototype.setTlsPrivateKey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.app.v1.LogRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.LogRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.LogRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.LogRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.LogRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    logsList: jspb.Message.toObjectList(msg.getLogsList(),
    app_v1_app_pb.LogEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.LogRequest}
 */
proto.viam.app.v1.LogRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.LogRequest;
  return proto.viam.app.v1.LogRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.LogRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.LogRequest}
 */
proto.viam.app.v1.LogRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new app_v1_app_pb.LogEntry;
      reader.readMessage(value,app_v1_app_pb.LogEntry.deserializeBinaryFromReader);
      msg.addLogs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.LogRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.LogRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.LogRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.LogRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLogsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      app_v1_app_pb.LogEntry.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.viam.app.v1.LogRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.LogRequest} returns this
 */
proto.viam.app.v1.LogRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated LogEntry logs = 2;
 * @return {!Array<!proto.viam.app.v1.LogEntry>}
 */
proto.viam.app.v1.LogRequest.prototype.getLogsList = function() {
  return /** @type{!Array<!proto.viam.app.v1.LogEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, app_v1_app_pb.LogEntry, 2));
};


/**
 * @param {!Array<!proto.viam.app.v1.LogEntry>} value
 * @return {!proto.viam.app.v1.LogRequest} returns this
*/
proto.viam.app.v1.LogRequest.prototype.setLogsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.viam.app.v1.LogEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.app.v1.LogEntry}
 */
proto.viam.app.v1.LogRequest.prototype.addLogs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.viam.app.v1.LogEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.v1.LogRequest} returns this
 */
proto.viam.app.v1.LogRequest.prototype.clearLogsList = function() {
  return this.setLogsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.LogResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.LogResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.LogResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.LogResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.LogResponse}
 */
proto.viam.app.v1.LogResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.LogResponse;
  return proto.viam.app.v1.LogResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.LogResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.LogResponse}
 */
proto.viam.app.v1.LogResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.LogResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.LogResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.LogResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.LogResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.NeedsRestartRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.NeedsRestartRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.NeedsRestartRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.NeedsRestartRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.NeedsRestartRequest}
 */
proto.viam.app.v1.NeedsRestartRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.NeedsRestartRequest;
  return proto.viam.app.v1.NeedsRestartRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.NeedsRestartRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.NeedsRestartRequest}
 */
proto.viam.app.v1.NeedsRestartRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.NeedsRestartRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.NeedsRestartRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.NeedsRestartRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.NeedsRestartRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.viam.app.v1.NeedsRestartRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.NeedsRestartRequest} returns this
 */
proto.viam.app.v1.NeedsRestartRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.v1.NeedsRestartResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.v1.NeedsRestartResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.v1.NeedsRestartResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.NeedsRestartResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mustRestart: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    restartCheckInterval: (f = msg.getRestartCheckInterval()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.v1.NeedsRestartResponse}
 */
proto.viam.app.v1.NeedsRestartResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.v1.NeedsRestartResponse;
  return proto.viam.app.v1.NeedsRestartResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.v1.NeedsRestartResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.v1.NeedsRestartResponse}
 */
proto.viam.app.v1.NeedsRestartResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMustRestart(value);
      break;
    case 3:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setRestartCheckInterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.v1.NeedsRestartResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.v1.NeedsRestartResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.v1.NeedsRestartResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.v1.NeedsRestartResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMustRestart();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getRestartCheckInterval();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.viam.app.v1.NeedsRestartResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.v1.NeedsRestartResponse} returns this
 */
proto.viam.app.v1.NeedsRestartResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool must_restart = 2;
 * @return {boolean}
 */
proto.viam.app.v1.NeedsRestartResponse.prototype.getMustRestart = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.app.v1.NeedsRestartResponse} returns this
 */
proto.viam.app.v1.NeedsRestartResponse.prototype.setMustRestart = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional google.protobuf.Duration restart_check_interval = 3;
 * @return {?proto.google.protobuf.Duration}
 */
proto.viam.app.v1.NeedsRestartResponse.prototype.getRestartCheckInterval = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 3));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.viam.app.v1.NeedsRestartResponse} returns this
*/
proto.viam.app.v1.NeedsRestartResponse.prototype.setRestartCheckInterval = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.v1.NeedsRestartResponse} returns this
 */
proto.viam.app.v1.NeedsRestartResponse.prototype.clearRestartCheckInterval = function() {
  return this.setRestartCheckInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.v1.NeedsRestartResponse.prototype.hasRestartCheckInterval = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.viam.app.v1.CredentialsType = {
  CREDENTIALS_TYPE_UNSPECIFIED: 0,
  CREDENTIALS_TYPE_INTERNAL: 1,
  CREDENTIALS_TYPE_API_KEY: 2,
  CREDENTIALS_TYPE_ROBOT_SECRET: 3,
  CREDENTIALS_TYPE_ROBOT_LOCATION_SECRET: 4
};

goog.object.extend(exports, proto.viam.app.v1);
