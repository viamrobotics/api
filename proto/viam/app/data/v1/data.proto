syntax = "proto3";

package viam.app.data.v1;

import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

option go_package = "go.viam.com/api/app/data/v1";

// DataService is used to query robot data.
service DataService {
  // TabularDataByFilter queries tabular data and metadata based on given filters.
  rpc TabularDataByFilter(TabularDataByFilterRequest) returns (TabularDataByFilterResponse);

  // BinaryDataByFilter queries binary data and metadata based on given filters.
  rpc BinaryDataByFilter(BinaryDataByFilterRequest) returns (BinaryDataByFilterResponse);

  // BinaryDataByIDs queries binary data and metadata based on given IDs.
  rpc BinaryDataByIDs(BinaryDataByIDsRequest) returns (BinaryDataByIDsResponse);

  // DeleteTabularDataByFilter deletes tabular data based on given filters.
  rpc DeleteTabularDataByFilter(DeleteTabularDataByFilterRequest) returns (DeleteTabularDataByFilterResponse);

  // DeleteBinaryDataByFilter deletes binary data based on given filters.
  rpc DeleteBinaryDataByFilter(DeleteBinaryDataByFilterRequest) returns (DeleteBinaryDataByFilterResponse);

  // DeleteBinaryDataByIDs deletes binary data based on given IDs.
  rpc DeleteBinaryDataByIDs(DeleteBinaryDataByIDsRequest) returns (DeleteBinaryDataByIDsResponse);
}

message DataRequest {
  Filter filter = 1;
  int64 skip = 2;
  int64 limit = 3;
}

message Filter {
  string component_name = 1;
  string component_type = 2;
  string component_model = 3;
  string method = 4;
  repeated string tags = 5;
  string robot_name = 6;
  string robot_id = 7;
  string part_name = 8;
  string part_id = 9;
  string location_id = 10;
  repeated string org_ids = 11;
  repeated string mime_type = 12;
  CaptureInterval interval = 13;
}

// CaptureMetadata contains information on the settings used for the data capture
message CaptureMetadata {
  string org_id = 1;
  string location_id = 2;
  string robot_name = 3;
  string robot_id = 4;
  string part_name = 5;
  string part_id = 6;
  string component_type = 7;
  string component_model = 8;
  string component_name = 9;
  string method_name = 10;
  map<string, google.protobuf.Any> method_parameters = 11;
  repeated string tags = 12;
  string mime_type = 13;
}

// CaptureInterval describes the start and end time of the capture in this file
message CaptureInterval {
  google.protobuf.Timestamp start = 1;
  google.protobuf.Timestamp end = 2;
}

// TabularDataByFilterRequest requests tabular data based on filter values
message TabularDataByFilterRequest {
  DataRequest data_request = 1;
  bool count_only = 2;
}

// TabularDataByFilterResponse provides the data and metadata of tabular data
message TabularDataByFilterResponse {
  repeated CaptureMetadata metadata = 1;
  repeated TabularData data = 2;
  int64 count = 3;
}

message TabularData {
  google.protobuf.Struct data = 1;
  int32 metadata_index = 2;
  google.protobuf.Timestamp time_requested = 3;
  google.protobuf.Timestamp time_received = 4;
}

message BinaryData {
  bytes binary = 1;
  BinaryMetadata metadata = 2;
}

// BinaryDataByFilterRequest requests the data and metadata of binary (image + file) data when a filter is provided
message BinaryDataByFilterRequest {
  DataRequest data_request = 1;
  bool include_binary = 2;
  bool count_only = 3;
}

// BinaryDataByFilterResponse provides the data and metadata of binary (image + file) data when a filter is provided
message BinaryDataByFilterResponse {
  repeated BinaryData data = 1;
  int64 count = 2;
}

// BinaryDataByFilterRequest requests the data and metadata of binary (image + file) data by file ids
message BinaryDataByIDsRequest {
  repeated string file_ids = 1;
  bool include_binary = 2; // by default
}

// BinaryDataByIDsResponse provides the data and metadata of binary (image + file) data when a filter is provided
message BinaryDataByIDsResponse {
  repeated BinaryData data = 1;
  int64 count = 2;
}

message BinaryMetadata {
  string id = 1;
  CaptureMetadata capture_metadata = 2;
  google.protobuf.Timestamp time_requested = 3;
  google.protobuf.Timestamp time_received = 4;
  string file_name = 5;
  string file_ext = 6;
  string uri = 7;
}

// DeleteTabularDataByFilterRequest deletes the data and metadata of tabular data when a filter is provided
message DeleteTabularDataByFilterRequest {
  Filter filter = 1;
}

// DeleteBinaryDataByFilterResponse returns the number of tabular datapoints deleted when a filter is provided
message DeleteTabularDataByFilterResponse {
  int64 deleted_count = 1;
}

// DeleteBinaryDataByFilterRequest deletes the data and metadata of binary data when a filter is provided
message DeleteBinaryDataByFilterRequest {
  Filter filter = 1;
}

// DeleteBinaryDataByFilterResponse returns the number of binary files deleted when a filter is provided
message DeleteBinaryDataByFilterResponse {
  int64 deleted_count = 1;
}

// DeleteBinaryDataByIDsRequest deletes the data and metadata of binary data when file ids are provided
message DeleteBinaryDataByIDsRequest {
  repeated string file_ids = 1;
}

// DeleteBinaryDataByIDsResponse returns the number of binary files deleted when file ids are provided
message DeleteBinaryDataByIDsResponse {
  int64 deleted_count = 1;
}
