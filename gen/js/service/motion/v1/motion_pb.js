// source: service/motion/v1/motion.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var common_v1_common_pb = require('../../../common/v1/common_pb.js');
goog.object.extend(proto, common_v1_common_pb);
var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.viam.service.motion.v1.CollisionSpecification', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.ComponentState', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.Constraints', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.GetPlanRequest', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.GetPlanResponse', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.GetPoseRequest', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.GetPoseResponse', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.LinearConstraint', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.ListPlanStatusesRequest', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.ListPlanStatusesResponse', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.MotionConfiguration', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.MoveOnGlobeNewRequest', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.MoveOnGlobeNewResponse', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.MoveOnGlobeRequest', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.MoveOnGlobeResponse', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.MoveOnMapRequest', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.MoveOnMapResponse', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.MoveRequest', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.MoveResponse', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.ObstacleDetector', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.OrientationConstraint', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.Plan', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.PlanState', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.PlanStatus', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.PlanStatusWithID', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.PlanStep', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.PlanWithStatus', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.StopPlanRequest', null, global);
goog.exportSymbol('proto.viam.service.motion.v1.StopPlanResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.MoveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.motion.v1.MoveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.MoveRequest.displayName = 'proto.viam.service.motion.v1.MoveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.MoveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.motion.v1.MoveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.MoveResponse.displayName = 'proto.viam.service.motion.v1.MoveResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.MoveOnMapRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.motion.v1.MoveOnMapRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.MoveOnMapRequest.displayName = 'proto.viam.service.motion.v1.MoveOnMapRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.MoveOnMapResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.motion.v1.MoveOnMapResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.MoveOnMapResponse.displayName = 'proto.viam.service.motion.v1.MoveOnMapResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.ObstacleDetector = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.motion.v1.ObstacleDetector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.ObstacleDetector.displayName = 'proto.viam.service.motion.v1.ObstacleDetector';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.MotionConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.motion.v1.MotionConfiguration.repeatedFields_, null);
};
goog.inherits(proto.viam.service.motion.v1.MotionConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.MotionConfiguration.displayName = 'proto.viam.service.motion.v1.MotionConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.motion.v1.MoveOnGlobeRequest.repeatedFields_, null);
};
goog.inherits(proto.viam.service.motion.v1.MoveOnGlobeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.MoveOnGlobeRequest.displayName = 'proto.viam.service.motion.v1.MoveOnGlobeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.MoveOnGlobeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.motion.v1.MoveOnGlobeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.MoveOnGlobeResponse.displayName = 'proto.viam.service.motion.v1.MoveOnGlobeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.motion.v1.MoveOnGlobeNewRequest.repeatedFields_, null);
};
goog.inherits(proto.viam.service.motion.v1.MoveOnGlobeNewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.MoveOnGlobeNewRequest.displayName = 'proto.viam.service.motion.v1.MoveOnGlobeNewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.MoveOnGlobeNewResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.motion.v1.MoveOnGlobeNewResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.MoveOnGlobeNewResponse.displayName = 'proto.viam.service.motion.v1.MoveOnGlobeNewResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.GetPoseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.motion.v1.GetPoseRequest.repeatedFields_, null);
};
goog.inherits(proto.viam.service.motion.v1.GetPoseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.GetPoseRequest.displayName = 'proto.viam.service.motion.v1.GetPoseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.GetPoseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.motion.v1.GetPoseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.GetPoseResponse.displayName = 'proto.viam.service.motion.v1.GetPoseResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.StopPlanRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.motion.v1.StopPlanRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.StopPlanRequest.displayName = 'proto.viam.service.motion.v1.StopPlanRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.StopPlanResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.motion.v1.StopPlanResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.StopPlanResponse.displayName = 'proto.viam.service.motion.v1.StopPlanResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.ListPlanStatusesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.motion.v1.ListPlanStatusesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.ListPlanStatusesRequest.displayName = 'proto.viam.service.motion.v1.ListPlanStatusesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.ListPlanStatusesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.motion.v1.ListPlanStatusesResponse.repeatedFields_, null);
};
goog.inherits(proto.viam.service.motion.v1.ListPlanStatusesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.ListPlanStatusesResponse.displayName = 'proto.viam.service.motion.v1.ListPlanStatusesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.GetPlanRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.motion.v1.GetPlanRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.GetPlanRequest.displayName = 'proto.viam.service.motion.v1.GetPlanRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.GetPlanResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.motion.v1.GetPlanResponse.repeatedFields_, null);
};
goog.inherits(proto.viam.service.motion.v1.GetPlanResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.GetPlanResponse.displayName = 'proto.viam.service.motion.v1.GetPlanResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.Constraints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.motion.v1.Constraints.repeatedFields_, null);
};
goog.inherits(proto.viam.service.motion.v1.Constraints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.Constraints.displayName = 'proto.viam.service.motion.v1.Constraints';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.LinearConstraint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.motion.v1.LinearConstraint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.LinearConstraint.displayName = 'proto.viam.service.motion.v1.LinearConstraint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.OrientationConstraint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.motion.v1.OrientationConstraint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.OrientationConstraint.displayName = 'proto.viam.service.motion.v1.OrientationConstraint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.CollisionSpecification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.motion.v1.CollisionSpecification.repeatedFields_, null);
};
goog.inherits(proto.viam.service.motion.v1.CollisionSpecification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.CollisionSpecification.displayName = 'proto.viam.service.motion.v1.CollisionSpecification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions.displayName = 'proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.PlanWithStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.motion.v1.PlanWithStatus.repeatedFields_, null);
};
goog.inherits(proto.viam.service.motion.v1.PlanWithStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.PlanWithStatus.displayName = 'proto.viam.service.motion.v1.PlanWithStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.PlanStatusWithID = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.motion.v1.PlanStatusWithID, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.PlanStatusWithID.displayName = 'proto.viam.service.motion.v1.PlanStatusWithID';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.PlanStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.motion.v1.PlanStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.PlanStatus.displayName = 'proto.viam.service.motion.v1.PlanStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.Plan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.motion.v1.Plan.repeatedFields_, null);
};
goog.inherits(proto.viam.service.motion.v1.Plan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.Plan.displayName = 'proto.viam.service.motion.v1.Plan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.PlanStep = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.motion.v1.PlanStep, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.PlanStep.displayName = 'proto.viam.service.motion.v1.PlanStep';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.motion.v1.ComponentState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.motion.v1.ComponentState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.motion.v1.ComponentState.displayName = 'proto.viam.service.motion.v1.ComponentState';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.MoveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.MoveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.MoveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.MoveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    destination: (f = msg.getDestination()) && common_v1_common_pb.PoseInFrame.toObject(includeInstance, f),
    componentName: (f = msg.getComponentName()) && common_v1_common_pb.ResourceName.toObject(includeInstance, f),
    worldState: (f = msg.getWorldState()) && common_v1_common_pb.WorldState.toObject(includeInstance, f),
    constraints: (f = msg.getConstraints()) && proto.viam.service.motion.v1.Constraints.toObject(includeInstance, f),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.MoveRequest}
 */
proto.viam.service.motion.v1.MoveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.MoveRequest;
  return proto.viam.service.motion.v1.MoveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.MoveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.MoveRequest}
 */
proto.viam.service.motion.v1.MoveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new common_v1_common_pb.PoseInFrame;
      reader.readMessage(value,common_v1_common_pb.PoseInFrame.deserializeBinaryFromReader);
      msg.setDestination(value);
      break;
    case 3:
      var value = new common_v1_common_pb.ResourceName;
      reader.readMessage(value,common_v1_common_pb.ResourceName.deserializeBinaryFromReader);
      msg.setComponentName(value);
      break;
    case 4:
      var value = new common_v1_common_pb.WorldState;
      reader.readMessage(value,common_v1_common_pb.WorldState.deserializeBinaryFromReader);
      msg.setWorldState(value);
      break;
    case 5:
      var value = new proto.viam.service.motion.v1.Constraints;
      reader.readMessage(value,proto.viam.service.motion.v1.Constraints.deserializeBinaryFromReader);
      msg.setConstraints(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.MoveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.MoveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.MoveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.MoveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDestination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_v1_common_pb.PoseInFrame.serializeBinaryToWriter
    );
  }
  f = message.getComponentName();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_v1_common_pb.ResourceName.serializeBinaryToWriter
    );
  }
  f = message.getWorldState();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_v1_common_pb.WorldState.serializeBinaryToWriter
    );
  }
  f = message.getConstraints();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.viam.service.motion.v1.Constraints.serializeBinaryToWriter
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.motion.v1.MoveRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.motion.v1.MoveRequest} returns this
 */
proto.viam.service.motion.v1.MoveRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional viam.common.v1.PoseInFrame destination = 2;
 * @return {?proto.viam.common.v1.PoseInFrame}
 */
proto.viam.service.motion.v1.MoveRequest.prototype.getDestination = function() {
  return /** @type{?proto.viam.common.v1.PoseInFrame} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.PoseInFrame, 2));
};


/**
 * @param {?proto.viam.common.v1.PoseInFrame|undefined} value
 * @return {!proto.viam.service.motion.v1.MoveRequest} returns this
*/
proto.viam.service.motion.v1.MoveRequest.prototype.setDestination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveRequest} returns this
 */
proto.viam.service.motion.v1.MoveRequest.prototype.clearDestination = function() {
  return this.setDestination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveRequest.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional viam.common.v1.ResourceName component_name = 3;
 * @return {?proto.viam.common.v1.ResourceName}
 */
proto.viam.service.motion.v1.MoveRequest.prototype.getComponentName = function() {
  return /** @type{?proto.viam.common.v1.ResourceName} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.ResourceName, 3));
};


/**
 * @param {?proto.viam.common.v1.ResourceName|undefined} value
 * @return {!proto.viam.service.motion.v1.MoveRequest} returns this
*/
proto.viam.service.motion.v1.MoveRequest.prototype.setComponentName = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveRequest} returns this
 */
proto.viam.service.motion.v1.MoveRequest.prototype.clearComponentName = function() {
  return this.setComponentName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveRequest.prototype.hasComponentName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional viam.common.v1.WorldState world_state = 4;
 * @return {?proto.viam.common.v1.WorldState}
 */
proto.viam.service.motion.v1.MoveRequest.prototype.getWorldState = function() {
  return /** @type{?proto.viam.common.v1.WorldState} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.WorldState, 4));
};


/**
 * @param {?proto.viam.common.v1.WorldState|undefined} value
 * @return {!proto.viam.service.motion.v1.MoveRequest} returns this
*/
proto.viam.service.motion.v1.MoveRequest.prototype.setWorldState = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveRequest} returns this
 */
proto.viam.service.motion.v1.MoveRequest.prototype.clearWorldState = function() {
  return this.setWorldState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveRequest.prototype.hasWorldState = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Constraints constraints = 5;
 * @return {?proto.viam.service.motion.v1.Constraints}
 */
proto.viam.service.motion.v1.MoveRequest.prototype.getConstraints = function() {
  return /** @type{?proto.viam.service.motion.v1.Constraints} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.motion.v1.Constraints, 5));
};


/**
 * @param {?proto.viam.service.motion.v1.Constraints|undefined} value
 * @return {!proto.viam.service.motion.v1.MoveRequest} returns this
*/
proto.viam.service.motion.v1.MoveRequest.prototype.setConstraints = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveRequest} returns this
 */
proto.viam.service.motion.v1.MoveRequest.prototype.clearConstraints = function() {
  return this.setConstraints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveRequest.prototype.hasConstraints = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.motion.v1.MoveRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.motion.v1.MoveRequest} returns this
*/
proto.viam.service.motion.v1.MoveRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveRequest} returns this
 */
proto.viam.service.motion.v1.MoveRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.MoveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.MoveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.MoveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.MoveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.MoveResponse}
 */
proto.viam.service.motion.v1.MoveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.MoveResponse;
  return proto.viam.service.motion.v1.MoveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.MoveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.MoveResponse}
 */
proto.viam.service.motion.v1.MoveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.MoveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.MoveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.MoveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.MoveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.motion.v1.MoveResponse} returns this
 */
proto.viam.service.motion.v1.MoveResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.MoveOnMapRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.MoveOnMapRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.MoveOnMapRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    destination: (f = msg.getDestination()) && common_v1_common_pb.Pose.toObject(includeInstance, f),
    componentName: (f = msg.getComponentName()) && common_v1_common_pb.ResourceName.toObject(includeInstance, f),
    slamServiceName: (f = msg.getSlamServiceName()) && common_v1_common_pb.ResourceName.toObject(includeInstance, f),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.MoveOnMapRequest}
 */
proto.viam.service.motion.v1.MoveOnMapRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.MoveOnMapRequest;
  return proto.viam.service.motion.v1.MoveOnMapRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.MoveOnMapRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.MoveOnMapRequest}
 */
proto.viam.service.motion.v1.MoveOnMapRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new common_v1_common_pb.Pose;
      reader.readMessage(value,common_v1_common_pb.Pose.deserializeBinaryFromReader);
      msg.setDestination(value);
      break;
    case 3:
      var value = new common_v1_common_pb.ResourceName;
      reader.readMessage(value,common_v1_common_pb.ResourceName.deserializeBinaryFromReader);
      msg.setComponentName(value);
      break;
    case 4:
      var value = new common_v1_common_pb.ResourceName;
      reader.readMessage(value,common_v1_common_pb.ResourceName.deserializeBinaryFromReader);
      msg.setSlamServiceName(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.MoveOnMapRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.MoveOnMapRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.MoveOnMapRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDestination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_v1_common_pb.Pose.serializeBinaryToWriter
    );
  }
  f = message.getComponentName();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_v1_common_pb.ResourceName.serializeBinaryToWriter
    );
  }
  f = message.getSlamServiceName();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_v1_common_pb.ResourceName.serializeBinaryToWriter
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.motion.v1.MoveOnMapRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional viam.common.v1.Pose destination = 2;
 * @return {?proto.viam.common.v1.Pose}
 */
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.getDestination = function() {
  return /** @type{?proto.viam.common.v1.Pose} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.Pose, 2));
};


/**
 * @param {?proto.viam.common.v1.Pose|undefined} value
 * @return {!proto.viam.service.motion.v1.MoveOnMapRequest} returns this
*/
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.setDestination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveOnMapRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.clearDestination = function() {
  return this.setDestination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional viam.common.v1.ResourceName component_name = 3;
 * @return {?proto.viam.common.v1.ResourceName}
 */
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.getComponentName = function() {
  return /** @type{?proto.viam.common.v1.ResourceName} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.ResourceName, 3));
};


/**
 * @param {?proto.viam.common.v1.ResourceName|undefined} value
 * @return {!proto.viam.service.motion.v1.MoveOnMapRequest} returns this
*/
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.setComponentName = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveOnMapRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.clearComponentName = function() {
  return this.setComponentName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.hasComponentName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional viam.common.v1.ResourceName slam_service_name = 4;
 * @return {?proto.viam.common.v1.ResourceName}
 */
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.getSlamServiceName = function() {
  return /** @type{?proto.viam.common.v1.ResourceName} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.ResourceName, 4));
};


/**
 * @param {?proto.viam.common.v1.ResourceName|undefined} value
 * @return {!proto.viam.service.motion.v1.MoveOnMapRequest} returns this
*/
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.setSlamServiceName = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveOnMapRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.clearSlamServiceName = function() {
  return this.setSlamServiceName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.hasSlamServiceName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.motion.v1.MoveOnMapRequest} returns this
*/
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveOnMapRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveOnMapRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.MoveOnMapResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.MoveOnMapResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.MoveOnMapResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.MoveOnMapResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.MoveOnMapResponse}
 */
proto.viam.service.motion.v1.MoveOnMapResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.MoveOnMapResponse;
  return proto.viam.service.motion.v1.MoveOnMapResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.MoveOnMapResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.MoveOnMapResponse}
 */
proto.viam.service.motion.v1.MoveOnMapResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.MoveOnMapResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.MoveOnMapResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.MoveOnMapResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.MoveOnMapResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveOnMapResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.motion.v1.MoveOnMapResponse} returns this
 */
proto.viam.service.motion.v1.MoveOnMapResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.ObstacleDetector.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.ObstacleDetector.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.ObstacleDetector} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.ObstacleDetector.toObject = function(includeInstance, msg) {
  var f, obj = {
    visionService: (f = msg.getVisionService()) && common_v1_common_pb.ResourceName.toObject(includeInstance, f),
    camera: (f = msg.getCamera()) && common_v1_common_pb.ResourceName.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.ObstacleDetector}
 */
proto.viam.service.motion.v1.ObstacleDetector.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.ObstacleDetector;
  return proto.viam.service.motion.v1.ObstacleDetector.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.ObstacleDetector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.ObstacleDetector}
 */
proto.viam.service.motion.v1.ObstacleDetector.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_v1_common_pb.ResourceName;
      reader.readMessage(value,common_v1_common_pb.ResourceName.deserializeBinaryFromReader);
      msg.setVisionService(value);
      break;
    case 2:
      var value = new common_v1_common_pb.ResourceName;
      reader.readMessage(value,common_v1_common_pb.ResourceName.deserializeBinaryFromReader);
      msg.setCamera(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.ObstacleDetector.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.ObstacleDetector.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.ObstacleDetector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.ObstacleDetector.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVisionService();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_v1_common_pb.ResourceName.serializeBinaryToWriter
    );
  }
  f = message.getCamera();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_v1_common_pb.ResourceName.serializeBinaryToWriter
    );
  }
};


/**
 * optional viam.common.v1.ResourceName vision_service = 1;
 * @return {?proto.viam.common.v1.ResourceName}
 */
proto.viam.service.motion.v1.ObstacleDetector.prototype.getVisionService = function() {
  return /** @type{?proto.viam.common.v1.ResourceName} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.ResourceName, 1));
};


/**
 * @param {?proto.viam.common.v1.ResourceName|undefined} value
 * @return {!proto.viam.service.motion.v1.ObstacleDetector} returns this
*/
proto.viam.service.motion.v1.ObstacleDetector.prototype.setVisionService = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.ObstacleDetector} returns this
 */
proto.viam.service.motion.v1.ObstacleDetector.prototype.clearVisionService = function() {
  return this.setVisionService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.ObstacleDetector.prototype.hasVisionService = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional viam.common.v1.ResourceName camera = 2;
 * @return {?proto.viam.common.v1.ResourceName}
 */
proto.viam.service.motion.v1.ObstacleDetector.prototype.getCamera = function() {
  return /** @type{?proto.viam.common.v1.ResourceName} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.ResourceName, 2));
};


/**
 * @param {?proto.viam.common.v1.ResourceName|undefined} value
 * @return {!proto.viam.service.motion.v1.ObstacleDetector} returns this
*/
proto.viam.service.motion.v1.ObstacleDetector.prototype.setCamera = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.ObstacleDetector} returns this
 */
proto.viam.service.motion.v1.ObstacleDetector.prototype.clearCamera = function() {
  return this.setCamera(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.ObstacleDetector.prototype.hasCamera = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.motion.v1.MotionConfiguration.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.MotionConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.MotionConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.MotionConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    obstacleDetectorsList: jspb.Message.toObjectList(msg.getObstacleDetectorsList(),
    proto.viam.service.motion.v1.ObstacleDetector.toObject, includeInstance),
    positionPollingFrequencyHz: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    obstaclePollingFrequencyHz: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    planDeviationM: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    linearMPerSec: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    angularDegsPerSec: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.MotionConfiguration}
 */
proto.viam.service.motion.v1.MotionConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.MotionConfiguration;
  return proto.viam.service.motion.v1.MotionConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.MotionConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.MotionConfiguration}
 */
proto.viam.service.motion.v1.MotionConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.service.motion.v1.ObstacleDetector;
      reader.readMessage(value,proto.viam.service.motion.v1.ObstacleDetector.deserializeBinaryFromReader);
      msg.addObstacleDetectors(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPositionPollingFrequencyHz(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setObstaclePollingFrequencyHz(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPlanDeviationM(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLinearMPerSec(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAngularDegsPerSec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.MotionConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.MotionConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.MotionConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObstacleDetectorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.viam.service.motion.v1.ObstacleDetector.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * repeated ObstacleDetector obstacle_detectors = 1;
 * @return {!Array<!proto.viam.service.motion.v1.ObstacleDetector>}
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.getObstacleDetectorsList = function() {
  return /** @type{!Array<!proto.viam.service.motion.v1.ObstacleDetector>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.service.motion.v1.ObstacleDetector, 1));
};


/**
 * @param {!Array<!proto.viam.service.motion.v1.ObstacleDetector>} value
 * @return {!proto.viam.service.motion.v1.MotionConfiguration} returns this
*/
proto.viam.service.motion.v1.MotionConfiguration.prototype.setObstacleDetectorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.viam.service.motion.v1.ObstacleDetector=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.service.motion.v1.ObstacleDetector}
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.addObstacleDetectors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.viam.service.motion.v1.ObstacleDetector, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.motion.v1.MotionConfiguration} returns this
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.clearObstacleDetectorsList = function() {
  return this.setObstacleDetectorsList([]);
};


/**
 * optional double position_polling_frequency_hz = 2;
 * @return {number}
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.getPositionPollingFrequencyHz = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.motion.v1.MotionConfiguration} returns this
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.setPositionPollingFrequencyHz = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.service.motion.v1.MotionConfiguration} returns this
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.clearPositionPollingFrequencyHz = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.hasPositionPollingFrequencyHz = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double obstacle_polling_frequency_hz = 3;
 * @return {number}
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.getObstaclePollingFrequencyHz = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.motion.v1.MotionConfiguration} returns this
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.setObstaclePollingFrequencyHz = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.service.motion.v1.MotionConfiguration} returns this
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.clearObstaclePollingFrequencyHz = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.hasObstaclePollingFrequencyHz = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double plan_deviation_m = 4;
 * @return {number}
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.getPlanDeviationM = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.motion.v1.MotionConfiguration} returns this
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.setPlanDeviationM = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.service.motion.v1.MotionConfiguration} returns this
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.clearPlanDeviationM = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.hasPlanDeviationM = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double linear_m_per_sec = 5;
 * @return {number}
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.getLinearMPerSec = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.motion.v1.MotionConfiguration} returns this
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.setLinearMPerSec = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.service.motion.v1.MotionConfiguration} returns this
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.clearLinearMPerSec = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.hasLinearMPerSec = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double angular_degs_per_sec = 6;
 * @return {number}
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.getAngularDegsPerSec = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.motion.v1.MotionConfiguration} returns this
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.setAngularDegsPerSec = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.service.motion.v1.MotionConfiguration} returns this
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.clearAngularDegsPerSec = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MotionConfiguration.prototype.hasAngularDegsPerSec = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.MoveOnGlobeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.MoveOnGlobeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    destination: (f = msg.getDestination()) && common_v1_common_pb.GeoPoint.toObject(includeInstance, f),
    heading: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    componentName: (f = msg.getComponentName()) && common_v1_common_pb.ResourceName.toObject(includeInstance, f),
    movementSensorName: (f = msg.getMovementSensorName()) && common_v1_common_pb.ResourceName.toObject(includeInstance, f),
    obstaclesList: jspb.Message.toObjectList(msg.getObstaclesList(),
    common_v1_common_pb.GeoObstacle.toObject, includeInstance),
    motionConfiguration: (f = msg.getMotionConfiguration()) && proto.viam.service.motion.v1.MotionConfiguration.toObject(includeInstance, f),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeRequest}
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.MoveOnGlobeRequest;
  return proto.viam.service.motion.v1.MoveOnGlobeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.MoveOnGlobeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeRequest}
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new common_v1_common_pb.GeoPoint;
      reader.readMessage(value,common_v1_common_pb.GeoPoint.deserializeBinaryFromReader);
      msg.setDestination(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHeading(value);
      break;
    case 4:
      var value = new common_v1_common_pb.ResourceName;
      reader.readMessage(value,common_v1_common_pb.ResourceName.deserializeBinaryFromReader);
      msg.setComponentName(value);
      break;
    case 5:
      var value = new common_v1_common_pb.ResourceName;
      reader.readMessage(value,common_v1_common_pb.ResourceName.deserializeBinaryFromReader);
      msg.setMovementSensorName(value);
      break;
    case 6:
      var value = new common_v1_common_pb.GeoObstacle;
      reader.readMessage(value,common_v1_common_pb.GeoObstacle.deserializeBinaryFromReader);
      msg.addObstacles(value);
      break;
    case 7:
      var value = new proto.viam.service.motion.v1.MotionConfiguration;
      reader.readMessage(value,proto.viam.service.motion.v1.MotionConfiguration.deserializeBinaryFromReader);
      msg.setMotionConfiguration(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.MoveOnGlobeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.MoveOnGlobeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDestination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_v1_common_pb.GeoPoint.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getComponentName();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_v1_common_pb.ResourceName.serializeBinaryToWriter
    );
  }
  f = message.getMovementSensorName();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_v1_common_pb.ResourceName.serializeBinaryToWriter
    );
  }
  f = message.getObstaclesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      common_v1_common_pb.GeoObstacle.serializeBinaryToWriter
    );
  }
  f = message.getMotionConfiguration();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.viam.service.motion.v1.MotionConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional viam.common.v1.GeoPoint destination = 2;
 * @return {?proto.viam.common.v1.GeoPoint}
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.getDestination = function() {
  return /** @type{?proto.viam.common.v1.GeoPoint} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.GeoPoint, 2));
};


/**
 * @param {?proto.viam.common.v1.GeoPoint|undefined} value
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeRequest} returns this
*/
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.setDestination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.clearDestination = function() {
  return this.setDestination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double heading = 3;
 * @return {number}
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.getHeading = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.setHeading = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.clearHeading = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.hasHeading = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional viam.common.v1.ResourceName component_name = 4;
 * @return {?proto.viam.common.v1.ResourceName}
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.getComponentName = function() {
  return /** @type{?proto.viam.common.v1.ResourceName} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.ResourceName, 4));
};


/**
 * @param {?proto.viam.common.v1.ResourceName|undefined} value
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeRequest} returns this
*/
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.setComponentName = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.clearComponentName = function() {
  return this.setComponentName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.hasComponentName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional viam.common.v1.ResourceName movement_sensor_name = 5;
 * @return {?proto.viam.common.v1.ResourceName}
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.getMovementSensorName = function() {
  return /** @type{?proto.viam.common.v1.ResourceName} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.ResourceName, 5));
};


/**
 * @param {?proto.viam.common.v1.ResourceName|undefined} value
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeRequest} returns this
*/
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.setMovementSensorName = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.clearMovementSensorName = function() {
  return this.setMovementSensorName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.hasMovementSensorName = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated viam.common.v1.GeoObstacle obstacles = 6;
 * @return {!Array<!proto.viam.common.v1.GeoObstacle>}
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.getObstaclesList = function() {
  return /** @type{!Array<!proto.viam.common.v1.GeoObstacle>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_v1_common_pb.GeoObstacle, 6));
};


/**
 * @param {!Array<!proto.viam.common.v1.GeoObstacle>} value
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeRequest} returns this
*/
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.setObstaclesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.viam.common.v1.GeoObstacle=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.common.v1.GeoObstacle}
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.addObstacles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.viam.common.v1.GeoObstacle, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.clearObstaclesList = function() {
  return this.setObstaclesList([]);
};


/**
 * optional MotionConfiguration motion_configuration = 7;
 * @return {?proto.viam.service.motion.v1.MotionConfiguration}
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.getMotionConfiguration = function() {
  return /** @type{?proto.viam.service.motion.v1.MotionConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.motion.v1.MotionConfiguration, 7));
};


/**
 * @param {?proto.viam.service.motion.v1.MotionConfiguration|undefined} value
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeRequest} returns this
*/
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.setMotionConfiguration = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.clearMotionConfiguration = function() {
  return this.setMotionConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.hasMotionConfiguration = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeRequest} returns this
*/
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveOnGlobeRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.MoveOnGlobeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.MoveOnGlobeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.MoveOnGlobeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.MoveOnGlobeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeResponse}
 */
proto.viam.service.motion.v1.MoveOnGlobeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.MoveOnGlobeResponse;
  return proto.viam.service.motion.v1.MoveOnGlobeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.MoveOnGlobeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeResponse}
 */
proto.viam.service.motion.v1.MoveOnGlobeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.MoveOnGlobeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.MoveOnGlobeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.MoveOnGlobeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.MoveOnGlobeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveOnGlobeResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeResponse} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.MoveOnGlobeNewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    destination: (f = msg.getDestination()) && common_v1_common_pb.GeoPoint.toObject(includeInstance, f),
    heading: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    componentName: (f = msg.getComponentName()) && common_v1_common_pb.ResourceName.toObject(includeInstance, f),
    movementSensorName: (f = msg.getMovementSensorName()) && common_v1_common_pb.ResourceName.toObject(includeInstance, f),
    obstaclesList: jspb.Message.toObjectList(msg.getObstaclesList(),
    common_v1_common_pb.GeoObstacle.toObject, includeInstance),
    motionConfiguration: (f = msg.getMotionConfiguration()) && proto.viam.service.motion.v1.MotionConfiguration.toObject(includeInstance, f),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.MoveOnGlobeNewRequest;
  return proto.viam.service.motion.v1.MoveOnGlobeNewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new common_v1_common_pb.GeoPoint;
      reader.readMessage(value,common_v1_common_pb.GeoPoint.deserializeBinaryFromReader);
      msg.setDestination(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHeading(value);
      break;
    case 4:
      var value = new common_v1_common_pb.ResourceName;
      reader.readMessage(value,common_v1_common_pb.ResourceName.deserializeBinaryFromReader);
      msg.setComponentName(value);
      break;
    case 5:
      var value = new common_v1_common_pb.ResourceName;
      reader.readMessage(value,common_v1_common_pb.ResourceName.deserializeBinaryFromReader);
      msg.setMovementSensorName(value);
      break;
    case 6:
      var value = new common_v1_common_pb.GeoObstacle;
      reader.readMessage(value,common_v1_common_pb.GeoObstacle.deserializeBinaryFromReader);
      msg.addObstacles(value);
      break;
    case 7:
      var value = new proto.viam.service.motion.v1.MotionConfiguration;
      reader.readMessage(value,proto.viam.service.motion.v1.MotionConfiguration.deserializeBinaryFromReader);
      msg.setMotionConfiguration(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.MoveOnGlobeNewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDestination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_v1_common_pb.GeoPoint.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getComponentName();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_v1_common_pb.ResourceName.serializeBinaryToWriter
    );
  }
  f = message.getMovementSensorName();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_v1_common_pb.ResourceName.serializeBinaryToWriter
    );
  }
  f = message.getObstaclesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      common_v1_common_pb.GeoObstacle.serializeBinaryToWriter
    );
  }
  f = message.getMotionConfiguration();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.viam.service.motion.v1.MotionConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional viam.common.v1.GeoPoint destination = 2;
 * @return {?proto.viam.common.v1.GeoPoint}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.getDestination = function() {
  return /** @type{?proto.viam.common.v1.GeoPoint} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.GeoPoint, 2));
};


/**
 * @param {?proto.viam.common.v1.GeoPoint|undefined} value
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest} returns this
*/
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.setDestination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.clearDestination = function() {
  return this.setDestination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double heading = 3;
 * @return {number}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.getHeading = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.setHeading = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.clearHeading = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.hasHeading = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional viam.common.v1.ResourceName component_name = 4;
 * @return {?proto.viam.common.v1.ResourceName}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.getComponentName = function() {
  return /** @type{?proto.viam.common.v1.ResourceName} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.ResourceName, 4));
};


/**
 * @param {?proto.viam.common.v1.ResourceName|undefined} value
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest} returns this
*/
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.setComponentName = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.clearComponentName = function() {
  return this.setComponentName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.hasComponentName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional viam.common.v1.ResourceName movement_sensor_name = 5;
 * @return {?proto.viam.common.v1.ResourceName}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.getMovementSensorName = function() {
  return /** @type{?proto.viam.common.v1.ResourceName} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.ResourceName, 5));
};


/**
 * @param {?proto.viam.common.v1.ResourceName|undefined} value
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest} returns this
*/
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.setMovementSensorName = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.clearMovementSensorName = function() {
  return this.setMovementSensorName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.hasMovementSensorName = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated viam.common.v1.GeoObstacle obstacles = 6;
 * @return {!Array<!proto.viam.common.v1.GeoObstacle>}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.getObstaclesList = function() {
  return /** @type{!Array<!proto.viam.common.v1.GeoObstacle>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_v1_common_pb.GeoObstacle, 6));
};


/**
 * @param {!Array<!proto.viam.common.v1.GeoObstacle>} value
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest} returns this
*/
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.setObstaclesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.viam.common.v1.GeoObstacle=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.common.v1.GeoObstacle}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.addObstacles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.viam.common.v1.GeoObstacle, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.clearObstaclesList = function() {
  return this.setObstaclesList([]);
};


/**
 * optional MotionConfiguration motion_configuration = 7;
 * @return {?proto.viam.service.motion.v1.MotionConfiguration}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.getMotionConfiguration = function() {
  return /** @type{?proto.viam.service.motion.v1.MotionConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.motion.v1.MotionConfiguration, 7));
};


/**
 * @param {?proto.viam.service.motion.v1.MotionConfiguration|undefined} value
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest} returns this
*/
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.setMotionConfiguration = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.clearMotionConfiguration = function() {
  return this.setMotionConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.hasMotionConfiguration = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest} returns this
*/
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewRequest} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.MoveOnGlobeNewResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.MoveOnGlobeNewResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.MoveOnGlobeNewResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    executionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewResponse}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.MoveOnGlobeNewResponse;
  return proto.viam.service.motion.v1.MoveOnGlobeNewResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.MoveOnGlobeNewResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewResponse}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExecutionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.MoveOnGlobeNewResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.MoveOnGlobeNewResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.MoveOnGlobeNewResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExecutionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string execution_id = 1;
 * @return {string}
 */
proto.viam.service.motion.v1.MoveOnGlobeNewResponse.prototype.getExecutionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.motion.v1.MoveOnGlobeNewResponse} returns this
 */
proto.viam.service.motion.v1.MoveOnGlobeNewResponse.prototype.setExecutionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.motion.v1.GetPoseRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.GetPoseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.GetPoseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.GetPoseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.GetPoseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    componentName: (f = msg.getComponentName()) && common_v1_common_pb.ResourceName.toObject(includeInstance, f),
    destinationFrame: jspb.Message.getFieldWithDefault(msg, 3, ""),
    supplementalTransformsList: jspb.Message.toObjectList(msg.getSupplementalTransformsList(),
    common_v1_common_pb.Transform.toObject, includeInstance),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.GetPoseRequest}
 */
proto.viam.service.motion.v1.GetPoseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.GetPoseRequest;
  return proto.viam.service.motion.v1.GetPoseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.GetPoseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.GetPoseRequest}
 */
proto.viam.service.motion.v1.GetPoseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new common_v1_common_pb.ResourceName;
      reader.readMessage(value,common_v1_common_pb.ResourceName.deserializeBinaryFromReader);
      msg.setComponentName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationFrame(value);
      break;
    case 4:
      var value = new common_v1_common_pb.Transform;
      reader.readMessage(value,common_v1_common_pb.Transform.deserializeBinaryFromReader);
      msg.addSupplementalTransforms(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.GetPoseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.GetPoseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.GetPoseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.GetPoseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getComponentName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_v1_common_pb.ResourceName.serializeBinaryToWriter
    );
  }
  f = message.getDestinationFrame();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSupplementalTransformsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      common_v1_common_pb.Transform.serializeBinaryToWriter
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.motion.v1.GetPoseRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.motion.v1.GetPoseRequest} returns this
 */
proto.viam.service.motion.v1.GetPoseRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional viam.common.v1.ResourceName component_name = 2;
 * @return {?proto.viam.common.v1.ResourceName}
 */
proto.viam.service.motion.v1.GetPoseRequest.prototype.getComponentName = function() {
  return /** @type{?proto.viam.common.v1.ResourceName} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.ResourceName, 2));
};


/**
 * @param {?proto.viam.common.v1.ResourceName|undefined} value
 * @return {!proto.viam.service.motion.v1.GetPoseRequest} returns this
*/
proto.viam.service.motion.v1.GetPoseRequest.prototype.setComponentName = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.GetPoseRequest} returns this
 */
proto.viam.service.motion.v1.GetPoseRequest.prototype.clearComponentName = function() {
  return this.setComponentName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.GetPoseRequest.prototype.hasComponentName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string destination_frame = 3;
 * @return {string}
 */
proto.viam.service.motion.v1.GetPoseRequest.prototype.getDestinationFrame = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.motion.v1.GetPoseRequest} returns this
 */
proto.viam.service.motion.v1.GetPoseRequest.prototype.setDestinationFrame = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated viam.common.v1.Transform supplemental_transforms = 4;
 * @return {!Array<!proto.viam.common.v1.Transform>}
 */
proto.viam.service.motion.v1.GetPoseRequest.prototype.getSupplementalTransformsList = function() {
  return /** @type{!Array<!proto.viam.common.v1.Transform>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_v1_common_pb.Transform, 4));
};


/**
 * @param {!Array<!proto.viam.common.v1.Transform>} value
 * @return {!proto.viam.service.motion.v1.GetPoseRequest} returns this
*/
proto.viam.service.motion.v1.GetPoseRequest.prototype.setSupplementalTransformsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.viam.common.v1.Transform=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.common.v1.Transform}
 */
proto.viam.service.motion.v1.GetPoseRequest.prototype.addSupplementalTransforms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.viam.common.v1.Transform, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.motion.v1.GetPoseRequest} returns this
 */
proto.viam.service.motion.v1.GetPoseRequest.prototype.clearSupplementalTransformsList = function() {
  return this.setSupplementalTransformsList([]);
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.motion.v1.GetPoseRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.motion.v1.GetPoseRequest} returns this
*/
proto.viam.service.motion.v1.GetPoseRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.GetPoseRequest} returns this
 */
proto.viam.service.motion.v1.GetPoseRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.GetPoseRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.GetPoseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.GetPoseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.GetPoseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.GetPoseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pose: (f = msg.getPose()) && common_v1_common_pb.PoseInFrame.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.GetPoseResponse}
 */
proto.viam.service.motion.v1.GetPoseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.GetPoseResponse;
  return proto.viam.service.motion.v1.GetPoseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.GetPoseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.GetPoseResponse}
 */
proto.viam.service.motion.v1.GetPoseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_v1_common_pb.PoseInFrame;
      reader.readMessage(value,common_v1_common_pb.PoseInFrame.deserializeBinaryFromReader);
      msg.setPose(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.GetPoseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.GetPoseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.GetPoseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.GetPoseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPose();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_v1_common_pb.PoseInFrame.serializeBinaryToWriter
    );
  }
};


/**
 * optional viam.common.v1.PoseInFrame pose = 1;
 * @return {?proto.viam.common.v1.PoseInFrame}
 */
proto.viam.service.motion.v1.GetPoseResponse.prototype.getPose = function() {
  return /** @type{?proto.viam.common.v1.PoseInFrame} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.PoseInFrame, 1));
};


/**
 * @param {?proto.viam.common.v1.PoseInFrame|undefined} value
 * @return {!proto.viam.service.motion.v1.GetPoseResponse} returns this
*/
proto.viam.service.motion.v1.GetPoseResponse.prototype.setPose = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.GetPoseResponse} returns this
 */
proto.viam.service.motion.v1.GetPoseResponse.prototype.clearPose = function() {
  return this.setPose(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.GetPoseResponse.prototype.hasPose = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.StopPlanRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.StopPlanRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.StopPlanRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.StopPlanRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    componentName: (f = msg.getComponentName()) && common_v1_common_pb.ResourceName.toObject(includeInstance, f),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.StopPlanRequest}
 */
proto.viam.service.motion.v1.StopPlanRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.StopPlanRequest;
  return proto.viam.service.motion.v1.StopPlanRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.StopPlanRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.StopPlanRequest}
 */
proto.viam.service.motion.v1.StopPlanRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new common_v1_common_pb.ResourceName;
      reader.readMessage(value,common_v1_common_pb.ResourceName.deserializeBinaryFromReader);
      msg.setComponentName(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.StopPlanRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.StopPlanRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.StopPlanRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.StopPlanRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getComponentName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_v1_common_pb.ResourceName.serializeBinaryToWriter
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.motion.v1.StopPlanRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.motion.v1.StopPlanRequest} returns this
 */
proto.viam.service.motion.v1.StopPlanRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional viam.common.v1.ResourceName component_name = 2;
 * @return {?proto.viam.common.v1.ResourceName}
 */
proto.viam.service.motion.v1.StopPlanRequest.prototype.getComponentName = function() {
  return /** @type{?proto.viam.common.v1.ResourceName} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.ResourceName, 2));
};


/**
 * @param {?proto.viam.common.v1.ResourceName|undefined} value
 * @return {!proto.viam.service.motion.v1.StopPlanRequest} returns this
*/
proto.viam.service.motion.v1.StopPlanRequest.prototype.setComponentName = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.StopPlanRequest} returns this
 */
proto.viam.service.motion.v1.StopPlanRequest.prototype.clearComponentName = function() {
  return this.setComponentName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.StopPlanRequest.prototype.hasComponentName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.motion.v1.StopPlanRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.motion.v1.StopPlanRequest} returns this
*/
proto.viam.service.motion.v1.StopPlanRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.StopPlanRequest} returns this
 */
proto.viam.service.motion.v1.StopPlanRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.StopPlanRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.StopPlanResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.StopPlanResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.StopPlanResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.StopPlanResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.StopPlanResponse}
 */
proto.viam.service.motion.v1.StopPlanResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.StopPlanResponse;
  return proto.viam.service.motion.v1.StopPlanResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.StopPlanResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.StopPlanResponse}
 */
proto.viam.service.motion.v1.StopPlanResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.StopPlanResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.StopPlanResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.StopPlanResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.StopPlanResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.ListPlanStatusesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.ListPlanStatusesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.ListPlanStatusesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.ListPlanStatusesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    onlyActivePlans: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.ListPlanStatusesRequest}
 */
proto.viam.service.motion.v1.ListPlanStatusesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.ListPlanStatusesRequest;
  return proto.viam.service.motion.v1.ListPlanStatusesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.ListPlanStatusesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.ListPlanStatusesRequest}
 */
proto.viam.service.motion.v1.ListPlanStatusesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnlyActivePlans(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.ListPlanStatusesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.ListPlanStatusesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.ListPlanStatusesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.ListPlanStatusesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOnlyActivePlans();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.motion.v1.ListPlanStatusesRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.motion.v1.ListPlanStatusesRequest} returns this
 */
proto.viam.service.motion.v1.ListPlanStatusesRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool only_active_plans = 2;
 * @return {boolean}
 */
proto.viam.service.motion.v1.ListPlanStatusesRequest.prototype.getOnlyActivePlans = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.motion.v1.ListPlanStatusesRequest} returns this
 */
proto.viam.service.motion.v1.ListPlanStatusesRequest.prototype.setOnlyActivePlans = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.motion.v1.ListPlanStatusesRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.motion.v1.ListPlanStatusesRequest} returns this
*/
proto.viam.service.motion.v1.ListPlanStatusesRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.ListPlanStatusesRequest} returns this
 */
proto.viam.service.motion.v1.ListPlanStatusesRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.ListPlanStatusesRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.motion.v1.ListPlanStatusesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.ListPlanStatusesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.ListPlanStatusesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.ListPlanStatusesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.ListPlanStatusesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    planStatusesWithIdsList: jspb.Message.toObjectList(msg.getPlanStatusesWithIdsList(),
    proto.viam.service.motion.v1.PlanStatusWithID.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.ListPlanStatusesResponse}
 */
proto.viam.service.motion.v1.ListPlanStatusesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.ListPlanStatusesResponse;
  return proto.viam.service.motion.v1.ListPlanStatusesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.ListPlanStatusesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.ListPlanStatusesResponse}
 */
proto.viam.service.motion.v1.ListPlanStatusesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.service.motion.v1.PlanStatusWithID;
      reader.readMessage(value,proto.viam.service.motion.v1.PlanStatusWithID.deserializeBinaryFromReader);
      msg.addPlanStatusesWithIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.ListPlanStatusesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.ListPlanStatusesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.ListPlanStatusesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.ListPlanStatusesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlanStatusesWithIdsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.viam.service.motion.v1.PlanStatusWithID.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PlanStatusWithID plan_statuses_with_ids = 1;
 * @return {!Array<!proto.viam.service.motion.v1.PlanStatusWithID>}
 */
proto.viam.service.motion.v1.ListPlanStatusesResponse.prototype.getPlanStatusesWithIdsList = function() {
  return /** @type{!Array<!proto.viam.service.motion.v1.PlanStatusWithID>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.service.motion.v1.PlanStatusWithID, 1));
};


/**
 * @param {!Array<!proto.viam.service.motion.v1.PlanStatusWithID>} value
 * @return {!proto.viam.service.motion.v1.ListPlanStatusesResponse} returns this
*/
proto.viam.service.motion.v1.ListPlanStatusesResponse.prototype.setPlanStatusesWithIdsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.viam.service.motion.v1.PlanStatusWithID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.service.motion.v1.PlanStatusWithID}
 */
proto.viam.service.motion.v1.ListPlanStatusesResponse.prototype.addPlanStatusesWithIds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.viam.service.motion.v1.PlanStatusWithID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.motion.v1.ListPlanStatusesResponse} returns this
 */
proto.viam.service.motion.v1.ListPlanStatusesResponse.prototype.clearPlanStatusesWithIdsList = function() {
  return this.setPlanStatusesWithIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.GetPlanRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.GetPlanRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.GetPlanRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.GetPlanRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    componentName: (f = msg.getComponentName()) && common_v1_common_pb.ResourceName.toObject(includeInstance, f),
    lastPlanOnly: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    executionId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.GetPlanRequest}
 */
proto.viam.service.motion.v1.GetPlanRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.GetPlanRequest;
  return proto.viam.service.motion.v1.GetPlanRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.GetPlanRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.GetPlanRequest}
 */
proto.viam.service.motion.v1.GetPlanRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new common_v1_common_pb.ResourceName;
      reader.readMessage(value,common_v1_common_pb.ResourceName.deserializeBinaryFromReader);
      msg.setComponentName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLastPlanOnly(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExecutionId(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.GetPlanRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.GetPlanRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.GetPlanRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.GetPlanRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getComponentName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_v1_common_pb.ResourceName.serializeBinaryToWriter
    );
  }
  f = message.getLastPlanOnly();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.motion.v1.GetPlanRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.motion.v1.GetPlanRequest} returns this
 */
proto.viam.service.motion.v1.GetPlanRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional viam.common.v1.ResourceName component_name = 2;
 * @return {?proto.viam.common.v1.ResourceName}
 */
proto.viam.service.motion.v1.GetPlanRequest.prototype.getComponentName = function() {
  return /** @type{?proto.viam.common.v1.ResourceName} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.ResourceName, 2));
};


/**
 * @param {?proto.viam.common.v1.ResourceName|undefined} value
 * @return {!proto.viam.service.motion.v1.GetPlanRequest} returns this
*/
proto.viam.service.motion.v1.GetPlanRequest.prototype.setComponentName = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.GetPlanRequest} returns this
 */
proto.viam.service.motion.v1.GetPlanRequest.prototype.clearComponentName = function() {
  return this.setComponentName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.GetPlanRequest.prototype.hasComponentName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool last_plan_only = 3;
 * @return {boolean}
 */
proto.viam.service.motion.v1.GetPlanRequest.prototype.getLastPlanOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.motion.v1.GetPlanRequest} returns this
 */
proto.viam.service.motion.v1.GetPlanRequest.prototype.setLastPlanOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string execution_id = 4;
 * @return {string}
 */
proto.viam.service.motion.v1.GetPlanRequest.prototype.getExecutionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.motion.v1.GetPlanRequest} returns this
 */
proto.viam.service.motion.v1.GetPlanRequest.prototype.setExecutionId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.service.motion.v1.GetPlanRequest} returns this
 */
proto.viam.service.motion.v1.GetPlanRequest.prototype.clearExecutionId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.GetPlanRequest.prototype.hasExecutionId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.motion.v1.GetPlanRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.motion.v1.GetPlanRequest} returns this
*/
proto.viam.service.motion.v1.GetPlanRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.GetPlanRequest} returns this
 */
proto.viam.service.motion.v1.GetPlanRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.GetPlanRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.motion.v1.GetPlanResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.GetPlanResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.GetPlanResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.GetPlanResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.GetPlanResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentPlanWithStatus: (f = msg.getCurrentPlanWithStatus()) && proto.viam.service.motion.v1.PlanWithStatus.toObject(includeInstance, f),
    replanHistoryList: jspb.Message.toObjectList(msg.getReplanHistoryList(),
    proto.viam.service.motion.v1.PlanWithStatus.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.GetPlanResponse}
 */
proto.viam.service.motion.v1.GetPlanResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.GetPlanResponse;
  return proto.viam.service.motion.v1.GetPlanResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.GetPlanResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.GetPlanResponse}
 */
proto.viam.service.motion.v1.GetPlanResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.service.motion.v1.PlanWithStatus;
      reader.readMessage(value,proto.viam.service.motion.v1.PlanWithStatus.deserializeBinaryFromReader);
      msg.setCurrentPlanWithStatus(value);
      break;
    case 2:
      var value = new proto.viam.service.motion.v1.PlanWithStatus;
      reader.readMessage(value,proto.viam.service.motion.v1.PlanWithStatus.deserializeBinaryFromReader);
      msg.addReplanHistory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.GetPlanResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.GetPlanResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.GetPlanResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.GetPlanResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentPlanWithStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.viam.service.motion.v1.PlanWithStatus.serializeBinaryToWriter
    );
  }
  f = message.getReplanHistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.viam.service.motion.v1.PlanWithStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional PlanWithStatus current_plan_with_status = 1;
 * @return {?proto.viam.service.motion.v1.PlanWithStatus}
 */
proto.viam.service.motion.v1.GetPlanResponse.prototype.getCurrentPlanWithStatus = function() {
  return /** @type{?proto.viam.service.motion.v1.PlanWithStatus} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.motion.v1.PlanWithStatus, 1));
};


/**
 * @param {?proto.viam.service.motion.v1.PlanWithStatus|undefined} value
 * @return {!proto.viam.service.motion.v1.GetPlanResponse} returns this
*/
proto.viam.service.motion.v1.GetPlanResponse.prototype.setCurrentPlanWithStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.GetPlanResponse} returns this
 */
proto.viam.service.motion.v1.GetPlanResponse.prototype.clearCurrentPlanWithStatus = function() {
  return this.setCurrentPlanWithStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.GetPlanResponse.prototype.hasCurrentPlanWithStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated PlanWithStatus replan_history = 2;
 * @return {!Array<!proto.viam.service.motion.v1.PlanWithStatus>}
 */
proto.viam.service.motion.v1.GetPlanResponse.prototype.getReplanHistoryList = function() {
  return /** @type{!Array<!proto.viam.service.motion.v1.PlanWithStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.service.motion.v1.PlanWithStatus, 2));
};


/**
 * @param {!Array<!proto.viam.service.motion.v1.PlanWithStatus>} value
 * @return {!proto.viam.service.motion.v1.GetPlanResponse} returns this
*/
proto.viam.service.motion.v1.GetPlanResponse.prototype.setReplanHistoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.viam.service.motion.v1.PlanWithStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.service.motion.v1.PlanWithStatus}
 */
proto.viam.service.motion.v1.GetPlanResponse.prototype.addReplanHistory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.viam.service.motion.v1.PlanWithStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.motion.v1.GetPlanResponse} returns this
 */
proto.viam.service.motion.v1.GetPlanResponse.prototype.clearReplanHistoryList = function() {
  return this.setReplanHistoryList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.motion.v1.Constraints.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.Constraints.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.Constraints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.Constraints} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.Constraints.toObject = function(includeInstance, msg) {
  var f, obj = {
    linearConstraintList: jspb.Message.toObjectList(msg.getLinearConstraintList(),
    proto.viam.service.motion.v1.LinearConstraint.toObject, includeInstance),
    orientationConstraintList: jspb.Message.toObjectList(msg.getOrientationConstraintList(),
    proto.viam.service.motion.v1.OrientationConstraint.toObject, includeInstance),
    collisionSpecificationList: jspb.Message.toObjectList(msg.getCollisionSpecificationList(),
    proto.viam.service.motion.v1.CollisionSpecification.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.Constraints}
 */
proto.viam.service.motion.v1.Constraints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.Constraints;
  return proto.viam.service.motion.v1.Constraints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.Constraints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.Constraints}
 */
proto.viam.service.motion.v1.Constraints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.service.motion.v1.LinearConstraint;
      reader.readMessage(value,proto.viam.service.motion.v1.LinearConstraint.deserializeBinaryFromReader);
      msg.addLinearConstraint(value);
      break;
    case 2:
      var value = new proto.viam.service.motion.v1.OrientationConstraint;
      reader.readMessage(value,proto.viam.service.motion.v1.OrientationConstraint.deserializeBinaryFromReader);
      msg.addOrientationConstraint(value);
      break;
    case 3:
      var value = new proto.viam.service.motion.v1.CollisionSpecification;
      reader.readMessage(value,proto.viam.service.motion.v1.CollisionSpecification.deserializeBinaryFromReader);
      msg.addCollisionSpecification(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.Constraints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.Constraints.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.Constraints} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.Constraints.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLinearConstraintList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.viam.service.motion.v1.LinearConstraint.serializeBinaryToWriter
    );
  }
  f = message.getOrientationConstraintList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.viam.service.motion.v1.OrientationConstraint.serializeBinaryToWriter
    );
  }
  f = message.getCollisionSpecificationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.viam.service.motion.v1.CollisionSpecification.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LinearConstraint linear_constraint = 1;
 * @return {!Array<!proto.viam.service.motion.v1.LinearConstraint>}
 */
proto.viam.service.motion.v1.Constraints.prototype.getLinearConstraintList = function() {
  return /** @type{!Array<!proto.viam.service.motion.v1.LinearConstraint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.service.motion.v1.LinearConstraint, 1));
};


/**
 * @param {!Array<!proto.viam.service.motion.v1.LinearConstraint>} value
 * @return {!proto.viam.service.motion.v1.Constraints} returns this
*/
proto.viam.service.motion.v1.Constraints.prototype.setLinearConstraintList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.viam.service.motion.v1.LinearConstraint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.service.motion.v1.LinearConstraint}
 */
proto.viam.service.motion.v1.Constraints.prototype.addLinearConstraint = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.viam.service.motion.v1.LinearConstraint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.motion.v1.Constraints} returns this
 */
proto.viam.service.motion.v1.Constraints.prototype.clearLinearConstraintList = function() {
  return this.setLinearConstraintList([]);
};


/**
 * repeated OrientationConstraint orientation_constraint = 2;
 * @return {!Array<!proto.viam.service.motion.v1.OrientationConstraint>}
 */
proto.viam.service.motion.v1.Constraints.prototype.getOrientationConstraintList = function() {
  return /** @type{!Array<!proto.viam.service.motion.v1.OrientationConstraint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.service.motion.v1.OrientationConstraint, 2));
};


/**
 * @param {!Array<!proto.viam.service.motion.v1.OrientationConstraint>} value
 * @return {!proto.viam.service.motion.v1.Constraints} returns this
*/
proto.viam.service.motion.v1.Constraints.prototype.setOrientationConstraintList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.viam.service.motion.v1.OrientationConstraint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.service.motion.v1.OrientationConstraint}
 */
proto.viam.service.motion.v1.Constraints.prototype.addOrientationConstraint = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.viam.service.motion.v1.OrientationConstraint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.motion.v1.Constraints} returns this
 */
proto.viam.service.motion.v1.Constraints.prototype.clearOrientationConstraintList = function() {
  return this.setOrientationConstraintList([]);
};


/**
 * repeated CollisionSpecification collision_specification = 3;
 * @return {!Array<!proto.viam.service.motion.v1.CollisionSpecification>}
 */
proto.viam.service.motion.v1.Constraints.prototype.getCollisionSpecificationList = function() {
  return /** @type{!Array<!proto.viam.service.motion.v1.CollisionSpecification>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.service.motion.v1.CollisionSpecification, 3));
};


/**
 * @param {!Array<!proto.viam.service.motion.v1.CollisionSpecification>} value
 * @return {!proto.viam.service.motion.v1.Constraints} returns this
*/
proto.viam.service.motion.v1.Constraints.prototype.setCollisionSpecificationList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.viam.service.motion.v1.CollisionSpecification=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.service.motion.v1.CollisionSpecification}
 */
proto.viam.service.motion.v1.Constraints.prototype.addCollisionSpecification = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.viam.service.motion.v1.CollisionSpecification, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.motion.v1.Constraints} returns this
 */
proto.viam.service.motion.v1.Constraints.prototype.clearCollisionSpecificationList = function() {
  return this.setCollisionSpecificationList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.LinearConstraint.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.LinearConstraint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.LinearConstraint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.LinearConstraint.toObject = function(includeInstance, msg) {
  var f, obj = {
    lineToleranceMm: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    orientationToleranceDegs: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.LinearConstraint}
 */
proto.viam.service.motion.v1.LinearConstraint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.LinearConstraint;
  return proto.viam.service.motion.v1.LinearConstraint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.LinearConstraint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.LinearConstraint}
 */
proto.viam.service.motion.v1.LinearConstraint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLineToleranceMm(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOrientationToleranceDegs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.LinearConstraint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.LinearConstraint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.LinearConstraint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.LinearConstraint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional float line_tolerance_mm = 1;
 * @return {number}
 */
proto.viam.service.motion.v1.LinearConstraint.prototype.getLineToleranceMm = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.motion.v1.LinearConstraint} returns this
 */
proto.viam.service.motion.v1.LinearConstraint.prototype.setLineToleranceMm = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.service.motion.v1.LinearConstraint} returns this
 */
proto.viam.service.motion.v1.LinearConstraint.prototype.clearLineToleranceMm = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.LinearConstraint.prototype.hasLineToleranceMm = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float orientation_tolerance_degs = 2;
 * @return {number}
 */
proto.viam.service.motion.v1.LinearConstraint.prototype.getOrientationToleranceDegs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.motion.v1.LinearConstraint} returns this
 */
proto.viam.service.motion.v1.LinearConstraint.prototype.setOrientationToleranceDegs = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.service.motion.v1.LinearConstraint} returns this
 */
proto.viam.service.motion.v1.LinearConstraint.prototype.clearOrientationToleranceDegs = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.LinearConstraint.prototype.hasOrientationToleranceDegs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.OrientationConstraint.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.OrientationConstraint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.OrientationConstraint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.OrientationConstraint.toObject = function(includeInstance, msg) {
  var f, obj = {
    orientationToleranceDegs: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.OrientationConstraint}
 */
proto.viam.service.motion.v1.OrientationConstraint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.OrientationConstraint;
  return proto.viam.service.motion.v1.OrientationConstraint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.OrientationConstraint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.OrientationConstraint}
 */
proto.viam.service.motion.v1.OrientationConstraint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOrientationToleranceDegs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.OrientationConstraint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.OrientationConstraint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.OrientationConstraint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.OrientationConstraint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
};


/**
 * optional float orientation_tolerance_degs = 1;
 * @return {number}
 */
proto.viam.service.motion.v1.OrientationConstraint.prototype.getOrientationToleranceDegs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.motion.v1.OrientationConstraint} returns this
 */
proto.viam.service.motion.v1.OrientationConstraint.prototype.setOrientationToleranceDegs = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.service.motion.v1.OrientationConstraint} returns this
 */
proto.viam.service.motion.v1.OrientationConstraint.prototype.clearOrientationToleranceDegs = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.OrientationConstraint.prototype.hasOrientationToleranceDegs = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.motion.v1.CollisionSpecification.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.CollisionSpecification.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.CollisionSpecification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.CollisionSpecification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.CollisionSpecification.toObject = function(includeInstance, msg) {
  var f, obj = {
    allowsList: jspb.Message.toObjectList(msg.getAllowsList(),
    proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.CollisionSpecification}
 */
proto.viam.service.motion.v1.CollisionSpecification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.CollisionSpecification;
  return proto.viam.service.motion.v1.CollisionSpecification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.CollisionSpecification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.CollisionSpecification}
 */
proto.viam.service.motion.v1.CollisionSpecification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions;
      reader.readMessage(value,proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions.deserializeBinaryFromReader);
      msg.addAllows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.CollisionSpecification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.CollisionSpecification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.CollisionSpecification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.CollisionSpecification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions.toObject = function(includeInstance, msg) {
  var f, obj = {
    frame1: jspb.Message.getFieldWithDefault(msg, 1, ""),
    frame2: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions}
 */
proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions;
  return proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions}
 */
proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrame1(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrame2(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrame1();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFrame2();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string frame1 = 1;
 * @return {string}
 */
proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions.prototype.getFrame1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions} returns this
 */
proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions.prototype.setFrame1 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string frame2 = 2;
 * @return {string}
 */
proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions.prototype.getFrame2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions} returns this
 */
proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions.prototype.setFrame2 = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated AllowedFrameCollisions allows = 1;
 * @return {!Array<!proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions>}
 */
proto.viam.service.motion.v1.CollisionSpecification.prototype.getAllowsList = function() {
  return /** @type{!Array<!proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions, 1));
};


/**
 * @param {!Array<!proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions>} value
 * @return {!proto.viam.service.motion.v1.CollisionSpecification} returns this
*/
proto.viam.service.motion.v1.CollisionSpecification.prototype.setAllowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions}
 */
proto.viam.service.motion.v1.CollisionSpecification.prototype.addAllows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.motion.v1.CollisionSpecification} returns this
 */
proto.viam.service.motion.v1.CollisionSpecification.prototype.clearAllowsList = function() {
  return this.setAllowsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.motion.v1.PlanWithStatus.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.PlanWithStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.PlanWithStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.PlanWithStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.PlanWithStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    plan: (f = msg.getPlan()) && proto.viam.service.motion.v1.Plan.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.viam.service.motion.v1.PlanStatus.toObject(includeInstance, f),
    statusHistoryList: jspb.Message.toObjectList(msg.getStatusHistoryList(),
    proto.viam.service.motion.v1.PlanStatus.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.PlanWithStatus}
 */
proto.viam.service.motion.v1.PlanWithStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.PlanWithStatus;
  return proto.viam.service.motion.v1.PlanWithStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.PlanWithStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.PlanWithStatus}
 */
proto.viam.service.motion.v1.PlanWithStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.service.motion.v1.Plan;
      reader.readMessage(value,proto.viam.service.motion.v1.Plan.deserializeBinaryFromReader);
      msg.setPlan(value);
      break;
    case 2:
      var value = new proto.viam.service.motion.v1.PlanStatus;
      reader.readMessage(value,proto.viam.service.motion.v1.PlanStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 3:
      var value = new proto.viam.service.motion.v1.PlanStatus;
      reader.readMessage(value,proto.viam.service.motion.v1.PlanStatus.deserializeBinaryFromReader);
      msg.addStatusHistory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.PlanWithStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.PlanWithStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.PlanWithStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.PlanWithStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlan();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.viam.service.motion.v1.Plan.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.viam.service.motion.v1.PlanStatus.serializeBinaryToWriter
    );
  }
  f = message.getStatusHistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.viam.service.motion.v1.PlanStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional Plan plan = 1;
 * @return {?proto.viam.service.motion.v1.Plan}
 */
proto.viam.service.motion.v1.PlanWithStatus.prototype.getPlan = function() {
  return /** @type{?proto.viam.service.motion.v1.Plan} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.motion.v1.Plan, 1));
};


/**
 * @param {?proto.viam.service.motion.v1.Plan|undefined} value
 * @return {!proto.viam.service.motion.v1.PlanWithStatus} returns this
*/
proto.viam.service.motion.v1.PlanWithStatus.prototype.setPlan = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.PlanWithStatus} returns this
 */
proto.viam.service.motion.v1.PlanWithStatus.prototype.clearPlan = function() {
  return this.setPlan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.PlanWithStatus.prototype.hasPlan = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PlanStatus status = 2;
 * @return {?proto.viam.service.motion.v1.PlanStatus}
 */
proto.viam.service.motion.v1.PlanWithStatus.prototype.getStatus = function() {
  return /** @type{?proto.viam.service.motion.v1.PlanStatus} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.motion.v1.PlanStatus, 2));
};


/**
 * @param {?proto.viam.service.motion.v1.PlanStatus|undefined} value
 * @return {!proto.viam.service.motion.v1.PlanWithStatus} returns this
*/
proto.viam.service.motion.v1.PlanWithStatus.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.PlanWithStatus} returns this
 */
proto.viam.service.motion.v1.PlanWithStatus.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.PlanWithStatus.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated PlanStatus status_history = 3;
 * @return {!Array<!proto.viam.service.motion.v1.PlanStatus>}
 */
proto.viam.service.motion.v1.PlanWithStatus.prototype.getStatusHistoryList = function() {
  return /** @type{!Array<!proto.viam.service.motion.v1.PlanStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.service.motion.v1.PlanStatus, 3));
};


/**
 * @param {!Array<!proto.viam.service.motion.v1.PlanStatus>} value
 * @return {!proto.viam.service.motion.v1.PlanWithStatus} returns this
*/
proto.viam.service.motion.v1.PlanWithStatus.prototype.setStatusHistoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.viam.service.motion.v1.PlanStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.service.motion.v1.PlanStatus}
 */
proto.viam.service.motion.v1.PlanWithStatus.prototype.addStatusHistory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.viam.service.motion.v1.PlanStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.motion.v1.PlanWithStatus} returns this
 */
proto.viam.service.motion.v1.PlanWithStatus.prototype.clearStatusHistoryList = function() {
  return this.setStatusHistoryList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.PlanStatusWithID.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.PlanStatusWithID.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.PlanStatusWithID} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.PlanStatusWithID.toObject = function(includeInstance, msg) {
  var f, obj = {
    planId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    componentName: (f = msg.getComponentName()) && common_v1_common_pb.ResourceName.toObject(includeInstance, f),
    executionId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: (f = msg.getStatus()) && proto.viam.service.motion.v1.PlanStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.PlanStatusWithID}
 */
proto.viam.service.motion.v1.PlanStatusWithID.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.PlanStatusWithID;
  return proto.viam.service.motion.v1.PlanStatusWithID.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.PlanStatusWithID} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.PlanStatusWithID}
 */
proto.viam.service.motion.v1.PlanStatusWithID.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanId(value);
      break;
    case 2:
      var value = new common_v1_common_pb.ResourceName;
      reader.readMessage(value,common_v1_common_pb.ResourceName.deserializeBinaryFromReader);
      msg.setComponentName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExecutionId(value);
      break;
    case 4:
      var value = new proto.viam.service.motion.v1.PlanStatus;
      reader.readMessage(value,proto.viam.service.motion.v1.PlanStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.PlanStatusWithID.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.PlanStatusWithID.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.PlanStatusWithID} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.PlanStatusWithID.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlanId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getComponentName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_v1_common_pb.ResourceName.serializeBinaryToWriter
    );
  }
  f = message.getExecutionId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.viam.service.motion.v1.PlanStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional string plan_id = 1;
 * @return {string}
 */
proto.viam.service.motion.v1.PlanStatusWithID.prototype.getPlanId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.motion.v1.PlanStatusWithID} returns this
 */
proto.viam.service.motion.v1.PlanStatusWithID.prototype.setPlanId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional viam.common.v1.ResourceName component_name = 2;
 * @return {?proto.viam.common.v1.ResourceName}
 */
proto.viam.service.motion.v1.PlanStatusWithID.prototype.getComponentName = function() {
  return /** @type{?proto.viam.common.v1.ResourceName} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.ResourceName, 2));
};


/**
 * @param {?proto.viam.common.v1.ResourceName|undefined} value
 * @return {!proto.viam.service.motion.v1.PlanStatusWithID} returns this
*/
proto.viam.service.motion.v1.PlanStatusWithID.prototype.setComponentName = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.PlanStatusWithID} returns this
 */
proto.viam.service.motion.v1.PlanStatusWithID.prototype.clearComponentName = function() {
  return this.setComponentName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.PlanStatusWithID.prototype.hasComponentName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string execution_id = 3;
 * @return {string}
 */
proto.viam.service.motion.v1.PlanStatusWithID.prototype.getExecutionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.motion.v1.PlanStatusWithID} returns this
 */
proto.viam.service.motion.v1.PlanStatusWithID.prototype.setExecutionId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional PlanStatus status = 4;
 * @return {?proto.viam.service.motion.v1.PlanStatus}
 */
proto.viam.service.motion.v1.PlanStatusWithID.prototype.getStatus = function() {
  return /** @type{?proto.viam.service.motion.v1.PlanStatus} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.motion.v1.PlanStatus, 4));
};


/**
 * @param {?proto.viam.service.motion.v1.PlanStatus|undefined} value
 * @return {!proto.viam.service.motion.v1.PlanStatusWithID} returns this
*/
proto.viam.service.motion.v1.PlanStatusWithID.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.PlanStatusWithID} returns this
 */
proto.viam.service.motion.v1.PlanStatusWithID.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.PlanStatusWithID.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.PlanStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.PlanStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.PlanStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.PlanStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    reason: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.PlanStatus}
 */
proto.viam.service.motion.v1.PlanStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.PlanStatus;
  return proto.viam.service.motion.v1.PlanStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.PlanStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.PlanStatus}
 */
proto.viam.service.motion.v1.PlanStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.viam.service.motion.v1.PlanState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.PlanStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.PlanStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.PlanStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.PlanStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional PlanState state = 1;
 * @return {!proto.viam.service.motion.v1.PlanState}
 */
proto.viam.service.motion.v1.PlanStatus.prototype.getState = function() {
  return /** @type {!proto.viam.service.motion.v1.PlanState} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.viam.service.motion.v1.PlanState} value
 * @return {!proto.viam.service.motion.v1.PlanStatus} returns this
 */
proto.viam.service.motion.v1.PlanStatus.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.viam.service.motion.v1.PlanStatus.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.viam.service.motion.v1.PlanStatus} returns this
*/
proto.viam.service.motion.v1.PlanStatus.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.PlanStatus} returns this
 */
proto.viam.service.motion.v1.PlanStatus.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.PlanStatus.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string reason = 3;
 * @return {string}
 */
proto.viam.service.motion.v1.PlanStatus.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.motion.v1.PlanStatus} returns this
 */
proto.viam.service.motion.v1.PlanStatus.prototype.setReason = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.service.motion.v1.PlanStatus} returns this
 */
proto.viam.service.motion.v1.PlanStatus.prototype.clearReason = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.PlanStatus.prototype.hasReason = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.motion.v1.Plan.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.Plan.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.Plan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.Plan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.Plan.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    componentName: (f = msg.getComponentName()) && common_v1_common_pb.ResourceName.toObject(includeInstance, f),
    executionId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    stepsList: jspb.Message.toObjectList(msg.getStepsList(),
    proto.viam.service.motion.v1.PlanStep.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.Plan}
 */
proto.viam.service.motion.v1.Plan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.Plan;
  return proto.viam.service.motion.v1.Plan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.Plan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.Plan}
 */
proto.viam.service.motion.v1.Plan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new common_v1_common_pb.ResourceName;
      reader.readMessage(value,common_v1_common_pb.ResourceName.deserializeBinaryFromReader);
      msg.setComponentName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExecutionId(value);
      break;
    case 4:
      var value = new proto.viam.service.motion.v1.PlanStep;
      reader.readMessage(value,proto.viam.service.motion.v1.PlanStep.deserializeBinaryFromReader);
      msg.addSteps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.Plan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.Plan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.Plan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.Plan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getComponentName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_v1_common_pb.ResourceName.serializeBinaryToWriter
    );
  }
  f = message.getExecutionId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStepsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.viam.service.motion.v1.PlanStep.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.viam.service.motion.v1.Plan.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.motion.v1.Plan} returns this
 */
proto.viam.service.motion.v1.Plan.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional viam.common.v1.ResourceName component_name = 2;
 * @return {?proto.viam.common.v1.ResourceName}
 */
proto.viam.service.motion.v1.Plan.prototype.getComponentName = function() {
  return /** @type{?proto.viam.common.v1.ResourceName} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.ResourceName, 2));
};


/**
 * @param {?proto.viam.common.v1.ResourceName|undefined} value
 * @return {!proto.viam.service.motion.v1.Plan} returns this
*/
proto.viam.service.motion.v1.Plan.prototype.setComponentName = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.Plan} returns this
 */
proto.viam.service.motion.v1.Plan.prototype.clearComponentName = function() {
  return this.setComponentName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.Plan.prototype.hasComponentName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string execution_id = 3;
 * @return {string}
 */
proto.viam.service.motion.v1.Plan.prototype.getExecutionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.motion.v1.Plan} returns this
 */
proto.viam.service.motion.v1.Plan.prototype.setExecutionId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated PlanStep steps = 4;
 * @return {!Array<!proto.viam.service.motion.v1.PlanStep>}
 */
proto.viam.service.motion.v1.Plan.prototype.getStepsList = function() {
  return /** @type{!Array<!proto.viam.service.motion.v1.PlanStep>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.service.motion.v1.PlanStep, 4));
};


/**
 * @param {!Array<!proto.viam.service.motion.v1.PlanStep>} value
 * @return {!proto.viam.service.motion.v1.Plan} returns this
*/
proto.viam.service.motion.v1.Plan.prototype.setStepsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.viam.service.motion.v1.PlanStep=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.service.motion.v1.PlanStep}
 */
proto.viam.service.motion.v1.Plan.prototype.addSteps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.viam.service.motion.v1.PlanStep, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.motion.v1.Plan} returns this
 */
proto.viam.service.motion.v1.Plan.prototype.clearStepsList = function() {
  return this.setStepsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.PlanStep.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.PlanStep.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.PlanStep} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.PlanStep.toObject = function(includeInstance, msg) {
  var f, obj = {
    stepMap: (f = msg.getStepMap()) ? f.toObject(includeInstance, proto.viam.service.motion.v1.ComponentState.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.PlanStep}
 */
proto.viam.service.motion.v1.PlanStep.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.PlanStep;
  return proto.viam.service.motion.v1.PlanStep.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.PlanStep} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.PlanStep}
 */
proto.viam.service.motion.v1.PlanStep.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getStepMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.viam.service.motion.v1.ComponentState.deserializeBinaryFromReader, "", new proto.viam.service.motion.v1.ComponentState());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.PlanStep.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.PlanStep.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.PlanStep} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.PlanStep.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStepMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.viam.service.motion.v1.ComponentState.serializeBinaryToWriter);
  }
};


/**
 * map<string, ComponentState> step = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.viam.service.motion.v1.ComponentState>}
 */
proto.viam.service.motion.v1.PlanStep.prototype.getStepMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.viam.service.motion.v1.ComponentState>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.viam.service.motion.v1.ComponentState));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.viam.service.motion.v1.PlanStep} returns this
 */
proto.viam.service.motion.v1.PlanStep.prototype.clearStepMap = function() {
  this.getStepMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.motion.v1.ComponentState.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.motion.v1.ComponentState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.motion.v1.ComponentState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.ComponentState.toObject = function(includeInstance, msg) {
  var f, obj = {
    pose: (f = msg.getPose()) && common_v1_common_pb.Pose.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.motion.v1.ComponentState}
 */
proto.viam.service.motion.v1.ComponentState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.motion.v1.ComponentState;
  return proto.viam.service.motion.v1.ComponentState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.motion.v1.ComponentState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.motion.v1.ComponentState}
 */
proto.viam.service.motion.v1.ComponentState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_v1_common_pb.Pose;
      reader.readMessage(value,common_v1_common_pb.Pose.deserializeBinaryFromReader);
      msg.setPose(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.motion.v1.ComponentState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.motion.v1.ComponentState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.motion.v1.ComponentState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.motion.v1.ComponentState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPose();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_v1_common_pb.Pose.serializeBinaryToWriter
    );
  }
};


/**
 * optional viam.common.v1.Pose pose = 1;
 * @return {?proto.viam.common.v1.Pose}
 */
proto.viam.service.motion.v1.ComponentState.prototype.getPose = function() {
  return /** @type{?proto.viam.common.v1.Pose} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.Pose, 1));
};


/**
 * @param {?proto.viam.common.v1.Pose|undefined} value
 * @return {!proto.viam.service.motion.v1.ComponentState} returns this
*/
proto.viam.service.motion.v1.ComponentState.prototype.setPose = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.motion.v1.ComponentState} returns this
 */
proto.viam.service.motion.v1.ComponentState.prototype.clearPose = function() {
  return this.setPose(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.motion.v1.ComponentState.prototype.hasPose = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * @enum {number}
 */
proto.viam.service.motion.v1.PlanState = {
  PLAN_STATE_UNSPECIFIED: 0,
  PLAN_STATE_IN_PROGRESS: 1,
  PLAN_STATE_STOPPED: 2,
  PLAN_STATE_SUCCEEDED: 3,
  PLAN_STATE_FAILED: 4
};

goog.object.extend(exports, proto.viam.service.motion.v1);
