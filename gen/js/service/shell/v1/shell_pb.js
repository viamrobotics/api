// source: service/shell/v1/shell.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var common_v1_common_pb = require('../../../common/v1/common_pb.js');
goog.object.extend(proto, common_v1_common_pb);
var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.viam.service.shell.v1.CopyFilesFromMachineRequest', null, global);
goog.exportSymbol('proto.viam.service.shell.v1.CopyFilesFromMachineRequest.RequestCase', null, global);
goog.exportSymbol('proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata', null, global);
goog.exportSymbol('proto.viam.service.shell.v1.CopyFilesFromMachineResponse', null, global);
goog.exportSymbol('proto.viam.service.shell.v1.CopyFilesFromMachineResponse.ResponseCase', null, global);
goog.exportSymbol('proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata', null, global);
goog.exportSymbol('proto.viam.service.shell.v1.CopyFilesSourceType', null, global);
goog.exportSymbol('proto.viam.service.shell.v1.CopyFilesToMachineRequest', null, global);
goog.exportSymbol('proto.viam.service.shell.v1.CopyFilesToMachineRequest.RequestCase', null, global);
goog.exportSymbol('proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata', null, global);
goog.exportSymbol('proto.viam.service.shell.v1.CopyFilesToMachineResponse', null, global);
goog.exportSymbol('proto.viam.service.shell.v1.FileData', null, global);
goog.exportSymbol('proto.viam.service.shell.v1.ShellRequest', null, global);
goog.exportSymbol('proto.viam.service.shell.v1.ShellResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.shell.v1.ShellRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.shell.v1.ShellRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.shell.v1.ShellRequest.displayName = 'proto.viam.service.shell.v1.ShellRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.shell.v1.ShellResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.shell.v1.ShellResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.shell.v1.ShellResponse.displayName = 'proto.viam.service.shell.v1.ShellResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.shell.v1.FileData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.shell.v1.FileData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.shell.v1.FileData.displayName = 'proto.viam.service.shell.v1.FileData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.displayName = 'proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.viam.service.shell.v1.CopyFilesToMachineRequest.oneofGroups_);
};
goog.inherits(proto.viam.service.shell.v1.CopyFilesToMachineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.shell.v1.CopyFilesToMachineRequest.displayName = 'proto.viam.service.shell.v1.CopyFilesToMachineRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.shell.v1.CopyFilesToMachineResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.shell.v1.CopyFilesToMachineResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.shell.v1.CopyFilesToMachineResponse.displayName = 'proto.viam.service.shell.v1.CopyFilesToMachineResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.repeatedFields_, null);
};
goog.inherits(proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.displayName = 'proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.viam.service.shell.v1.CopyFilesFromMachineRequest.oneofGroups_);
};
goog.inherits(proto.viam.service.shell.v1.CopyFilesFromMachineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.shell.v1.CopyFilesFromMachineRequest.displayName = 'proto.viam.service.shell.v1.CopyFilesFromMachineRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata.displayName = 'proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.viam.service.shell.v1.CopyFilesFromMachineResponse.oneofGroups_);
};
goog.inherits(proto.viam.service.shell.v1.CopyFilesFromMachineResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.shell.v1.CopyFilesFromMachineResponse.displayName = 'proto.viam.service.shell.v1.CopyFilesFromMachineResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.shell.v1.ShellRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.shell.v1.ShellRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.shell.v1.ShellRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.ShellRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dataIn: jspb.Message.getFieldWithDefault(msg, 2, ""),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.shell.v1.ShellRequest}
 */
proto.viam.service.shell.v1.ShellRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.shell.v1.ShellRequest;
  return proto.viam.service.shell.v1.ShellRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.shell.v1.ShellRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.shell.v1.ShellRequest}
 */
proto.viam.service.shell.v1.ShellRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataIn(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.shell.v1.ShellRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.shell.v1.ShellRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.shell.v1.ShellRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.ShellRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDataIn();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.shell.v1.ShellRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.shell.v1.ShellRequest} returns this
 */
proto.viam.service.shell.v1.ShellRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string data_in = 2;
 * @return {string}
 */
proto.viam.service.shell.v1.ShellRequest.prototype.getDataIn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.shell.v1.ShellRequest} returns this
 */
proto.viam.service.shell.v1.ShellRequest.prototype.setDataIn = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.shell.v1.ShellRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.shell.v1.ShellRequest} returns this
*/
proto.viam.service.shell.v1.ShellRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.shell.v1.ShellRequest} returns this
 */
proto.viam.service.shell.v1.ShellRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.shell.v1.ShellRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.shell.v1.ShellResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.shell.v1.ShellResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.shell.v1.ShellResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.ShellResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataOut: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dataErr: jspb.Message.getFieldWithDefault(msg, 2, ""),
    eof: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.shell.v1.ShellResponse}
 */
proto.viam.service.shell.v1.ShellResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.shell.v1.ShellResponse;
  return proto.viam.service.shell.v1.ShellResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.shell.v1.ShellResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.shell.v1.ShellResponse}
 */
proto.viam.service.shell.v1.ShellResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataOut(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataErr(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEof(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.shell.v1.ShellResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.shell.v1.ShellResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.shell.v1.ShellResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.ShellResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataOut();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDataErr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEof();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string data_out = 1;
 * @return {string}
 */
proto.viam.service.shell.v1.ShellResponse.prototype.getDataOut = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.shell.v1.ShellResponse} returns this
 */
proto.viam.service.shell.v1.ShellResponse.prototype.setDataOut = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string data_err = 2;
 * @return {string}
 */
proto.viam.service.shell.v1.ShellResponse.prototype.getDataErr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.shell.v1.ShellResponse} returns this
 */
proto.viam.service.shell.v1.ShellResponse.prototype.setDataErr = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool eof = 3;
 * @return {boolean}
 */
proto.viam.service.shell.v1.ShellResponse.prototype.getEof = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.shell.v1.ShellResponse} returns this
 */
proto.viam.service.shell.v1.ShellResponse.prototype.setEof = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.shell.v1.FileData.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.shell.v1.FileData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.shell.v1.FileData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.FileData.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    size: jspb.Message.getFieldWithDefault(msg, 2, 0),
    isDir: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    data: msg.getData_asB64(),
    eof: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    modTime: (f = msg.getModTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    mode: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.shell.v1.FileData}
 */
proto.viam.service.shell.v1.FileData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.shell.v1.FileData;
  return proto.viam.service.shell.v1.FileData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.shell.v1.FileData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.shell.v1.FileData}
 */
proto.viam.service.shell.v1.FileData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDir(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEof(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setModTime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.shell.v1.FileData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.shell.v1.FileData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.shell.v1.FileData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.FileData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getIsDir();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getEof();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getModTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.shell.v1.FileData.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.shell.v1.FileData} returns this
 */
proto.viam.service.shell.v1.FileData.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 size = 2;
 * @return {number}
 */
proto.viam.service.shell.v1.FileData.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.shell.v1.FileData} returns this
 */
proto.viam.service.shell.v1.FileData.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool is_dir = 3;
 * @return {boolean}
 */
proto.viam.service.shell.v1.FileData.prototype.getIsDir = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.shell.v1.FileData} returns this
 */
proto.viam.service.shell.v1.FileData.prototype.setIsDir = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bytes data = 4;
 * @return {string}
 */
proto.viam.service.shell.v1.FileData.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes data = 4;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.viam.service.shell.v1.FileData.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.viam.service.shell.v1.FileData.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.viam.service.shell.v1.FileData} returns this
 */
proto.viam.service.shell.v1.FileData.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bool eof = 5;
 * @return {boolean}
 */
proto.viam.service.shell.v1.FileData.prototype.getEof = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.shell.v1.FileData} returns this
 */
proto.viam.service.shell.v1.FileData.prototype.setEof = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp mod_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.viam.service.shell.v1.FileData.prototype.getModTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.viam.service.shell.v1.FileData} returns this
*/
proto.viam.service.shell.v1.FileData.prototype.setModTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.shell.v1.FileData} returns this
 */
proto.viam.service.shell.v1.FileData.prototype.clearModTime = function() {
  return this.setModTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.shell.v1.FileData.prototype.hasModTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 mode = 7;
 * @return {number}
 */
proto.viam.service.shell.v1.FileData.prototype.getMode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.shell.v1.FileData} returns this
 */
proto.viam.service.shell.v1.FileData.prototype.setMode = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.service.shell.v1.FileData} returns this
 */
proto.viam.service.shell.v1.FileData.prototype.clearMode = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.shell.v1.FileData.prototype.hasMode = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sourceType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    destination: jspb.Message.getFieldWithDefault(msg, 3, ""),
    preserve: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata;
  return proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.viam.service.shell.v1.CopyFilesSourceType} */ (reader.readEnum());
      msg.setSourceType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPreserve(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSourceType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getDestination();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPreserve();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata} returns this
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional CopyFilesSourceType source_type = 2;
 * @return {!proto.viam.service.shell.v1.CopyFilesSourceType}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.prototype.getSourceType = function() {
  return /** @type {!proto.viam.service.shell.v1.CopyFilesSourceType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.viam.service.shell.v1.CopyFilesSourceType} value
 * @return {!proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata} returns this
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.prototype.setSourceType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string destination = 3;
 * @return {string}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata} returns this
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.prototype.setDestination = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool preserve = 4;
 * @return {boolean}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.prototype.getPreserve = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata} returns this
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.prototype.setPreserve = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata} returns this
*/
proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata} returns this
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequest.RequestCase = {
  REQUEST_NOT_SET: 0,
  METADATA: 1,
  FILE_DATA: 2
};

/**
 * @return {proto.viam.service.shell.v1.CopyFilesToMachineRequest.RequestCase}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequest.prototype.getRequestCase = function() {
  return /** @type {proto.viam.service.shell.v1.CopyFilesToMachineRequest.RequestCase} */(jspb.Message.computeOneofCase(this, proto.viam.service.shell.v1.CopyFilesToMachineRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.shell.v1.CopyFilesToMachineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.shell.v1.CopyFilesToMachineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.toObject(includeInstance, f),
    fileData: (f = msg.getFileData()) && proto.viam.service.shell.v1.FileData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.shell.v1.CopyFilesToMachineRequest}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.shell.v1.CopyFilesToMachineRequest;
  return proto.viam.service.shell.v1.CopyFilesToMachineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.shell.v1.CopyFilesToMachineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.shell.v1.CopyFilesToMachineRequest}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata;
      reader.readMessage(value,proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.viam.service.shell.v1.FileData;
      reader.readMessage(value,proto.viam.service.shell.v1.FileData.deserializeBinaryFromReader);
      msg.setFileData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.shell.v1.CopyFilesToMachineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.shell.v1.CopyFilesToMachineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata.serializeBinaryToWriter
    );
  }
  f = message.getFileData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.viam.service.shell.v1.FileData.serializeBinaryToWriter
    );
  }
};


/**
 * optional CopyFilesToMachineRequestMetadata metadata = 1;
 * @return {?proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequest.prototype.getMetadata = function() {
  return /** @type{?proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata, 1));
};


/**
 * @param {?proto.viam.service.shell.v1.CopyFilesToMachineRequestMetadata|undefined} value
 * @return {!proto.viam.service.shell.v1.CopyFilesToMachineRequest} returns this
*/
proto.viam.service.shell.v1.CopyFilesToMachineRequest.prototype.setMetadata = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.viam.service.shell.v1.CopyFilesToMachineRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.shell.v1.CopyFilesToMachineRequest} returns this
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequest.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequest.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FileData file_data = 2;
 * @return {?proto.viam.service.shell.v1.FileData}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequest.prototype.getFileData = function() {
  return /** @type{?proto.viam.service.shell.v1.FileData} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.shell.v1.FileData, 2));
};


/**
 * @param {?proto.viam.service.shell.v1.FileData|undefined} value
 * @return {!proto.viam.service.shell.v1.CopyFilesToMachineRequest} returns this
*/
proto.viam.service.shell.v1.CopyFilesToMachineRequest.prototype.setFileData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.viam.service.shell.v1.CopyFilesToMachineRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.shell.v1.CopyFilesToMachineRequest} returns this
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequest.prototype.clearFileData = function() {
  return this.setFileData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.shell.v1.CopyFilesToMachineRequest.prototype.hasFileData = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.shell.v1.CopyFilesToMachineResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.shell.v1.CopyFilesToMachineResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.shell.v1.CopyFilesToMachineResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.CopyFilesToMachineResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ackLastFile: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.shell.v1.CopyFilesToMachineResponse}
 */
proto.viam.service.shell.v1.CopyFilesToMachineResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.shell.v1.CopyFilesToMachineResponse;
  return proto.viam.service.shell.v1.CopyFilesToMachineResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.shell.v1.CopyFilesToMachineResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.shell.v1.CopyFilesToMachineResponse}
 */
proto.viam.service.shell.v1.CopyFilesToMachineResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAckLastFile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.shell.v1.CopyFilesToMachineResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.shell.v1.CopyFilesToMachineResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.shell.v1.CopyFilesToMachineResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.CopyFilesToMachineResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAckLastFile();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool ack_last_file = 1;
 * @return {boolean}
 */
proto.viam.service.shell.v1.CopyFilesToMachineResponse.prototype.getAckLastFile = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.shell.v1.CopyFilesToMachineResponse} returns this
 */
proto.viam.service.shell.v1.CopyFilesToMachineResponse.prototype.setAckLastFile = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pathsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    allowRecursion: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    preserve: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata;
  return proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addPaths(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowRecursion(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPreserve(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPathsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getAllowRecursion();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getPreserve();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata} returns this
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string paths = 2;
 * @return {!Array<string>}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.prototype.getPathsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata} returns this
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.prototype.setPathsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata} returns this
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.prototype.addPaths = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata} returns this
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.prototype.clearPathsList = function() {
  return this.setPathsList([]);
};


/**
 * optional bool allow_recursion = 3;
 * @return {boolean}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.prototype.getAllowRecursion = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata} returns this
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.prototype.setAllowRecursion = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool preserve = 4;
 * @return {boolean}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.prototype.getPreserve = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata} returns this
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.prototype.setPreserve = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata} returns this
*/
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata} returns this
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequest.RequestCase = {
  REQUEST_NOT_SET: 0,
  METADATA: 1,
  ACK_LAST_FILE: 2
};

/**
 * @return {proto.viam.service.shell.v1.CopyFilesFromMachineRequest.RequestCase}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequest.prototype.getRequestCase = function() {
  return /** @type {proto.viam.service.shell.v1.CopyFilesFromMachineRequest.RequestCase} */(jspb.Message.computeOneofCase(this, proto.viam.service.shell.v1.CopyFilesFromMachineRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.shell.v1.CopyFilesFromMachineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.shell.v1.CopyFilesFromMachineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.toObject(includeInstance, f),
    ackLastFile: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineRequest}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.shell.v1.CopyFilesFromMachineRequest;
  return proto.viam.service.shell.v1.CopyFilesFromMachineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.shell.v1.CopyFilesFromMachineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineRequest}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata;
      reader.readMessage(value,proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAckLastFile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.shell.v1.CopyFilesFromMachineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.shell.v1.CopyFilesFromMachineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional CopyFilesFromMachineRequestMetadata metadata = 1;
 * @return {?proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequest.prototype.getMetadata = function() {
  return /** @type{?proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata, 1));
};


/**
 * @param {?proto.viam.service.shell.v1.CopyFilesFromMachineRequestMetadata|undefined} value
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineRequest} returns this
*/
proto.viam.service.shell.v1.CopyFilesFromMachineRequest.prototype.setMetadata = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.viam.service.shell.v1.CopyFilesFromMachineRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineRequest} returns this
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequest.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequest.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool ack_last_file = 2;
 * @return {boolean}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequest.prototype.getAckLastFile = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineRequest} returns this
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequest.prototype.setAckLastFile = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.viam.service.shell.v1.CopyFilesFromMachineRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineRequest} returns this
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequest.prototype.clearAckLastFile = function() {
  return jspb.Message.setOneofField(this, 2, proto.viam.service.shell.v1.CopyFilesFromMachineRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineRequest.prototype.hasAckLastFile = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourceType: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata;
  return proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.viam.service.shell.v1.CopyFilesSourceType} */ (reader.readEnum());
      msg.setSourceType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourceType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional CopyFilesSourceType source_type = 1;
 * @return {!proto.viam.service.shell.v1.CopyFilesSourceType}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata.prototype.getSourceType = function() {
  return /** @type {!proto.viam.service.shell.v1.CopyFilesSourceType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.viam.service.shell.v1.CopyFilesSourceType} value
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata} returns this
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata.prototype.setSourceType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  METADATA: 1,
  FILE_DATA: 2
};

/**
 * @return {proto.viam.service.shell.v1.CopyFilesFromMachineResponse.ResponseCase}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponse.prototype.getResponseCase = function() {
  return /** @type {proto.viam.service.shell.v1.CopyFilesFromMachineResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.viam.service.shell.v1.CopyFilesFromMachineResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.shell.v1.CopyFilesFromMachineResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.shell.v1.CopyFilesFromMachineResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata.toObject(includeInstance, f),
    fileData: (f = msg.getFileData()) && proto.viam.service.shell.v1.FileData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineResponse}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.shell.v1.CopyFilesFromMachineResponse;
  return proto.viam.service.shell.v1.CopyFilesFromMachineResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.shell.v1.CopyFilesFromMachineResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineResponse}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata;
      reader.readMessage(value,proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.viam.service.shell.v1.FileData;
      reader.readMessage(value,proto.viam.service.shell.v1.FileData.deserializeBinaryFromReader);
      msg.setFileData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.shell.v1.CopyFilesFromMachineResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.shell.v1.CopyFilesFromMachineResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata.serializeBinaryToWriter
    );
  }
  f = message.getFileData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.viam.service.shell.v1.FileData.serializeBinaryToWriter
    );
  }
};


/**
 * optional CopyFilesFromMachineResponseMetadata metadata = 1;
 * @return {?proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponse.prototype.getMetadata = function() {
  return /** @type{?proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata, 1));
};


/**
 * @param {?proto.viam.service.shell.v1.CopyFilesFromMachineResponseMetadata|undefined} value
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineResponse} returns this
*/
proto.viam.service.shell.v1.CopyFilesFromMachineResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.viam.service.shell.v1.CopyFilesFromMachineResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineResponse} returns this
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FileData file_data = 2;
 * @return {?proto.viam.service.shell.v1.FileData}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponse.prototype.getFileData = function() {
  return /** @type{?proto.viam.service.shell.v1.FileData} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.shell.v1.FileData, 2));
};


/**
 * @param {?proto.viam.service.shell.v1.FileData|undefined} value
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineResponse} returns this
*/
proto.viam.service.shell.v1.CopyFilesFromMachineResponse.prototype.setFileData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.viam.service.shell.v1.CopyFilesFromMachineResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.shell.v1.CopyFilesFromMachineResponse} returns this
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponse.prototype.clearFileData = function() {
  return this.setFileData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.shell.v1.CopyFilesFromMachineResponse.prototype.hasFileData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.viam.service.shell.v1.CopyFilesSourceType = {
  COPY_FILES_SOURCE_TYPE_UNSPECIFIED: 0,
  COPY_FILES_SOURCE_TYPE_SINGLE_FILE: 1,
  COPY_FILES_SOURCE_TYPE_SINGLE_DIRECTORY: 2,
  COPY_FILES_SOURCE_TYPE_MULTIPLE_FILES: 3
};

goog.object.extend(exports, proto.viam.service.shell.v1);
