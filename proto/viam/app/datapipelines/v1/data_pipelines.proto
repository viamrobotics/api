syntax = "proto3";

package viam.app.datapipelines.v1;

import "google/protobuf/timestamp.proto";

option go_package = "go.viam.com/api/app/datapipelines/v1";

// DataPipelinesService is used to manage data pipelines.
service DataPipelinesService {
  // GetDataPipeline retrieves a specific data pipeline by its id.
  rpc GetDataPipeline(GetDataPipelineRequest) returns (GetDataPipelineResponse);

  // ListDataPipelines returns a list of data pipelines based on organization id.
  rpc ListDataPipelines(ListDataPipelinesRequest) returns (ListDataPipelinesResponse);

  // CreateDataPipeline creates a new data pipeline with the provided configuration.
  rpc CreateDataPipeline(CreateDataPipelineRequest) returns (CreateDataPipelineResponse);

  // UpdateDataPipeline modifies an existing data pipeline's configuration.
  rpc UpdateDataPipeline(UpdateDataPipelineRequest) returns (UpdateDataPipelineResponse);

  // DeleteDataPipeline deletes a data pipeline from the database.
  rpc DeleteDataPipeline(DeleteDataPipelineRequest) returns (DeleteDataPipelineResponse);

  // EnableDataPipeline enables a data pipeline.
  rpc EnableDataPipeline(EnableDataPipelineRequest) returns (EnableDataPipelineResponse);

  // DisableDataPipeline disables a data pipeline.
  rpc DisableDataPipeline(DisableDataPipelineRequest) returns (DisableDataPipelineResponse);
}

message DataPipeline {
  string id = 1;

  // The associated Viam organization ID.
  string organization_id = 2;

  // A unique identifier at the org level.
  string name = 3;

  // A MongoDB aggregation pipeline as a list of BSON documents, where
  // each document is one stage in the pipeline.
  repeated bytes mql_binary = 4;

  // A cron expression representing the expected execution schedule in UTC (note this also
  // defines the input time window; an hourly schedule would process 1 hour of data at a time).
  string schedule = 5;

  // Whether or not the pipeline is enabled.
  bool enabled = 6;

  // The time the pipeline was created.
  google.protobuf.Timestamp created_on = 7;

  // The time the pipeline was last updated.
  google.protobuf.Timestamp updated_at = 8;
}

message GetDataPipelineRequest {
  // The ID of the data pipeline to retrieve.
  string id = 1;
}

message GetDataPipelineResponse {
  DataPipeline data_pipeline = 1;
}

message ListDataPipelinesRequest {
  // The associated Viam organization ID.
  string organization_id = 1;
}

message ListDataPipelinesResponse {
  repeated DataPipeline data_pipelines = 1;
}

message CreateDataPipelineRequest {
  // The associated Viam organization ID.
  string organization_id = 1;

  // A unique identifier at the org level.
  string name = 2;

  // A MongoDB aggregation pipeline as a list of BSON documents, where
  // each document is one stage in the pipeline.
  repeated bytes mql_binary = 3;

  // A cron expression representing the expected execution schedule in UTC (note this also
  // defines the input time window; an hourly schedule would process 1 hour of data at a time).
  string schedule = 4;
}

message CreateDataPipelineResponse {
  // The ID of the newly created data pipeline.
  string id = 1;
}

message UpdateDataPipelineRequest {
  // The ID of the data pipeline to update.
  string id = 1;

  // A unique identifier at the org level.
  string name = 2;

  // A MongoDB aggregation pipeline as a list of BSON documents, where
  // each document is one stage in the pipeline.
  repeated bytes mql_binary = 3;

  // A cron expression representing the expected execution schedule in UTC (note this also
  // defines the input time window; an hourly schedule would process 1 hour of data at a time).
  string schedule = 4;
}

message UpdateDataPipelineResponse {}

message DeleteDataPipelineRequest {
  // The ID of the data pipeline to delete.
  string id = 1;
}

message DeleteDataPipelineResponse {}

message EnableDataPipelineRequest {
  // The ID of the data pipeline to enable.
  string id = 1;
}

message EnableDataPipelineResponse {}

message DisableDataPipelineRequest {
  // The ID of the data pipeline to disable.
  string id = 1;
}

message DisableDataPipelineResponse {}
