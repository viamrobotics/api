// source: app/datasync/v1/data_sync.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var tagger_v1_tagger_pb = require('../../../tagger/v1/tagger_pb.js');
goog.object.extend(proto, tagger_v1_tagger_pb);
goog.exportSymbol('proto.viam.app.datasync.v1.BinaryCapture', null, global);
goog.exportSymbol('proto.viam.app.datasync.v1.CaptureInterval', null, global);
goog.exportSymbol('proto.viam.app.datasync.v1.DataCaptureMetadata', null, global);
goog.exportSymbol('proto.viam.app.datasync.v1.DataType', null, global);
goog.exportSymbol('proto.viam.app.datasync.v1.FileData', null, global);
goog.exportSymbol('proto.viam.app.datasync.v1.SensorData', null, global);
goog.exportSymbol('proto.viam.app.datasync.v1.SensorData.DataCase', null, global);
goog.exportSymbol('proto.viam.app.datasync.v1.SensorMetadata', null, global);
goog.exportSymbol('proto.viam.app.datasync.v1.TabularCapture', null, global);
goog.exportSymbol('proto.viam.app.datasync.v1.UploadMetadata', null, global);
goog.exportSymbol('proto.viam.app.datasync.v1.UploadRequest', null, global);
goog.exportSymbol('proto.viam.app.datasync.v1.UploadRequest.UploadPacketCase', null, global);
goog.exportSymbol('proto.viam.app.datasync.v1.UploadResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.datasync.v1.SensorMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.datasync.v1.SensorMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.datasync.v1.SensorMetadata.displayName = 'proto.viam.app.datasync.v1.SensorMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.datasync.v1.SensorData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.viam.app.datasync.v1.SensorData.oneofGroups_);
};
goog.inherits(proto.viam.app.datasync.v1.SensorData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.datasync.v1.SensorData.displayName = 'proto.viam.app.datasync.v1.SensorData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.datasync.v1.FileData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.datasync.v1.FileData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.datasync.v1.FileData.displayName = 'proto.viam.app.datasync.v1.FileData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.datasync.v1.UploadMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.app.datasync.v1.UploadMetadata.repeatedFields_, null);
};
goog.inherits(proto.viam.app.datasync.v1.UploadMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.datasync.v1.UploadMetadata.displayName = 'proto.viam.app.datasync.v1.UploadMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.datasync.v1.UploadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.viam.app.datasync.v1.UploadRequest.oneofGroups_);
};
goog.inherits(proto.viam.app.datasync.v1.UploadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.datasync.v1.UploadRequest.displayName = 'proto.viam.app.datasync.v1.UploadRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.datasync.v1.UploadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.datasync.v1.UploadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.datasync.v1.UploadResponse.displayName = 'proto.viam.app.datasync.v1.UploadResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.datasync.v1.CaptureInterval = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.datasync.v1.CaptureInterval, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.datasync.v1.CaptureInterval.displayName = 'proto.viam.app.datasync.v1.CaptureInterval';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.datasync.v1.DataCaptureMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.app.datasync.v1.DataCaptureMetadata.repeatedFields_, null);
};
goog.inherits(proto.viam.app.datasync.v1.DataCaptureMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.datasync.v1.DataCaptureMetadata.displayName = 'proto.viam.app.datasync.v1.DataCaptureMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.datasync.v1.TabularCapture = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.app.datasync.v1.TabularCapture.repeatedFields_, null);
};
goog.inherits(proto.viam.app.datasync.v1.TabularCapture, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.datasync.v1.TabularCapture.displayName = 'proto.viam.app.datasync.v1.TabularCapture';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.datasync.v1.BinaryCapture = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.app.datasync.v1.BinaryCapture.repeatedFields_, null);
};
goog.inherits(proto.viam.app.datasync.v1.BinaryCapture, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.datasync.v1.BinaryCapture.displayName = 'proto.viam.app.datasync.v1.BinaryCapture';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.datasync.v1.SensorMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.datasync.v1.SensorMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.datasync.v1.SensorMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.SensorMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    timeRequested: (f = msg.getTimeRequested()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    timeReceived: (f = msg.getTimeReceived()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.datasync.v1.SensorMetadata}
 */
proto.viam.app.datasync.v1.SensorMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.datasync.v1.SensorMetadata;
  return proto.viam.app.datasync.v1.SensorMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.datasync.v1.SensorMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.datasync.v1.SensorMetadata}
 */
proto.viam.app.datasync.v1.SensorMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimeRequested(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimeReceived(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.datasync.v1.SensorMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.datasync.v1.SensorMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.datasync.v1.SensorMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.SensorMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimeRequested();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTimeReceived();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp time_requested = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.viam.app.datasync.v1.SensorMetadata.prototype.getTimeRequested = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.viam.app.datasync.v1.SensorMetadata} returns this
*/
proto.viam.app.datasync.v1.SensorMetadata.prototype.setTimeRequested = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.datasync.v1.SensorMetadata} returns this
 */
proto.viam.app.datasync.v1.SensorMetadata.prototype.clearTimeRequested = function() {
  return this.setTimeRequested(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.datasync.v1.SensorMetadata.prototype.hasTimeRequested = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp time_received = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.viam.app.datasync.v1.SensorMetadata.prototype.getTimeReceived = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.viam.app.datasync.v1.SensorMetadata} returns this
*/
proto.viam.app.datasync.v1.SensorMetadata.prototype.setTimeReceived = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.datasync.v1.SensorMetadata} returns this
 */
proto.viam.app.datasync.v1.SensorMetadata.prototype.clearTimeReceived = function() {
  return this.setTimeReceived(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.datasync.v1.SensorMetadata.prototype.hasTimeReceived = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.viam.app.datasync.v1.SensorData.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.viam.app.datasync.v1.SensorData.DataCase = {
  DATA_NOT_SET: 0,
  STRUCT: 2,
  BINARY: 3
};

/**
 * @return {proto.viam.app.datasync.v1.SensorData.DataCase}
 */
proto.viam.app.datasync.v1.SensorData.prototype.getDataCase = function() {
  return /** @type {proto.viam.app.datasync.v1.SensorData.DataCase} */(jspb.Message.computeOneofCase(this, proto.viam.app.datasync.v1.SensorData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.datasync.v1.SensorData.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.datasync.v1.SensorData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.datasync.v1.SensorData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.SensorData.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.viam.app.datasync.v1.SensorMetadata.toObject(includeInstance, f),
    struct: (f = msg.getStruct()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    binary: msg.getBinary_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.datasync.v1.SensorData}
 */
proto.viam.app.datasync.v1.SensorData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.datasync.v1.SensorData;
  return proto.viam.app.datasync.v1.SensorData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.datasync.v1.SensorData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.datasync.v1.SensorData}
 */
proto.viam.app.datasync.v1.SensorData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.app.datasync.v1.SensorMetadata;
      reader.readMessage(value,proto.viam.app.datasync.v1.SensorMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setStruct(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBinary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.datasync.v1.SensorData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.datasync.v1.SensorData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.datasync.v1.SensorData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.SensorData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.viam.app.datasync.v1.SensorMetadata.serializeBinaryToWriter
    );
  }
  f = message.getStruct();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional SensorMetadata metadata = 1;
 * @return {?proto.viam.app.datasync.v1.SensorMetadata}
 */
proto.viam.app.datasync.v1.SensorData.prototype.getMetadata = function() {
  return /** @type{?proto.viam.app.datasync.v1.SensorMetadata} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.datasync.v1.SensorMetadata, 1));
};


/**
 * @param {?proto.viam.app.datasync.v1.SensorMetadata|undefined} value
 * @return {!proto.viam.app.datasync.v1.SensorData} returns this
*/
proto.viam.app.datasync.v1.SensorData.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.datasync.v1.SensorData} returns this
 */
proto.viam.app.datasync.v1.SensorData.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.datasync.v1.SensorData.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Struct struct = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.app.datasync.v1.SensorData.prototype.getStruct = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.app.datasync.v1.SensorData} returns this
*/
proto.viam.app.datasync.v1.SensorData.prototype.setStruct = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.viam.app.datasync.v1.SensorData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.datasync.v1.SensorData} returns this
 */
proto.viam.app.datasync.v1.SensorData.prototype.clearStruct = function() {
  return this.setStruct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.datasync.v1.SensorData.prototype.hasStruct = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes binary = 3;
 * @return {string}
 */
proto.viam.app.datasync.v1.SensorData.prototype.getBinary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes binary = 3;
 * This is a type-conversion wrapper around `getBinary()`
 * @return {string}
 */
proto.viam.app.datasync.v1.SensorData.prototype.getBinary_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBinary()));
};


/**
 * optional bytes binary = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBinary()`
 * @return {!Uint8Array}
 */
proto.viam.app.datasync.v1.SensorData.prototype.getBinary_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBinary()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.viam.app.datasync.v1.SensorData} returns this
 */
proto.viam.app.datasync.v1.SensorData.prototype.setBinary = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.viam.app.datasync.v1.SensorData.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.app.datasync.v1.SensorData} returns this
 */
proto.viam.app.datasync.v1.SensorData.prototype.clearBinary = function() {
  return jspb.Message.setOneofField(this, 3, proto.viam.app.datasync.v1.SensorData.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.datasync.v1.SensorData.prototype.hasBinary = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.datasync.v1.FileData.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.datasync.v1.FileData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.datasync.v1.FileData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.FileData.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.datasync.v1.FileData}
 */
proto.viam.app.datasync.v1.FileData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.datasync.v1.FileData;
  return proto.viam.app.datasync.v1.FileData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.datasync.v1.FileData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.datasync.v1.FileData}
 */
proto.viam.app.datasync.v1.FileData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.datasync.v1.FileData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.datasync.v1.FileData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.datasync.v1.FileData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.FileData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {string}
 */
proto.viam.app.datasync.v1.FileData.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.viam.app.datasync.v1.FileData.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.viam.app.datasync.v1.FileData.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.viam.app.datasync.v1.FileData} returns this
 */
proto.viam.app.datasync.v1.FileData.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.app.datasync.v1.UploadMetadata.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.datasync.v1.UploadMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.datasync.v1.UploadMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.UploadMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    partId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    componentType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    componentName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    componentModel: jspb.Message.getFieldWithDefault(msg, 4, ""),
    methodName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0),
    fileName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    methodParametersMap: (f = msg.getMethodParametersMap()) ? f.toObject(includeInstance, proto.google.protobuf.Any.toObject) : [],
    fileExtension: jspb.Message.getFieldWithDefault(msg, 9, ""),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    sessionId: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.datasync.v1.UploadMetadata}
 */
proto.viam.app.datasync.v1.UploadMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.datasync.v1.UploadMetadata;
  return proto.viam.app.datasync.v1.UploadMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.datasync.v1.UploadMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.datasync.v1.UploadMetadata}
 */
proto.viam.app.datasync.v1.UploadMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentModel(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethodName(value);
      break;
    case 6:
      var value = /** @type {!proto.viam.app.datasync.v1.DataType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    case 8:
      var value = msg.getMethodParametersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Any.deserializeBinaryFromReader, "", new proto.google.protobuf.Any());
         });
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileExtension(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.datasync.v1.UploadMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.datasync.v1.UploadMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.UploadMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getComponentType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getComponentName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getComponentModel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMethodName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMethodParametersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Any.serializeBinaryToWriter);
  }
  f = message.getFileExtension();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string part_id = 1;
 * @return {string}
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.getPartId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.UploadMetadata} returns this
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.setPartId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string component_type = 2;
 * @return {string}
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.getComponentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.UploadMetadata} returns this
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.setComponentType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string component_name = 3;
 * @return {string}
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.getComponentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.UploadMetadata} returns this
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.setComponentName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string component_model = 4;
 * @return {string}
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.getComponentModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.UploadMetadata} returns this
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.setComponentModel = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string method_name = 5;
 * @return {string}
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.getMethodName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.UploadMetadata} returns this
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.setMethodName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional DataType type = 6;
 * @return {!proto.viam.app.datasync.v1.DataType}
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.getType = function() {
  return /** @type {!proto.viam.app.datasync.v1.DataType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.viam.app.datasync.v1.DataType} value
 * @return {!proto.viam.app.datasync.v1.UploadMetadata} returns this
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string file_name = 7;
 * @return {string}
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.UploadMetadata} returns this
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.setFileName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * map<string, google.protobuf.Any> method_parameters = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Any>}
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.getMethodParametersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Any>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      proto.google.protobuf.Any));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.viam.app.datasync.v1.UploadMetadata} returns this
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.clearMethodParametersMap = function() {
  this.getMethodParametersMap().clear();
  return this;};


/**
 * optional string file_extension = 9;
 * @return {string}
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.getFileExtension = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.UploadMetadata} returns this
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.setFileExtension = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated string tags = 10;
 * @return {!Array<string>}
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.viam.app.datasync.v1.UploadMetadata} returns this
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.viam.app.datasync.v1.UploadMetadata} returns this
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.datasync.v1.UploadMetadata} returns this
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional string session_id = 11;
 * @return {string}
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.UploadMetadata} returns this
 */
proto.viam.app.datasync.v1.UploadMetadata.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.viam.app.datasync.v1.UploadRequest.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.viam.app.datasync.v1.UploadRequest.UploadPacketCase = {
  UPLOAD_PACKET_NOT_SET: 0,
  METADATA: 1,
  SENSOR_CONTENTS: 2,
  FILE_CONTENTS: 3
};

/**
 * @return {proto.viam.app.datasync.v1.UploadRequest.UploadPacketCase}
 */
proto.viam.app.datasync.v1.UploadRequest.prototype.getUploadPacketCase = function() {
  return /** @type {proto.viam.app.datasync.v1.UploadRequest.UploadPacketCase} */(jspb.Message.computeOneofCase(this, proto.viam.app.datasync.v1.UploadRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.datasync.v1.UploadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.datasync.v1.UploadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.datasync.v1.UploadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.UploadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.viam.app.datasync.v1.UploadMetadata.toObject(includeInstance, f),
    sensorContents: (f = msg.getSensorContents()) && proto.viam.app.datasync.v1.SensorData.toObject(includeInstance, f),
    fileContents: (f = msg.getFileContents()) && proto.viam.app.datasync.v1.FileData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.datasync.v1.UploadRequest}
 */
proto.viam.app.datasync.v1.UploadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.datasync.v1.UploadRequest;
  return proto.viam.app.datasync.v1.UploadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.datasync.v1.UploadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.datasync.v1.UploadRequest}
 */
proto.viam.app.datasync.v1.UploadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.app.datasync.v1.UploadMetadata;
      reader.readMessage(value,proto.viam.app.datasync.v1.UploadMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.viam.app.datasync.v1.SensorData;
      reader.readMessage(value,proto.viam.app.datasync.v1.SensorData.deserializeBinaryFromReader);
      msg.setSensorContents(value);
      break;
    case 3:
      var value = new proto.viam.app.datasync.v1.FileData;
      reader.readMessage(value,proto.viam.app.datasync.v1.FileData.deserializeBinaryFromReader);
      msg.setFileContents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.datasync.v1.UploadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.datasync.v1.UploadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.datasync.v1.UploadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.UploadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.viam.app.datasync.v1.UploadMetadata.serializeBinaryToWriter
    );
  }
  f = message.getSensorContents();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.viam.app.datasync.v1.SensorData.serializeBinaryToWriter
    );
  }
  f = message.getFileContents();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.viam.app.datasync.v1.FileData.serializeBinaryToWriter
    );
  }
};


/**
 * optional UploadMetadata metadata = 1;
 * @return {?proto.viam.app.datasync.v1.UploadMetadata}
 */
proto.viam.app.datasync.v1.UploadRequest.prototype.getMetadata = function() {
  return /** @type{?proto.viam.app.datasync.v1.UploadMetadata} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.datasync.v1.UploadMetadata, 1));
};


/**
 * @param {?proto.viam.app.datasync.v1.UploadMetadata|undefined} value
 * @return {!proto.viam.app.datasync.v1.UploadRequest} returns this
*/
proto.viam.app.datasync.v1.UploadRequest.prototype.setMetadata = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.viam.app.datasync.v1.UploadRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.datasync.v1.UploadRequest} returns this
 */
proto.viam.app.datasync.v1.UploadRequest.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.datasync.v1.UploadRequest.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SensorData sensor_contents = 2;
 * @return {?proto.viam.app.datasync.v1.SensorData}
 */
proto.viam.app.datasync.v1.UploadRequest.prototype.getSensorContents = function() {
  return /** @type{?proto.viam.app.datasync.v1.SensorData} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.datasync.v1.SensorData, 2));
};


/**
 * @param {?proto.viam.app.datasync.v1.SensorData|undefined} value
 * @return {!proto.viam.app.datasync.v1.UploadRequest} returns this
*/
proto.viam.app.datasync.v1.UploadRequest.prototype.setSensorContents = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.viam.app.datasync.v1.UploadRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.datasync.v1.UploadRequest} returns this
 */
proto.viam.app.datasync.v1.UploadRequest.prototype.clearSensorContents = function() {
  return this.setSensorContents(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.datasync.v1.UploadRequest.prototype.hasSensorContents = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FileData file_contents = 3;
 * @return {?proto.viam.app.datasync.v1.FileData}
 */
proto.viam.app.datasync.v1.UploadRequest.prototype.getFileContents = function() {
  return /** @type{?proto.viam.app.datasync.v1.FileData} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.datasync.v1.FileData, 3));
};


/**
 * @param {?proto.viam.app.datasync.v1.FileData|undefined} value
 * @return {!proto.viam.app.datasync.v1.UploadRequest} returns this
*/
proto.viam.app.datasync.v1.UploadRequest.prototype.setFileContents = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.viam.app.datasync.v1.UploadRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.datasync.v1.UploadRequest} returns this
 */
proto.viam.app.datasync.v1.UploadRequest.prototype.clearFileContents = function() {
  return this.setFileContents(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.datasync.v1.UploadRequest.prototype.hasFileContents = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.datasync.v1.UploadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.datasync.v1.UploadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.datasync.v1.UploadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.UploadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestsWritten: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.datasync.v1.UploadResponse}
 */
proto.viam.app.datasync.v1.UploadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.datasync.v1.UploadResponse;
  return proto.viam.app.datasync.v1.UploadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.datasync.v1.UploadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.datasync.v1.UploadResponse}
 */
proto.viam.app.datasync.v1.UploadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRequestsWritten(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.datasync.v1.UploadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.datasync.v1.UploadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.datasync.v1.UploadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.UploadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestsWritten();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 requests_written = 1;
 * @return {number}
 */
proto.viam.app.datasync.v1.UploadResponse.prototype.getRequestsWritten = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.datasync.v1.UploadResponse} returns this
 */
proto.viam.app.datasync.v1.UploadResponse.prototype.setRequestsWritten = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.datasync.v1.CaptureInterval.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.datasync.v1.CaptureInterval.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.datasync.v1.CaptureInterval} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.CaptureInterval.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: (f = msg.getStart()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    end: (f = msg.getEnd()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.datasync.v1.CaptureInterval}
 */
proto.viam.app.datasync.v1.CaptureInterval.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.datasync.v1.CaptureInterval;
  return proto.viam.app.datasync.v1.CaptureInterval.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.datasync.v1.CaptureInterval} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.datasync.v1.CaptureInterval}
 */
proto.viam.app.datasync.v1.CaptureInterval.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStart(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.datasync.v1.CaptureInterval.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.datasync.v1.CaptureInterval.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.datasync.v1.CaptureInterval} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.CaptureInterval.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEnd();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp start = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.viam.app.datasync.v1.CaptureInterval.prototype.getStart = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.viam.app.datasync.v1.CaptureInterval} returns this
*/
proto.viam.app.datasync.v1.CaptureInterval.prototype.setStart = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.datasync.v1.CaptureInterval} returns this
 */
proto.viam.app.datasync.v1.CaptureInterval.prototype.clearStart = function() {
  return this.setStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.datasync.v1.CaptureInterval.prototype.hasStart = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp end = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.viam.app.datasync.v1.CaptureInterval.prototype.getEnd = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.viam.app.datasync.v1.CaptureInterval} returns this
*/
proto.viam.app.datasync.v1.CaptureInterval.prototype.setEnd = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.datasync.v1.CaptureInterval} returns this
 */
proto.viam.app.datasync.v1.CaptureInterval.prototype.clearEnd = function() {
  return this.setEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.datasync.v1.CaptureInterval.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.datasync.v1.DataCaptureMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.datasync.v1.DataCaptureMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    componentType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    componentName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    componentModel: jspb.Message.getFieldWithDefault(msg, 3, ""),
    methodName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    type: jspb.Message.getFieldWithDefault(msg, 5, 0),
    methodParametersMap: (f = msg.getMethodParametersMap()) ? f.toObject(includeInstance, proto.google.protobuf.Any.toObject) : [],
    fileExtension: jspb.Message.getFieldWithDefault(msg, 7, ""),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    sessionId: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.datasync.v1.DataCaptureMetadata}
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.datasync.v1.DataCaptureMetadata;
  return proto.viam.app.datasync.v1.DataCaptureMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.datasync.v1.DataCaptureMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.datasync.v1.DataCaptureMetadata}
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentModel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethodName(value);
      break;
    case 5:
      var value = /** @type {!proto.viam.app.datasync.v1.DataType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 6:
      var value = msg.getMethodParametersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Any.deserializeBinaryFromReader, "", new proto.google.protobuf.Any());
         });
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileExtension(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.datasync.v1.DataCaptureMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.datasync.v1.DataCaptureMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getComponentType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getComponentName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getComponentModel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMethodName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getMethodParametersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Any.serializeBinaryToWriter);
  }
  f = message.getFileExtension();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string component_type = 1;
 * @return {string}
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.getComponentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.DataCaptureMetadata} returns this
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.setComponentType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string component_name = 2;
 * @return {string}
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.getComponentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.DataCaptureMetadata} returns this
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.setComponentName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string component_model = 3;
 * @return {string}
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.getComponentModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.DataCaptureMetadata} returns this
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.setComponentModel = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string method_name = 4;
 * @return {string}
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.getMethodName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.DataCaptureMetadata} returns this
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.setMethodName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional DataType type = 5;
 * @return {!proto.viam.app.datasync.v1.DataType}
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.getType = function() {
  return /** @type {!proto.viam.app.datasync.v1.DataType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.viam.app.datasync.v1.DataType} value
 * @return {!proto.viam.app.datasync.v1.DataCaptureMetadata} returns this
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * map<string, google.protobuf.Any> method_parameters = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Any>}
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.getMethodParametersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Any>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      proto.google.protobuf.Any));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.viam.app.datasync.v1.DataCaptureMetadata} returns this
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.clearMethodParametersMap = function() {
  this.getMethodParametersMap().clear();
  return this;};


/**
 * optional string file_extension = 7;
 * @return {string}
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.getFileExtension = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.DataCaptureMetadata} returns this
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.setFileExtension = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated string tags = 8;
 * @return {!Array<string>}
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.viam.app.datasync.v1.DataCaptureMetadata} returns this
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.viam.app.datasync.v1.DataCaptureMetadata} returns this
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.datasync.v1.DataCaptureMetadata} returns this
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional string session_id = 9;
 * @return {string}
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.DataCaptureMetadata} returns this
 */
proto.viam.app.datasync.v1.DataCaptureMetadata.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.app.datasync.v1.TabularCapture.repeatedFields_ = [11,14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.datasync.v1.TabularCapture.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.datasync.v1.TabularCapture} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.TabularCapture.toObject = function(includeInstance, msg) {
  var f, obj = {
    interval: (f = msg.getInterval()) && proto.viam.app.datasync.v1.CaptureInterval.toObject(includeInstance, f),
    orgId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    robotId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    partId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    locationId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    componentName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    componentType: jspb.Message.getFieldWithDefault(msg, 7, ""),
    componentModel: jspb.Message.getFieldWithDefault(msg, 8, ""),
    methodName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    blobPath: jspb.Message.getFieldWithDefault(msg, 10, ""),
    columnNamesList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    methodParametersMap: (f = msg.getMethodParametersMap()) ? f.toObject(includeInstance, proto.google.protobuf.Any.toObject) : [],
    fileId: jspb.Message.getFieldWithDefault(msg, 13, ""),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
    messageCount: jspb.Message.getFieldWithDefault(msg, 15, 0),
    fileSizeBytes: jspb.Message.getFieldWithDefault(msg, 16, 0),
    sessionId: jspb.Message.getFieldWithDefault(msg, 17, ""),
    mimeType: jspb.Message.getFieldWithDefault(msg, 18, ""),
    id: jspb.Message.getFieldWithDefault(msg, 19, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.datasync.v1.TabularCapture}
 */
proto.viam.app.datasync.v1.TabularCapture.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.datasync.v1.TabularCapture;
  return proto.viam.app.datasync.v1.TabularCapture.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.datasync.v1.TabularCapture} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.datasync.v1.TabularCapture}
 */
proto.viam.app.datasync.v1.TabularCapture.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.app.datasync.v1.CaptureInterval;
      reader.readMessage(value,proto.viam.app.datasync.v1.CaptureInterval.deserializeBinaryFromReader);
      msg.setInterval(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRobotId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentType(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentModel(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethodName(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlobPath(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addColumnNames(value);
      break;
    case 12:
      var value = msg.getMethodParametersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Any.deserializeBinaryFromReader, "", new proto.google.protobuf.Any());
         });
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileId(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMessageCount(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFileSizeBytes(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setMimeType(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.datasync.v1.TabularCapture.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.datasync.v1.TabularCapture} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.TabularCapture.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInterval();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.viam.app.datasync.v1.CaptureInterval.serializeBinaryToWriter
    );
  }
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRobotId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPartId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLocationId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getComponentName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getComponentType();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getComponentModel();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getMethodName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getBlobPath();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getColumnNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getMethodParametersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(12, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Any.serializeBinaryToWriter);
  }
  f = message.getFileId();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
  f = message.getMessageCount();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getFileSizeBytes();
  if (f !== 0) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getMimeType();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
};


/**
 * optional CaptureInterval interval = 1;
 * @return {?proto.viam.app.datasync.v1.CaptureInterval}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.getInterval = function() {
  return /** @type{?proto.viam.app.datasync.v1.CaptureInterval} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.datasync.v1.CaptureInterval, 1));
};


/**
 * @param {?proto.viam.app.datasync.v1.CaptureInterval|undefined} value
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
*/
proto.viam.app.datasync.v1.TabularCapture.prototype.setInterval = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.clearInterval = function() {
  return this.setInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.hasInterval = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string org_id = 2;
 * @return {string}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.setOrgId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string robot_id = 3;
 * @return {string}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.getRobotId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.setRobotId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string part_id = 4;
 * @return {string}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.getPartId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.setPartId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string location_id = 5;
 * @return {string}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.getLocationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.setLocationId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string component_name = 6;
 * @return {string}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.getComponentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.setComponentName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string component_type = 7;
 * @return {string}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.getComponentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.setComponentType = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string component_model = 8;
 * @return {string}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.getComponentModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.setComponentModel = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string method_name = 9;
 * @return {string}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.getMethodName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.setMethodName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string blob_path = 10;
 * @return {string}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.getBlobPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.setBlobPath = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated string column_names = 11;
 * @return {!Array<string>}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.getColumnNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.setColumnNamesList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.addColumnNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.clearColumnNamesList = function() {
  return this.setColumnNamesList([]);
};


/**
 * map<string, google.protobuf.Any> method_parameters = 12;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Any>}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.getMethodParametersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Any>} */ (
      jspb.Message.getMapField(this, 12, opt_noLazyCreate,
      proto.google.protobuf.Any));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.clearMethodParametersMap = function() {
  this.getMethodParametersMap().clear();
  return this;};


/**
 * optional string file_id = 13;
 * @return {string}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.getFileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.setFileId = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * repeated string tags = 14;
 * @return {!Array<string>}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional int32 message_count = 15;
 * @return {number}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.getMessageCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.setMessageCount = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int64 file_size_bytes = 16;
 * @return {number}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.getFileSizeBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.setFileSizeBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional string session_id = 17;
 * @return {string}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string mime_type = 18;
 * @return {string}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.getMimeType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.setMimeType = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string id = 19;
 * @return {string}
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.TabularCapture} returns this
 */
proto.viam.app.datasync.v1.TabularCapture.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.app.datasync.v1.BinaryCapture.repeatedFields_ = [13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.datasync.v1.BinaryCapture.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.datasync.v1.BinaryCapture} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.BinaryCapture.toObject = function(includeInstance, msg) {
  var f, obj = {
    interval: (f = msg.getInterval()) && proto.viam.app.datasync.v1.CaptureInterval.toObject(includeInstance, f),
    orgId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    robotId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    partId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    locationId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    componentName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    componentType: jspb.Message.getFieldWithDefault(msg, 7, ""),
    componentModel: jspb.Message.getFieldWithDefault(msg, 8, ""),
    methodName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    blobPath: jspb.Message.getFieldWithDefault(msg, 10, ""),
    methodParametersMap: (f = msg.getMethodParametersMap()) ? f.toObject(includeInstance, proto.google.protobuf.Any.toObject) : [],
    fileId: jspb.Message.getFieldWithDefault(msg, 12, ""),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    fileSizeBytes: jspb.Message.getFieldWithDefault(msg, 14, 0),
    sessionId: jspb.Message.getFieldWithDefault(msg, 15, ""),
    mimeType: jspb.Message.getFieldWithDefault(msg, 16, ""),
    fileName: jspb.Message.getFieldWithDefault(msg, 17, ""),
    fileExt: jspb.Message.getFieldWithDefault(msg, 18, ""),
    id: jspb.Message.getFieldWithDefault(msg, 19, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.datasync.v1.BinaryCapture}
 */
proto.viam.app.datasync.v1.BinaryCapture.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.datasync.v1.BinaryCapture;
  return proto.viam.app.datasync.v1.BinaryCapture.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.datasync.v1.BinaryCapture} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.datasync.v1.BinaryCapture}
 */
proto.viam.app.datasync.v1.BinaryCapture.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.app.datasync.v1.CaptureInterval;
      reader.readMessage(value,proto.viam.app.datasync.v1.CaptureInterval.deserializeBinaryFromReader);
      msg.setInterval(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRobotId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentType(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentModel(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethodName(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlobPath(value);
      break;
    case 11:
      var value = msg.getMethodParametersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Any.deserializeBinaryFromReader, "", new proto.google.protobuf.Any());
         });
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFileSizeBytes(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setMimeType(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileExt(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.datasync.v1.BinaryCapture.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.datasync.v1.BinaryCapture} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.datasync.v1.BinaryCapture.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInterval();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.viam.app.datasync.v1.CaptureInterval.serializeBinaryToWriter
    );
  }
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRobotId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPartId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLocationId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getComponentName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getComponentType();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getComponentModel();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getMethodName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getBlobPath();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getMethodParametersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Any.serializeBinaryToWriter);
  }
  f = message.getFileId();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      13,
      f
    );
  }
  f = message.getFileSizeBytes();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getMimeType();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getFileExt();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
};


/**
 * optional CaptureInterval interval = 1;
 * @return {?proto.viam.app.datasync.v1.CaptureInterval}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.getInterval = function() {
  return /** @type{?proto.viam.app.datasync.v1.CaptureInterval} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.datasync.v1.CaptureInterval, 1));
};


/**
 * @param {?proto.viam.app.datasync.v1.CaptureInterval|undefined} value
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
*/
proto.viam.app.datasync.v1.BinaryCapture.prototype.setInterval = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.clearInterval = function() {
  return this.setInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.hasInterval = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string org_id = 2;
 * @return {string}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.setOrgId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string robot_id = 3;
 * @return {string}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.getRobotId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.setRobotId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string part_id = 4;
 * @return {string}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.getPartId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.setPartId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string location_id = 5;
 * @return {string}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.getLocationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.setLocationId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string component_name = 6;
 * @return {string}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.getComponentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.setComponentName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string component_type = 7;
 * @return {string}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.getComponentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.setComponentType = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string component_model = 8;
 * @return {string}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.getComponentModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.setComponentModel = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string method_name = 9;
 * @return {string}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.getMethodName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.setMethodName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string blob_path = 10;
 * @return {string}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.getBlobPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.setBlobPath = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * map<string, google.protobuf.Any> method_parameters = 11;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Any>}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.getMethodParametersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Any>} */ (
      jspb.Message.getMapField(this, 11, opt_noLazyCreate,
      proto.google.protobuf.Any));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.clearMethodParametersMap = function() {
  this.getMethodParametersMap().clear();
  return this;};


/**
 * optional string file_id = 12;
 * @return {string}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.getFileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.setFileId = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * repeated string tags = 13;
 * @return {!Array<string>}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional int64 file_size_bytes = 14;
 * @return {number}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.getFileSizeBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.setFileSizeBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional string session_id = 15;
 * @return {string}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string mime_type = 16;
 * @return {string}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.getMimeType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.setMimeType = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string file_name = 17;
 * @return {string}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.setFileName = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string file_ext = 18;
 * @return {string}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.getFileExt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.setFileExt = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string id = 19;
 * @return {string}
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.datasync.v1.BinaryCapture} returns this
 */
proto.viam.app.datasync.v1.BinaryCapture.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * @enum {number}
 */
proto.viam.app.datasync.v1.DataType = {
  DATA_TYPE_UNSPECIFIED: 0,
  DATA_TYPE_BINARY_SENSOR: 1,
  DATA_TYPE_TABULAR_SENSOR: 2,
  DATA_TYPE_FILE: 3
};

goog.object.extend(exports, proto.viam.app.datasync.v1);
