syntax = "proto3";

package viam.component.gripper.v1;

import "common/v1/common.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";

option go_package = "go.viam.com/api/component/gripper/v1";
option java_package = "com.viam.component.gripper.v1";

// An GripperService services all grippers associated with a robot
service GripperService {
  // Open opens a gripper of the underlying robot.
  rpc Open(OpenRequest) returns (OpenResponse) {
    option (common.v1.safety_heartbeat_monitored) = true;
    option (google.api.http) = {
      put: "/viam/api/v1/component/gripper/{name}/open"
    };
  }

  // Grab requests a gripper of the underlying robot to grab.
  rpc Grab(GrabRequest) returns (GrabResponse) {
    option (common.v1.safety_heartbeat_monitored) = true;
    option (google.api.http) = {
      put: "/viam/api/v1/component/gripper/{name}/grab"
    };
  }

  // Stop stops a robot's gripper
  rpc Stop(StopRequest) returns (StopResponse) {
    option (google.api.http) = {
      post: "/viam/api/v1/component/gripper/{name}/stop"
    };
  }

  // IsMoving reports if a component is in motion
  rpc IsMoving(IsMovingRequest) returns (IsMovingResponse) {
    option (google.api.http) = {
      get: "/viam/api/v1/component/gripper/{name}/is_moving"
    };
  }

  // DoCommand sends/receives arbitrary commands
  rpc DoCommand(common.v1.DoCommandRequest) returns (common.v1.DoCommandResponse) {
    option (google.api.http) = {
      post: "/viam/api/v1/component/gripper/{name}/do_command"
    };
  }

  // GetGeometries returns the geometries of the component in their current configuration
  rpc GetGeometries(common.v1.GetGeometriesRequest) returns (common.v1.GetGeometriesResponse) {
    option (google.api.http) = {
      get: "/viam/api/v1/component/gripper/{name}/geometries"
    };
  }
}

message OpenRequest {
  string name = 1;
  google.protobuf.Struct extra = 99;
}

message OpenResponse {}

message GrabRequest {
  string name = 1;
  google.protobuf.Struct extra = 99;
}

message GrabResponse {
  bool success = 1;
  google.protobuf.Struct extra = 99;
}

message StopRequest {
  // Name of a gripper
  string name = 1;
  google.protobuf.Struct extra = 99;
}

message StopResponse {}

message IsMovingRequest {
  string name = 1;
}

message IsMovingResponse {
  bool is_moving = 1;
}
