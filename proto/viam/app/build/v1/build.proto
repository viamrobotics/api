syntax = "proto3";

package viam.app.build.v1;

import "google/protobuf/timestamp.proto";

option go_package = "go.viam.com/api/app/build/v1";

// Note on ID types:
// build_id: the 'parent' ID for a set of builds of module@version. builds contain multiple jobs. This ID is globally unique.

// 2023-11-28: Unstable API. Will change.
service BuildService {
  rpc StartBuild(StartBuildRequest) returns (StartBuildResponse);
  rpc GetLogs(GetLogsRequest) returns (stream GetLogsResponse);
  rpc ListJobs(ListJobsRequest) returns (ListJobsResponse);
}

message StartBuildRequest {
  // repo to build
  optional string repo = 1;
  // optional git ref; defaults to 'main'
  optional string ref = 2;
  repeated string platform = 3;
  // module_id as prefix:name pair
  string module_id = 4;
}

message StartBuildResponse {
  string build_id = 1;
}

message GetLogsRequest {
  string build_id = 1;
  string platform = 2;
}

// GetLogsResponse is a streaming endpoint that may have multiple messages that belong
// to the same build_step if there are too many bytes to fit into a single gRPC
// response
message GetLogsResponse {
  string build_step = 1;
  // includes multiple lines delimited by \n\r
  string data = 2;
}

enum JobStatus {
  JOB_STATUS_UNSPECIFIED = 0;
  // IN_PROGRESS = executing on cloud infra. Artifact has not been uploaded
  JOB_STATUS_IN_PROGRESS = 1;
  JOB_STATUS_FAILED = 2;
  JOB_STATUS_DONE = 3;
}

message JobInfo {
  string build_id = 1;
  string platform = 2;
  string version = 3;
  JobStatus status = 4;
  google.protobuf.Timestamp start_time = 5;
  optional google.protobuf.Timestamp end_time = 6;
}

message ListJobsRequest {
  // module_id as prefix:name pair
  string module_id = 1;
  // don't return more than max_jobs_length jobs
  // if not present, return all jobs
  optional int32 max_jobs_length = 2;
}

message ListJobsResponse {
  // jobs should be sorted from earliest starting time -> latest starting time
  repeated JobInfo jobs = 1;
}
