// source: service/vision/v1/vision.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var common_v1_common_pb = require('../../../common/v1/common_pb.js');
goog.object.extend(proto, common_v1_common_pb);
var component_camera_v1_camera_pb = require('../../../component/camera/v1/camera_pb.js');
goog.object.extend(proto, component_camera_v1_camera_pb);
var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.viam.service.vision.v1.CaptureAllFromCameraRequest', null, global);
goog.exportSymbol('proto.viam.service.vision.v1.CaptureAllFromCameraResponse', null, global);
goog.exportSymbol('proto.viam.service.vision.v1.Classification', null, global);
goog.exportSymbol('proto.viam.service.vision.v1.Detection', null, global);
goog.exportSymbol('proto.viam.service.vision.v1.GetClassificationsFromCameraRequest', null, global);
goog.exportSymbol('proto.viam.service.vision.v1.GetClassificationsFromCameraResponse', null, global);
goog.exportSymbol('proto.viam.service.vision.v1.GetClassificationsRequest', null, global);
goog.exportSymbol('proto.viam.service.vision.v1.GetClassificationsResponse', null, global);
goog.exportSymbol('proto.viam.service.vision.v1.GetDetectionsFromCameraRequest', null, global);
goog.exportSymbol('proto.viam.service.vision.v1.GetDetectionsFromCameraResponse', null, global);
goog.exportSymbol('proto.viam.service.vision.v1.GetDetectionsRequest', null, global);
goog.exportSymbol('proto.viam.service.vision.v1.GetDetectionsResponse', null, global);
goog.exportSymbol('proto.viam.service.vision.v1.GetObjectPointCloudsRequest', null, global);
goog.exportSymbol('proto.viam.service.vision.v1.GetObjectPointCloudsResponse', null, global);
goog.exportSymbol('proto.viam.service.vision.v1.GetPropertiesRequest', null, global);
goog.exportSymbol('proto.viam.service.vision.v1.GetPropertiesResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.vision.v1.GetDetectionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.vision.v1.GetDetectionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.vision.v1.GetDetectionsRequest.displayName = 'proto.viam.service.vision.v1.GetDetectionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.vision.v1.GetDetectionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.vision.v1.GetDetectionsResponse.repeatedFields_, null);
};
goog.inherits(proto.viam.service.vision.v1.GetDetectionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.vision.v1.GetDetectionsResponse.displayName = 'proto.viam.service.vision.v1.GetDetectionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.vision.v1.GetDetectionsFromCameraRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.vision.v1.GetDetectionsFromCameraRequest.displayName = 'proto.viam.service.vision.v1.GetDetectionsFromCameraRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.vision.v1.GetDetectionsFromCameraResponse.repeatedFields_, null);
};
goog.inherits(proto.viam.service.vision.v1.GetDetectionsFromCameraResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.vision.v1.GetDetectionsFromCameraResponse.displayName = 'proto.viam.service.vision.v1.GetDetectionsFromCameraResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.vision.v1.Detection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.vision.v1.Detection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.vision.v1.Detection.displayName = 'proto.viam.service.vision.v1.Detection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.vision.v1.GetClassificationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.vision.v1.GetClassificationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.vision.v1.GetClassificationsRequest.displayName = 'proto.viam.service.vision.v1.GetClassificationsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.vision.v1.GetClassificationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.vision.v1.GetClassificationsResponse.repeatedFields_, null);
};
goog.inherits(proto.viam.service.vision.v1.GetClassificationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.vision.v1.GetClassificationsResponse.displayName = 'proto.viam.service.vision.v1.GetClassificationsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.vision.v1.GetClassificationsFromCameraRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.displayName = 'proto.viam.service.vision.v1.GetClassificationsFromCameraRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.vision.v1.GetClassificationsFromCameraResponse.repeatedFields_, null);
};
goog.inherits(proto.viam.service.vision.v1.GetClassificationsFromCameraResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.vision.v1.GetClassificationsFromCameraResponse.displayName = 'proto.viam.service.vision.v1.GetClassificationsFromCameraResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.vision.v1.Classification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.vision.v1.Classification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.vision.v1.Classification.displayName = 'proto.viam.service.vision.v1.Classification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.vision.v1.GetObjectPointCloudsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.vision.v1.GetObjectPointCloudsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.vision.v1.GetObjectPointCloudsRequest.displayName = 'proto.viam.service.vision.v1.GetObjectPointCloudsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.vision.v1.GetObjectPointCloudsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.vision.v1.GetObjectPointCloudsResponse.repeatedFields_, null);
};
goog.inherits(proto.viam.service.vision.v1.GetObjectPointCloudsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.vision.v1.GetObjectPointCloudsResponse.displayName = 'proto.viam.service.vision.v1.GetObjectPointCloudsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.vision.v1.GetPropertiesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.vision.v1.GetPropertiesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.vision.v1.GetPropertiesRequest.displayName = 'proto.viam.service.vision.v1.GetPropertiesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.vision.v1.CaptureAllFromCameraRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.vision.v1.CaptureAllFromCameraRequest.displayName = 'proto.viam.service.vision.v1.CaptureAllFromCameraRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.vision.v1.CaptureAllFromCameraResponse.repeatedFields_, null);
};
goog.inherits(proto.viam.service.vision.v1.CaptureAllFromCameraResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.vision.v1.CaptureAllFromCameraResponse.displayName = 'proto.viam.service.vision.v1.CaptureAllFromCameraResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.vision.v1.GetPropertiesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.vision.v1.GetPropertiesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.vision.v1.GetPropertiesResponse.displayName = 'proto.viam.service.vision.v1.GetPropertiesResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.vision.v1.GetDetectionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.vision.v1.GetDetectionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.vision.v1.GetDetectionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetDetectionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    image: msg.getImage_asB64(),
    width: jspb.Message.getFieldWithDefault(msg, 3, 0),
    height: jspb.Message.getFieldWithDefault(msg, 4, 0),
    mimeType: jspb.Message.getFieldWithDefault(msg, 5, ""),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.vision.v1.GetDetectionsRequest}
 */
proto.viam.service.vision.v1.GetDetectionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.vision.v1.GetDetectionsRequest;
  return proto.viam.service.vision.v1.GetDetectionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.vision.v1.GetDetectionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.vision.v1.GetDetectionsRequest}
 */
proto.viam.service.vision.v1.GetDetectionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setImage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setWidth(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHeight(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMimeType(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.vision.v1.GetDetectionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.vision.v1.GetDetectionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.vision.v1.GetDetectionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetDetectionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getImage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getMimeType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.vision.v1.GetDetectionsRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.vision.v1.GetDetectionsRequest} returns this
 */
proto.viam.service.vision.v1.GetDetectionsRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes image = 2;
 * @return {string}
 */
proto.viam.service.vision.v1.GetDetectionsRequest.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes image = 2;
 * This is a type-conversion wrapper around `getImage()`
 * @return {string}
 */
proto.viam.service.vision.v1.GetDetectionsRequest.prototype.getImage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getImage()));
};


/**
 * optional bytes image = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImage()`
 * @return {!Uint8Array}
 */
proto.viam.service.vision.v1.GetDetectionsRequest.prototype.getImage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getImage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.viam.service.vision.v1.GetDetectionsRequest} returns this
 */
proto.viam.service.vision.v1.GetDetectionsRequest.prototype.setImage = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional int64 width = 3;
 * @return {number}
 */
proto.viam.service.vision.v1.GetDetectionsRequest.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.vision.v1.GetDetectionsRequest} returns this
 */
proto.viam.service.vision.v1.GetDetectionsRequest.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 height = 4;
 * @return {number}
 */
proto.viam.service.vision.v1.GetDetectionsRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.vision.v1.GetDetectionsRequest} returns this
 */
proto.viam.service.vision.v1.GetDetectionsRequest.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string mime_type = 5;
 * @return {string}
 */
proto.viam.service.vision.v1.GetDetectionsRequest.prototype.getMimeType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.vision.v1.GetDetectionsRequest} returns this
 */
proto.viam.service.vision.v1.GetDetectionsRequest.prototype.setMimeType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.vision.v1.GetDetectionsRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.vision.v1.GetDetectionsRequest} returns this
*/
proto.viam.service.vision.v1.GetDetectionsRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.vision.v1.GetDetectionsRequest} returns this
 */
proto.viam.service.vision.v1.GetDetectionsRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.vision.v1.GetDetectionsRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.vision.v1.GetDetectionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.vision.v1.GetDetectionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.vision.v1.GetDetectionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.vision.v1.GetDetectionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetDetectionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    detectionsList: jspb.Message.toObjectList(msg.getDetectionsList(),
    proto.viam.service.vision.v1.Detection.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.vision.v1.GetDetectionsResponse}
 */
proto.viam.service.vision.v1.GetDetectionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.vision.v1.GetDetectionsResponse;
  return proto.viam.service.vision.v1.GetDetectionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.vision.v1.GetDetectionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.vision.v1.GetDetectionsResponse}
 */
proto.viam.service.vision.v1.GetDetectionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.service.vision.v1.Detection;
      reader.readMessage(value,proto.viam.service.vision.v1.Detection.deserializeBinaryFromReader);
      msg.addDetections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.vision.v1.GetDetectionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.vision.v1.GetDetectionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.vision.v1.GetDetectionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetDetectionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDetectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.viam.service.vision.v1.Detection.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Detection detections = 1;
 * @return {!Array<!proto.viam.service.vision.v1.Detection>}
 */
proto.viam.service.vision.v1.GetDetectionsResponse.prototype.getDetectionsList = function() {
  return /** @type{!Array<!proto.viam.service.vision.v1.Detection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.service.vision.v1.Detection, 1));
};


/**
 * @param {!Array<!proto.viam.service.vision.v1.Detection>} value
 * @return {!proto.viam.service.vision.v1.GetDetectionsResponse} returns this
*/
proto.viam.service.vision.v1.GetDetectionsResponse.prototype.setDetectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.viam.service.vision.v1.Detection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.service.vision.v1.Detection}
 */
proto.viam.service.vision.v1.GetDetectionsResponse.prototype.addDetections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.viam.service.vision.v1.Detection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.vision.v1.GetDetectionsResponse} returns this
 */
proto.viam.service.vision.v1.GetDetectionsResponse.prototype.clearDetectionsList = function() {
  return this.setDetectionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.vision.v1.GetDetectionsFromCameraRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.vision.v1.GetDetectionsFromCameraRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cameraName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.vision.v1.GetDetectionsFromCameraRequest}
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.vision.v1.GetDetectionsFromCameraRequest;
  return proto.viam.service.vision.v1.GetDetectionsFromCameraRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.vision.v1.GetDetectionsFromCameraRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.vision.v1.GetDetectionsFromCameraRequest}
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCameraName(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.vision.v1.GetDetectionsFromCameraRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.vision.v1.GetDetectionsFromCameraRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCameraName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.vision.v1.GetDetectionsFromCameraRequest} returns this
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string camera_name = 2;
 * @return {string}
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraRequest.prototype.getCameraName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.vision.v1.GetDetectionsFromCameraRequest} returns this
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraRequest.prototype.setCameraName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.vision.v1.GetDetectionsFromCameraRequest} returns this
*/
proto.viam.service.vision.v1.GetDetectionsFromCameraRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.vision.v1.GetDetectionsFromCameraRequest} returns this
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.vision.v1.GetDetectionsFromCameraResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.vision.v1.GetDetectionsFromCameraResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    detectionsList: jspb.Message.toObjectList(msg.getDetectionsList(),
    proto.viam.service.vision.v1.Detection.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.vision.v1.GetDetectionsFromCameraResponse}
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.vision.v1.GetDetectionsFromCameraResponse;
  return proto.viam.service.vision.v1.GetDetectionsFromCameraResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.vision.v1.GetDetectionsFromCameraResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.vision.v1.GetDetectionsFromCameraResponse}
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.service.vision.v1.Detection;
      reader.readMessage(value,proto.viam.service.vision.v1.Detection.deserializeBinaryFromReader);
      msg.addDetections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.vision.v1.GetDetectionsFromCameraResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.vision.v1.GetDetectionsFromCameraResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDetectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.viam.service.vision.v1.Detection.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Detection detections = 1;
 * @return {!Array<!proto.viam.service.vision.v1.Detection>}
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraResponse.prototype.getDetectionsList = function() {
  return /** @type{!Array<!proto.viam.service.vision.v1.Detection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.service.vision.v1.Detection, 1));
};


/**
 * @param {!Array<!proto.viam.service.vision.v1.Detection>} value
 * @return {!proto.viam.service.vision.v1.GetDetectionsFromCameraResponse} returns this
*/
proto.viam.service.vision.v1.GetDetectionsFromCameraResponse.prototype.setDetectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.viam.service.vision.v1.Detection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.service.vision.v1.Detection}
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraResponse.prototype.addDetections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.viam.service.vision.v1.Detection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.vision.v1.GetDetectionsFromCameraResponse} returns this
 */
proto.viam.service.vision.v1.GetDetectionsFromCameraResponse.prototype.clearDetectionsList = function() {
  return this.setDetectionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.vision.v1.Detection.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.vision.v1.Detection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.vision.v1.Detection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.Detection.toObject = function(includeInstance, msg) {
  var f, obj = {
    xMin: jspb.Message.getFieldWithDefault(msg, 1, 0),
    yMin: jspb.Message.getFieldWithDefault(msg, 2, 0),
    xMax: jspb.Message.getFieldWithDefault(msg, 3, 0),
    yMax: jspb.Message.getFieldWithDefault(msg, 4, 0),
    confidence: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    className: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.vision.v1.Detection}
 */
proto.viam.service.vision.v1.Detection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.vision.v1.Detection;
  return proto.viam.service.vision.v1.Detection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.vision.v1.Detection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.vision.v1.Detection}
 */
proto.viam.service.vision.v1.Detection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setXMin(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setYMin(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setXMax(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setYMax(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setConfidence(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.vision.v1.Detection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.vision.v1.Detection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.vision.v1.Detection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.Detection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getConfidence();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getClassName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int64 x_min = 1;
 * @return {number}
 */
proto.viam.service.vision.v1.Detection.prototype.getXMin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.vision.v1.Detection} returns this
 */
proto.viam.service.vision.v1.Detection.prototype.setXMin = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.service.vision.v1.Detection} returns this
 */
proto.viam.service.vision.v1.Detection.prototype.clearXMin = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.vision.v1.Detection.prototype.hasXMin = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 y_min = 2;
 * @return {number}
 */
proto.viam.service.vision.v1.Detection.prototype.getYMin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.vision.v1.Detection} returns this
 */
proto.viam.service.vision.v1.Detection.prototype.setYMin = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.service.vision.v1.Detection} returns this
 */
proto.viam.service.vision.v1.Detection.prototype.clearYMin = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.vision.v1.Detection.prototype.hasYMin = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 x_max = 3;
 * @return {number}
 */
proto.viam.service.vision.v1.Detection.prototype.getXMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.vision.v1.Detection} returns this
 */
proto.viam.service.vision.v1.Detection.prototype.setXMax = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.service.vision.v1.Detection} returns this
 */
proto.viam.service.vision.v1.Detection.prototype.clearXMax = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.vision.v1.Detection.prototype.hasXMax = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 y_max = 4;
 * @return {number}
 */
proto.viam.service.vision.v1.Detection.prototype.getYMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.vision.v1.Detection} returns this
 */
proto.viam.service.vision.v1.Detection.prototype.setYMax = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.viam.service.vision.v1.Detection} returns this
 */
proto.viam.service.vision.v1.Detection.prototype.clearYMax = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.vision.v1.Detection.prototype.hasYMax = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double confidence = 5;
 * @return {number}
 */
proto.viam.service.vision.v1.Detection.prototype.getConfidence = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.vision.v1.Detection} returns this
 */
proto.viam.service.vision.v1.Detection.prototype.setConfidence = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional string class_name = 6;
 * @return {string}
 */
proto.viam.service.vision.v1.Detection.prototype.getClassName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.vision.v1.Detection} returns this
 */
proto.viam.service.vision.v1.Detection.prototype.setClassName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.vision.v1.GetClassificationsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.vision.v1.GetClassificationsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetClassificationsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    image: msg.getImage_asB64(),
    width: jspb.Message.getFieldWithDefault(msg, 3, 0),
    height: jspb.Message.getFieldWithDefault(msg, 4, 0),
    mimeType: jspb.Message.getFieldWithDefault(msg, 5, ""),
    n: jspb.Message.getFieldWithDefault(msg, 6, 0),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.vision.v1.GetClassificationsRequest}
 */
proto.viam.service.vision.v1.GetClassificationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.vision.v1.GetClassificationsRequest;
  return proto.viam.service.vision.v1.GetClassificationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.vision.v1.GetClassificationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.vision.v1.GetClassificationsRequest}
 */
proto.viam.service.vision.v1.GetClassificationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setImage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWidth(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMimeType(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setN(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.vision.v1.GetClassificationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.vision.v1.GetClassificationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetClassificationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getImage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getMimeType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getN();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.vision.v1.GetClassificationsRequest} returns this
 */
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes image = 2;
 * @return {string}
 */
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes image = 2;
 * This is a type-conversion wrapper around `getImage()`
 * @return {string}
 */
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.getImage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getImage()));
};


/**
 * optional bytes image = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImage()`
 * @return {!Uint8Array}
 */
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.getImage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getImage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.viam.service.vision.v1.GetClassificationsRequest} returns this
 */
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.setImage = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional int32 width = 3;
 * @return {number}
 */
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.vision.v1.GetClassificationsRequest} returns this
 */
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 height = 4;
 * @return {number}
 */
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.vision.v1.GetClassificationsRequest} returns this
 */
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string mime_type = 5;
 * @return {string}
 */
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.getMimeType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.vision.v1.GetClassificationsRequest} returns this
 */
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.setMimeType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 n = 6;
 * @return {number}
 */
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.getN = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.vision.v1.GetClassificationsRequest} returns this
 */
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.setN = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.vision.v1.GetClassificationsRequest} returns this
*/
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.vision.v1.GetClassificationsRequest} returns this
 */
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.vision.v1.GetClassificationsRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.vision.v1.GetClassificationsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.vision.v1.GetClassificationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.vision.v1.GetClassificationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.vision.v1.GetClassificationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetClassificationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    classificationsList: jspb.Message.toObjectList(msg.getClassificationsList(),
    proto.viam.service.vision.v1.Classification.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.vision.v1.GetClassificationsResponse}
 */
proto.viam.service.vision.v1.GetClassificationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.vision.v1.GetClassificationsResponse;
  return proto.viam.service.vision.v1.GetClassificationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.vision.v1.GetClassificationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.vision.v1.GetClassificationsResponse}
 */
proto.viam.service.vision.v1.GetClassificationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.service.vision.v1.Classification;
      reader.readMessage(value,proto.viam.service.vision.v1.Classification.deserializeBinaryFromReader);
      msg.addClassifications(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.vision.v1.GetClassificationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.vision.v1.GetClassificationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.vision.v1.GetClassificationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetClassificationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClassificationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.viam.service.vision.v1.Classification.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Classification classifications = 1;
 * @return {!Array<!proto.viam.service.vision.v1.Classification>}
 */
proto.viam.service.vision.v1.GetClassificationsResponse.prototype.getClassificationsList = function() {
  return /** @type{!Array<!proto.viam.service.vision.v1.Classification>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.service.vision.v1.Classification, 1));
};


/**
 * @param {!Array<!proto.viam.service.vision.v1.Classification>} value
 * @return {!proto.viam.service.vision.v1.GetClassificationsResponse} returns this
*/
proto.viam.service.vision.v1.GetClassificationsResponse.prototype.setClassificationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.viam.service.vision.v1.Classification=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.service.vision.v1.Classification}
 */
proto.viam.service.vision.v1.GetClassificationsResponse.prototype.addClassifications = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.viam.service.vision.v1.Classification, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.vision.v1.GetClassificationsResponse} returns this
 */
proto.viam.service.vision.v1.GetClassificationsResponse.prototype.clearClassificationsList = function() {
  return this.setClassificationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.vision.v1.GetClassificationsFromCameraRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cameraName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    n: jspb.Message.getFieldWithDefault(msg, 3, 0),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.vision.v1.GetClassificationsFromCameraRequest}
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.vision.v1.GetClassificationsFromCameraRequest;
  return proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.vision.v1.GetClassificationsFromCameraRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.vision.v1.GetClassificationsFromCameraRequest}
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCameraName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setN(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.vision.v1.GetClassificationsFromCameraRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCameraName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getN();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.vision.v1.GetClassificationsFromCameraRequest} returns this
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string camera_name = 2;
 * @return {string}
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.prototype.getCameraName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.vision.v1.GetClassificationsFromCameraRequest} returns this
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.prototype.setCameraName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 n = 3;
 * @return {number}
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.prototype.getN = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.vision.v1.GetClassificationsFromCameraRequest} returns this
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.prototype.setN = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.vision.v1.GetClassificationsFromCameraRequest} returns this
*/
proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.vision.v1.GetClassificationsFromCameraRequest} returns this
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.vision.v1.GetClassificationsFromCameraResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.vision.v1.GetClassificationsFromCameraResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    classificationsList: jspb.Message.toObjectList(msg.getClassificationsList(),
    proto.viam.service.vision.v1.Classification.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.vision.v1.GetClassificationsFromCameraResponse}
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.vision.v1.GetClassificationsFromCameraResponse;
  return proto.viam.service.vision.v1.GetClassificationsFromCameraResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.vision.v1.GetClassificationsFromCameraResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.vision.v1.GetClassificationsFromCameraResponse}
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.service.vision.v1.Classification;
      reader.readMessage(value,proto.viam.service.vision.v1.Classification.deserializeBinaryFromReader);
      msg.addClassifications(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.vision.v1.GetClassificationsFromCameraResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.vision.v1.GetClassificationsFromCameraResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClassificationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.viam.service.vision.v1.Classification.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Classification classifications = 1;
 * @return {!Array<!proto.viam.service.vision.v1.Classification>}
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraResponse.prototype.getClassificationsList = function() {
  return /** @type{!Array<!proto.viam.service.vision.v1.Classification>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.service.vision.v1.Classification, 1));
};


/**
 * @param {!Array<!proto.viam.service.vision.v1.Classification>} value
 * @return {!proto.viam.service.vision.v1.GetClassificationsFromCameraResponse} returns this
*/
proto.viam.service.vision.v1.GetClassificationsFromCameraResponse.prototype.setClassificationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.viam.service.vision.v1.Classification=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.service.vision.v1.Classification}
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraResponse.prototype.addClassifications = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.viam.service.vision.v1.Classification, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.vision.v1.GetClassificationsFromCameraResponse} returns this
 */
proto.viam.service.vision.v1.GetClassificationsFromCameraResponse.prototype.clearClassificationsList = function() {
  return this.setClassificationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.vision.v1.Classification.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.vision.v1.Classification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.vision.v1.Classification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.Classification.toObject = function(includeInstance, msg) {
  var f, obj = {
    className: jspb.Message.getFieldWithDefault(msg, 1, ""),
    confidence: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.vision.v1.Classification}
 */
proto.viam.service.vision.v1.Classification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.vision.v1.Classification;
  return proto.viam.service.vision.v1.Classification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.vision.v1.Classification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.vision.v1.Classification}
 */
proto.viam.service.vision.v1.Classification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.vision.v1.Classification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.vision.v1.Classification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.vision.v1.Classification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.Classification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClassName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional string class_name = 1;
 * @return {string}
 */
proto.viam.service.vision.v1.Classification.prototype.getClassName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.vision.v1.Classification} returns this
 */
proto.viam.service.vision.v1.Classification.prototype.setClassName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double confidence = 2;
 * @return {number}
 */
proto.viam.service.vision.v1.Classification.prototype.getConfidence = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.viam.service.vision.v1.Classification} returns this
 */
proto.viam.service.vision.v1.Classification.prototype.setConfidence = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.vision.v1.GetObjectPointCloudsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.vision.v1.GetObjectPointCloudsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.vision.v1.GetObjectPointCloudsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetObjectPointCloudsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cameraName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mimeType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.vision.v1.GetObjectPointCloudsRequest}
 */
proto.viam.service.vision.v1.GetObjectPointCloudsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.vision.v1.GetObjectPointCloudsRequest;
  return proto.viam.service.vision.v1.GetObjectPointCloudsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.vision.v1.GetObjectPointCloudsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.vision.v1.GetObjectPointCloudsRequest}
 */
proto.viam.service.vision.v1.GetObjectPointCloudsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCameraName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMimeType(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.vision.v1.GetObjectPointCloudsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.vision.v1.GetObjectPointCloudsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.vision.v1.GetObjectPointCloudsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetObjectPointCloudsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCameraName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMimeType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.vision.v1.GetObjectPointCloudsRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.vision.v1.GetObjectPointCloudsRequest} returns this
 */
proto.viam.service.vision.v1.GetObjectPointCloudsRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string camera_name = 2;
 * @return {string}
 */
proto.viam.service.vision.v1.GetObjectPointCloudsRequest.prototype.getCameraName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.vision.v1.GetObjectPointCloudsRequest} returns this
 */
proto.viam.service.vision.v1.GetObjectPointCloudsRequest.prototype.setCameraName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string mime_type = 3;
 * @return {string}
 */
proto.viam.service.vision.v1.GetObjectPointCloudsRequest.prototype.getMimeType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.vision.v1.GetObjectPointCloudsRequest} returns this
 */
proto.viam.service.vision.v1.GetObjectPointCloudsRequest.prototype.setMimeType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.vision.v1.GetObjectPointCloudsRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.vision.v1.GetObjectPointCloudsRequest} returns this
*/
proto.viam.service.vision.v1.GetObjectPointCloudsRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.vision.v1.GetObjectPointCloudsRequest} returns this
 */
proto.viam.service.vision.v1.GetObjectPointCloudsRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.vision.v1.GetObjectPointCloudsRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.vision.v1.GetObjectPointCloudsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.vision.v1.GetObjectPointCloudsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.vision.v1.GetObjectPointCloudsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.vision.v1.GetObjectPointCloudsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetObjectPointCloudsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    mimeType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    objectsList: jspb.Message.toObjectList(msg.getObjectsList(),
    common_v1_common_pb.PointCloudObject.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.vision.v1.GetObjectPointCloudsResponse}
 */
proto.viam.service.vision.v1.GetObjectPointCloudsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.vision.v1.GetObjectPointCloudsResponse;
  return proto.viam.service.vision.v1.GetObjectPointCloudsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.vision.v1.GetObjectPointCloudsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.vision.v1.GetObjectPointCloudsResponse}
 */
proto.viam.service.vision.v1.GetObjectPointCloudsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMimeType(value);
      break;
    case 2:
      var value = new common_v1_common_pb.PointCloudObject;
      reader.readMessage(value,common_v1_common_pb.PointCloudObject.deserializeBinaryFromReader);
      msg.addObjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.vision.v1.GetObjectPointCloudsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.vision.v1.GetObjectPointCloudsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.vision.v1.GetObjectPointCloudsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetObjectPointCloudsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMimeType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      common_v1_common_pb.PointCloudObject.serializeBinaryToWriter
    );
  }
};


/**
 * optional string mime_type = 1;
 * @return {string}
 */
proto.viam.service.vision.v1.GetObjectPointCloudsResponse.prototype.getMimeType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.vision.v1.GetObjectPointCloudsResponse} returns this
 */
proto.viam.service.vision.v1.GetObjectPointCloudsResponse.prototype.setMimeType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated viam.common.v1.PointCloudObject objects = 2;
 * @return {!Array<!proto.viam.common.v1.PointCloudObject>}
 */
proto.viam.service.vision.v1.GetObjectPointCloudsResponse.prototype.getObjectsList = function() {
  return /** @type{!Array<!proto.viam.common.v1.PointCloudObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_v1_common_pb.PointCloudObject, 2));
};


/**
 * @param {!Array<!proto.viam.common.v1.PointCloudObject>} value
 * @return {!proto.viam.service.vision.v1.GetObjectPointCloudsResponse} returns this
*/
proto.viam.service.vision.v1.GetObjectPointCloudsResponse.prototype.setObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.viam.common.v1.PointCloudObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.common.v1.PointCloudObject}
 */
proto.viam.service.vision.v1.GetObjectPointCloudsResponse.prototype.addObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.viam.common.v1.PointCloudObject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.vision.v1.GetObjectPointCloudsResponse} returns this
 */
proto.viam.service.vision.v1.GetObjectPointCloudsResponse.prototype.clearObjectsList = function() {
  return this.setObjectsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.vision.v1.GetPropertiesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.vision.v1.GetPropertiesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.vision.v1.GetPropertiesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetPropertiesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.vision.v1.GetPropertiesRequest}
 */
proto.viam.service.vision.v1.GetPropertiesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.vision.v1.GetPropertiesRequest;
  return proto.viam.service.vision.v1.GetPropertiesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.vision.v1.GetPropertiesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.vision.v1.GetPropertiesRequest}
 */
proto.viam.service.vision.v1.GetPropertiesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.vision.v1.GetPropertiesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.vision.v1.GetPropertiesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.vision.v1.GetPropertiesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetPropertiesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.vision.v1.GetPropertiesRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.vision.v1.GetPropertiesRequest} returns this
 */
proto.viam.service.vision.v1.GetPropertiesRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.vision.v1.GetPropertiesRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.vision.v1.GetPropertiesRequest} returns this
*/
proto.viam.service.vision.v1.GetPropertiesRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.vision.v1.GetPropertiesRequest} returns this
 */
proto.viam.service.vision.v1.GetPropertiesRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.vision.v1.GetPropertiesRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.vision.v1.CaptureAllFromCameraRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.vision.v1.CaptureAllFromCameraRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cameraName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    returnImage: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    returnClassifications: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    returnDetections: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    returnObjectPointClouds: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraRequest}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.vision.v1.CaptureAllFromCameraRequest;
  return proto.viam.service.vision.v1.CaptureAllFromCameraRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.vision.v1.CaptureAllFromCameraRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraRequest}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCameraName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReturnImage(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReturnClassifications(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReturnDetections(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReturnObjectPointClouds(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.vision.v1.CaptureAllFromCameraRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.vision.v1.CaptureAllFromCameraRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCameraName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReturnImage();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getReturnClassifications();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getReturnDetections();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getReturnObjectPointClouds();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraRequest} returns this
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string camera_name = 2;
 * @return {string}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.prototype.getCameraName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraRequest} returns this
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.prototype.setCameraName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool return_image = 3;
 * @return {boolean}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.prototype.getReturnImage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraRequest} returns this
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.prototype.setReturnImage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool return_classifications = 4;
 * @return {boolean}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.prototype.getReturnClassifications = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraRequest} returns this
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.prototype.setReturnClassifications = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool return_detections = 5;
 * @return {boolean}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.prototype.getReturnDetections = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraRequest} returns this
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.prototype.setReturnDetections = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool return_object_point_clouds = 6;
 * @return {boolean}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.prototype.getReturnObjectPointClouds = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraRequest} returns this
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.prototype.setReturnObjectPointClouds = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraRequest} returns this
*/
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraRequest} returns this
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.vision.v1.CaptureAllFromCameraResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.vision.v1.CaptureAllFromCameraResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    image: (f = msg.getImage()) && component_camera_v1_camera_pb.Image.toObject(includeInstance, f),
    detectionsList: jspb.Message.toObjectList(msg.getDetectionsList(),
    proto.viam.service.vision.v1.Detection.toObject, includeInstance),
    classificationsList: jspb.Message.toObjectList(msg.getClassificationsList(),
    proto.viam.service.vision.v1.Classification.toObject, includeInstance),
    objectsList: jspb.Message.toObjectList(msg.getObjectsList(),
    common_v1_common_pb.PointCloudObject.toObject, includeInstance),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraResponse}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.vision.v1.CaptureAllFromCameraResponse;
  return proto.viam.service.vision.v1.CaptureAllFromCameraResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.vision.v1.CaptureAllFromCameraResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraResponse}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new component_camera_v1_camera_pb.Image;
      reader.readMessage(value,component_camera_v1_camera_pb.Image.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    case 2:
      var value = new proto.viam.service.vision.v1.Detection;
      reader.readMessage(value,proto.viam.service.vision.v1.Detection.deserializeBinaryFromReader);
      msg.addDetections(value);
      break;
    case 3:
      var value = new proto.viam.service.vision.v1.Classification;
      reader.readMessage(value,proto.viam.service.vision.v1.Classification.deserializeBinaryFromReader);
      msg.addClassifications(value);
      break;
    case 4:
      var value = new common_v1_common_pb.PointCloudObject;
      reader.readMessage(value,common_v1_common_pb.PointCloudObject.deserializeBinaryFromReader);
      msg.addObjects(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.vision.v1.CaptureAllFromCameraResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.vision.v1.CaptureAllFromCameraResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      component_camera_v1_camera_pb.Image.serializeBinaryToWriter
    );
  }
  f = message.getDetectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.viam.service.vision.v1.Detection.serializeBinaryToWriter
    );
  }
  f = message.getClassificationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.viam.service.vision.v1.Classification.serializeBinaryToWriter
    );
  }
  f = message.getObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      common_v1_common_pb.PointCloudObject.serializeBinaryToWriter
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional viam.component.camera.v1.Image image = 1;
 * @return {?proto.viam.component.camera.v1.Image}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.getImage = function() {
  return /** @type{?proto.viam.component.camera.v1.Image} */ (
    jspb.Message.getWrapperField(this, component_camera_v1_camera_pb.Image, 1));
};


/**
 * @param {?proto.viam.component.camera.v1.Image|undefined} value
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraResponse} returns this
*/
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.setImage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraResponse} returns this
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.clearImage = function() {
  return this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.hasImage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Detection detections = 2;
 * @return {!Array<!proto.viam.service.vision.v1.Detection>}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.getDetectionsList = function() {
  return /** @type{!Array<!proto.viam.service.vision.v1.Detection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.service.vision.v1.Detection, 2));
};


/**
 * @param {!Array<!proto.viam.service.vision.v1.Detection>} value
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraResponse} returns this
*/
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.setDetectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.viam.service.vision.v1.Detection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.service.vision.v1.Detection}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.addDetections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.viam.service.vision.v1.Detection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraResponse} returns this
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.clearDetectionsList = function() {
  return this.setDetectionsList([]);
};


/**
 * repeated Classification classifications = 3;
 * @return {!Array<!proto.viam.service.vision.v1.Classification>}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.getClassificationsList = function() {
  return /** @type{!Array<!proto.viam.service.vision.v1.Classification>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.service.vision.v1.Classification, 3));
};


/**
 * @param {!Array<!proto.viam.service.vision.v1.Classification>} value
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraResponse} returns this
*/
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.setClassificationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.viam.service.vision.v1.Classification=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.service.vision.v1.Classification}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.addClassifications = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.viam.service.vision.v1.Classification, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraResponse} returns this
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.clearClassificationsList = function() {
  return this.setClassificationsList([]);
};


/**
 * repeated viam.common.v1.PointCloudObject objects = 4;
 * @return {!Array<!proto.viam.common.v1.PointCloudObject>}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.getObjectsList = function() {
  return /** @type{!Array<!proto.viam.common.v1.PointCloudObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_v1_common_pb.PointCloudObject, 4));
};


/**
 * @param {!Array<!proto.viam.common.v1.PointCloudObject>} value
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraResponse} returns this
*/
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.setObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.viam.common.v1.PointCloudObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.common.v1.PointCloudObject}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.addObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.viam.common.v1.PointCloudObject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraResponse} returns this
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.clearObjectsList = function() {
  return this.setObjectsList([]);
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraResponse} returns this
*/
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.vision.v1.CaptureAllFromCameraResponse} returns this
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.vision.v1.CaptureAllFromCameraResponse.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.vision.v1.GetPropertiesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.vision.v1.GetPropertiesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.vision.v1.GetPropertiesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetPropertiesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    classificationsSupported: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    detectionsSupported: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    objectPointCloudsSupported: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.vision.v1.GetPropertiesResponse}
 */
proto.viam.service.vision.v1.GetPropertiesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.vision.v1.GetPropertiesResponse;
  return proto.viam.service.vision.v1.GetPropertiesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.vision.v1.GetPropertiesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.vision.v1.GetPropertiesResponse}
 */
proto.viam.service.vision.v1.GetPropertiesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClassificationsSupported(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDetectionsSupported(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setObjectPointCloudsSupported(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.vision.v1.GetPropertiesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.vision.v1.GetPropertiesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.vision.v1.GetPropertiesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.vision.v1.GetPropertiesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClassificationsSupported();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getDetectionsSupported();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getObjectPointCloudsSupported();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bool classifications_supported = 1;
 * @return {boolean}
 */
proto.viam.service.vision.v1.GetPropertiesResponse.prototype.getClassificationsSupported = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.vision.v1.GetPropertiesResponse} returns this
 */
proto.viam.service.vision.v1.GetPropertiesResponse.prototype.setClassificationsSupported = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool detections_supported = 2;
 * @return {boolean}
 */
proto.viam.service.vision.v1.GetPropertiesResponse.prototype.getDetectionsSupported = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.vision.v1.GetPropertiesResponse} returns this
 */
proto.viam.service.vision.v1.GetPropertiesResponse.prototype.setDetectionsSupported = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool object_point_clouds_supported = 3;
 * @return {boolean}
 */
proto.viam.service.vision.v1.GetPropertiesResponse.prototype.getObjectPointCloudsSupported = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.viam.service.vision.v1.GetPropertiesResponse} returns this
 */
proto.viam.service.vision.v1.GetPropertiesResponse.prototype.setObjectPointCloudsSupported = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


goog.object.extend(exports, proto.viam.service.vision.v1);
