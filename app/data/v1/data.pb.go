// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: app/data/v1/data.proto

package v1

import (
	_ "github.com/srikrsna/protoc-gen-gotag/tagger"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Order int32

const (
	Order_ORDER_UNSPECIFIED Order = 0
	Order_ORDER_DESCENDING  Order = 1
	Order_ORDER_ASCENDING   Order = 2
)

// Enum value maps for Order.
var (
	Order_name = map[int32]string{
		0: "ORDER_UNSPECIFIED",
		1: "ORDER_DESCENDING",
		2: "ORDER_ASCENDING",
	}
	Order_value = map[string]int32{
		"ORDER_UNSPECIFIED": 0,
		"ORDER_DESCENDING":  1,
		"ORDER_ASCENDING":   2,
	}
)

func (x Order) Enum() *Order {
	p := new(Order)
	*p = x
	return p
}

func (x Order) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Order) Descriptor() protoreflect.EnumDescriptor {
	return file_app_data_v1_data_proto_enumTypes[0].Descriptor()
}

func (Order) Type() protoreflect.EnumType {
	return &file_app_data_v1_data_proto_enumTypes[0]
}

func (x Order) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Order.Descriptor instead.
func (Order) EnumDescriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{0}
}

type Status int32

const (
	Status_STATUS_UNSPECIFIED     Status = 0
	Status_STATUS_PARTIAL_SUCCESS Status = 1
	Status_STATUS_SUCCESS         Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_PARTIAL_SUCCESS",
		2: "STATUS_SUCCESS",
	}
	Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":     0,
		"STATUS_PARTIAL_SUCCESS": 1,
		"STATUS_SUCCESS":         2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_app_data_v1_data_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_app_data_v1_data_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{1}
}

// TagsFilterType specifies how data can be filtered based on tags
type TagsFilterType int32

const (
	TagsFilterType_TAGS_FILTER_TYPE_UNSPECIFIED TagsFilterType = 0
	// TAGS_FILTER_TYPE_MATCH_BY_OR specifies documents matched (using logical OR) on the tags field in the TagsFilter
	TagsFilterType_TAGS_FILTER_TYPE_MATCH_BY_OR TagsFilterType = 1
	// TAGS_FILTER_TYPE_TAGGED specifies that all tagged documents should be returned
	TagsFilterType_TAGS_FILTER_TYPE_TAGGED TagsFilterType = 2
	// TAGS_FILTER_TYPE_UNTAGGED specifes that all untagged documents should be returned
	TagsFilterType_TAGS_FILTER_TYPE_UNTAGGED TagsFilterType = 3
)

// Enum value maps for TagsFilterType.
var (
	TagsFilterType_name = map[int32]string{
		0: "TAGS_FILTER_TYPE_UNSPECIFIED",
		1: "TAGS_FILTER_TYPE_MATCH_BY_OR",
		2: "TAGS_FILTER_TYPE_TAGGED",
		3: "TAGS_FILTER_TYPE_UNTAGGED",
	}
	TagsFilterType_value = map[string]int32{
		"TAGS_FILTER_TYPE_UNSPECIFIED": 0,
		"TAGS_FILTER_TYPE_MATCH_BY_OR": 1,
		"TAGS_FILTER_TYPE_TAGGED":      2,
		"TAGS_FILTER_TYPE_UNTAGGED":    3,
	}
)

func (x TagsFilterType) Enum() *TagsFilterType {
	p := new(TagsFilterType)
	*p = x
	return p
}

func (x TagsFilterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TagsFilterType) Descriptor() protoreflect.EnumDescriptor {
	return file_app_data_v1_data_proto_enumTypes[2].Descriptor()
}

func (TagsFilterType) Type() protoreflect.EnumType {
	return &file_app_data_v1_data_proto_enumTypes[2]
}

func (x TagsFilterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TagsFilterType.Descriptor instead.
func (TagsFilterType) EnumDescriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{2}
}

type ModelType int32

const (
	ModelType_MODEL_TYPE_UNSPECIFIED                 ModelType = 0
	ModelType_MODEL_TYPE_SINGLE_LABEL_CLASSIFICATION ModelType = 1
	ModelType_MODEL_TYPE_MULTI_LABEL_CLASSIFICATION  ModelType = 2
)

// Enum value maps for ModelType.
var (
	ModelType_name = map[int32]string{
		0: "MODEL_TYPE_UNSPECIFIED",
		1: "MODEL_TYPE_SINGLE_LABEL_CLASSIFICATION",
		2: "MODEL_TYPE_MULTI_LABEL_CLASSIFICATION",
	}
	ModelType_value = map[string]int32{
		"MODEL_TYPE_UNSPECIFIED":                 0,
		"MODEL_TYPE_SINGLE_LABEL_CLASSIFICATION": 1,
		"MODEL_TYPE_MULTI_LABEL_CLASSIFICATION":  2,
	}
)

func (x ModelType) Enum() *ModelType {
	p := new(ModelType)
	*p = x
	return p
}

func (x ModelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModelType) Descriptor() protoreflect.EnumDescriptor {
	return file_app_data_v1_data_proto_enumTypes[3].Descriptor()
}

func (ModelType) Type() protoreflect.EnumType {
	return &file_app_data_v1_data_proto_enumTypes[3]
}

func (x ModelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModelType.Descriptor instead.
func (ModelType) EnumDescriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{3}
}

type TrainingStatus int32

const (
	TrainingStatus_TRAINING_STATUS_UNSPECIFIED TrainingStatus = 0
	TrainingStatus_TRAINING_STATUS_PENDING     TrainingStatus = 1
	TrainingStatus_TRAINING_STATUS_IN_PROGRESS TrainingStatus = 2
	TrainingStatus_TRAINING_STATUS_COMPLETED   TrainingStatus = 3
	TrainingStatus_TRAINING_STATUS_FAILED      TrainingStatus = 4
	TrainingStatus_TRAINING_STATUS_SUBMITTING  TrainingStatus = 5
)

// Enum value maps for TrainingStatus.
var (
	TrainingStatus_name = map[int32]string{
		0: "TRAINING_STATUS_UNSPECIFIED",
		1: "TRAINING_STATUS_PENDING",
		2: "TRAINING_STATUS_IN_PROGRESS",
		3: "TRAINING_STATUS_COMPLETED",
		4: "TRAINING_STATUS_FAILED",
		5: "TRAINING_STATUS_SUBMITTING",
	}
	TrainingStatus_value = map[string]int32{
		"TRAINING_STATUS_UNSPECIFIED": 0,
		"TRAINING_STATUS_PENDING":     1,
		"TRAINING_STATUS_IN_PROGRESS": 2,
		"TRAINING_STATUS_COMPLETED":   3,
		"TRAINING_STATUS_FAILED":      4,
		"TRAINING_STATUS_SUBMITTING":  5,
	}
)

func (x TrainingStatus) Enum() *TrainingStatus {
	p := new(TrainingStatus)
	*p = x
	return p
}

func (x TrainingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrainingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_app_data_v1_data_proto_enumTypes[4].Descriptor()
}

func (TrainingStatus) Type() protoreflect.EnumType {
	return &file_app_data_v1_data_proto_enumTypes[4]
}

func (x TrainingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrainingStatus.Descriptor instead.
func (TrainingStatus) EnumDescriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{4}
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=viam.app.data.v1.Status" json:"status,omitempty"`
	// message is an aggregated error message string
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{0}
}

func (x *Result) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *Result) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter    *Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Limit     uint64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Last      string  `protobuf:"bytes,3,opt,name=last,proto3" json:"last,omitempty"`
	SortOrder Order   `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=viam.app.data.v1.Order" json:"sort_order,omitempty"`
}

func (x *DataRequest) Reset() {
	*x = DataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataRequest) ProtoMessage() {}

func (x *DataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataRequest.ProtoReflect.Descriptor instead.
func (*DataRequest) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{1}
}

func (x *DataRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *DataRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DataRequest) GetLast() string {
	if x != nil {
		return x.Last
	}
	return ""
}

func (x *DataRequest) GetSortOrder() Order {
	if x != nil {
		return x.SortOrder
	}
	return Order_ORDER_UNSPECIFIED
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComponentName  string           `protobuf:"bytes,1,opt,name=component_name,json=componentName,proto3" json:"component_name,omitempty"`
	ComponentType  string           `protobuf:"bytes,2,opt,name=component_type,json=componentType,proto3" json:"component_type,omitempty"`
	ComponentModel string           `protobuf:"bytes,3,opt,name=component_model,json=componentModel,proto3" json:"component_model,omitempty"`
	Method         string           `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
	RobotName      string           `protobuf:"bytes,6,opt,name=robot_name,json=robotName,proto3" json:"robot_name,omitempty"`
	RobotId        string           `protobuf:"bytes,7,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
	PartName       string           `protobuf:"bytes,8,opt,name=part_name,json=partName,proto3" json:"part_name,omitempty"`
	PartId         string           `protobuf:"bytes,9,opt,name=part_id,json=partId,proto3" json:"part_id,omitempty"`
	LocationIds    []string         `protobuf:"bytes,10,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
	OrgIds         []string         `protobuf:"bytes,11,rep,name=org_ids,json=orgIds,proto3" json:"org_ids,omitempty"`
	MimeType       []string         `protobuf:"bytes,12,rep,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Interval       *CaptureInterval `protobuf:"bytes,13,opt,name=interval,proto3" json:"interval,omitempty"`
	TagsFilter     *TagsFilter      `protobuf:"bytes,14,opt,name=tags_filter,json=tagsFilter,proto3" json:"tags_filter,omitempty"`
	// Deprecated: Do not use.
	Tags []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{2}
}

func (x *Filter) GetComponentName() string {
	if x != nil {
		return x.ComponentName
	}
	return ""
}

func (x *Filter) GetComponentType() string {
	if x != nil {
		return x.ComponentType
	}
	return ""
}

func (x *Filter) GetComponentModel() string {
	if x != nil {
		return x.ComponentModel
	}
	return ""
}

func (x *Filter) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Filter) GetRobotName() string {
	if x != nil {
		return x.RobotName
	}
	return ""
}

func (x *Filter) GetRobotId() string {
	if x != nil {
		return x.RobotId
	}
	return ""
}

func (x *Filter) GetPartName() string {
	if x != nil {
		return x.PartName
	}
	return ""
}

func (x *Filter) GetPartId() string {
	if x != nil {
		return x.PartId
	}
	return ""
}

func (x *Filter) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

func (x *Filter) GetOrgIds() []string {
	if x != nil {
		return x.OrgIds
	}
	return nil
}

func (x *Filter) GetMimeType() []string {
	if x != nil {
		return x.MimeType
	}
	return nil
}

func (x *Filter) GetInterval() *CaptureInterval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *Filter) GetTagsFilter() *TagsFilter {
	if x != nil {
		return x.TagsFilter
	}
	return nil
}

// Deprecated: Do not use.
func (x *Filter) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type TagsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type TagsFilterType `protobuf:"varint,1,opt,name=type,proto3,enum=viam.app.data.v1.TagsFilterType" json:"type,omitempty"`
	// Tags are used to match documents if `type` is UNSPECIFIED or MATCH_BY_ORG
	Tags []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *TagsFilter) Reset() {
	*x = TagsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagsFilter) ProtoMessage() {}

func (x *TagsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagsFilter.ProtoReflect.Descriptor instead.
func (*TagsFilter) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{3}
}

func (x *TagsFilter) GetType() TagsFilterType {
	if x != nil {
		return x.Type
	}
	return TagsFilterType_TAGS_FILTER_TYPE_UNSPECIFIED
}

func (x *TagsFilter) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// CaptureMetadata contains information on the settings used for the data capture
type CaptureMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId            string                `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	LocationId       string                `protobuf:"bytes,2,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	RobotName        string                `protobuf:"bytes,3,opt,name=robot_name,json=robotName,proto3" json:"robot_name,omitempty"`
	RobotId          string                `protobuf:"bytes,4,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
	PartName         string                `protobuf:"bytes,5,opt,name=part_name,json=partName,proto3" json:"part_name,omitempty"`
	PartId           string                `protobuf:"bytes,6,opt,name=part_id,json=partId,proto3" json:"part_id,omitempty"`
	ComponentType    string                `protobuf:"bytes,7,opt,name=component_type,json=componentType,proto3" json:"component_type,omitempty"`
	ComponentModel   string                `protobuf:"bytes,8,opt,name=component_model,json=componentModel,proto3" json:"component_model,omitempty"`
	ComponentName    string                `protobuf:"bytes,9,opt,name=component_name,json=componentName,proto3" json:"component_name,omitempty"`
	MethodName       string                `protobuf:"bytes,10,opt,name=method_name,json=methodName,proto3" json:"method_name,omitempty"`
	MethodParameters map[string]*anypb.Any `protobuf:"bytes,11,rep,name=method_parameters,json=methodParameters,proto3" json:"method_parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tags             []string              `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
	MimeType         string                `protobuf:"bytes,13,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
}

func (x *CaptureMetadata) Reset() {
	*x = CaptureMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptureMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptureMetadata) ProtoMessage() {}

func (x *CaptureMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptureMetadata.ProtoReflect.Descriptor instead.
func (*CaptureMetadata) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{4}
}

func (x *CaptureMetadata) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *CaptureMetadata) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *CaptureMetadata) GetRobotName() string {
	if x != nil {
		return x.RobotName
	}
	return ""
}

func (x *CaptureMetadata) GetRobotId() string {
	if x != nil {
		return x.RobotId
	}
	return ""
}

func (x *CaptureMetadata) GetPartName() string {
	if x != nil {
		return x.PartName
	}
	return ""
}

func (x *CaptureMetadata) GetPartId() string {
	if x != nil {
		return x.PartId
	}
	return ""
}

func (x *CaptureMetadata) GetComponentType() string {
	if x != nil {
		return x.ComponentType
	}
	return ""
}

func (x *CaptureMetadata) GetComponentModel() string {
	if x != nil {
		return x.ComponentModel
	}
	return ""
}

func (x *CaptureMetadata) GetComponentName() string {
	if x != nil {
		return x.ComponentName
	}
	return ""
}

func (x *CaptureMetadata) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

func (x *CaptureMetadata) GetMethodParameters() map[string]*anypb.Any {
	if x != nil {
		return x.MethodParameters
	}
	return nil
}

func (x *CaptureMetadata) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CaptureMetadata) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

// CaptureInterval describes the start and end time of the capture in this file
type CaptureInterval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *CaptureInterval) Reset() {
	*x = CaptureInterval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptureInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptureInterval) ProtoMessage() {}

func (x *CaptureInterval) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptureInterval.ProtoReflect.Descriptor instead.
func (*CaptureInterval) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{5}
}

func (x *CaptureInterval) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *CaptureInterval) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

// TabularDataByFilterRequest requests tabular data based on filter values
type TabularDataByFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataRequest *DataRequest `protobuf:"bytes,1,opt,name=data_request,json=dataRequest,proto3" json:"data_request,omitempty"`
	CountOnly   bool         `protobuf:"varint,2,opt,name=count_only,json=countOnly,proto3" json:"count_only,omitempty"`
}

func (x *TabularDataByFilterRequest) Reset() {
	*x = TabularDataByFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TabularDataByFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabularDataByFilterRequest) ProtoMessage() {}

func (x *TabularDataByFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabularDataByFilterRequest.ProtoReflect.Descriptor instead.
func (*TabularDataByFilterRequest) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{6}
}

func (x *TabularDataByFilterRequest) GetDataRequest() *DataRequest {
	if x != nil {
		return x.DataRequest
	}
	return nil
}

func (x *TabularDataByFilterRequest) GetCountOnly() bool {
	if x != nil {
		return x.CountOnly
	}
	return false
}

// TabularDataByFilterResponse provides the data and metadata of tabular data
type TabularDataByFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata []*CaptureMetadata `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty"`
	Data     []*TabularData     `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Count    int64              `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Last     string             `protobuf:"bytes,4,opt,name=last,proto3" json:"last,omitempty"`
}

func (x *TabularDataByFilterResponse) Reset() {
	*x = TabularDataByFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TabularDataByFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabularDataByFilterResponse) ProtoMessage() {}

func (x *TabularDataByFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabularDataByFilterResponse.ProtoReflect.Descriptor instead.
func (*TabularDataByFilterResponse) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{7}
}

func (x *TabularDataByFilterResponse) GetMetadata() []*CaptureMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TabularDataByFilterResponse) GetData() []*TabularData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TabularDataByFilterResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TabularDataByFilterResponse) GetLast() string {
	if x != nil {
		return x.Last
	}
	return ""
}

type TabularData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data          *structpb.Struct       `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	MetadataIndex int32                  `protobuf:"varint,2,opt,name=metadata_index,json=metadataIndex,proto3" json:"metadata_index,omitempty"`
	TimeRequested *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time_requested,json=timeRequested,proto3" json:"time_requested,omitempty"`
	TimeReceived  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=time_received,json=timeReceived,proto3" json:"time_received,omitempty"`
}

func (x *TabularData) Reset() {
	*x = TabularData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TabularData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabularData) ProtoMessage() {}

func (x *TabularData) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabularData.ProtoReflect.Descriptor instead.
func (*TabularData) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{8}
}

func (x *TabularData) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TabularData) GetMetadataIndex() int32 {
	if x != nil {
		return x.MetadataIndex
	}
	return 0
}

func (x *TabularData) GetTimeRequested() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeRequested
	}
	return nil
}

func (x *TabularData) GetTimeReceived() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeReceived
	}
	return nil
}

type BinaryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Binary   []byte          `protobuf:"bytes,1,opt,name=binary,proto3" json:"binary,omitempty"`
	Metadata *BinaryMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *BinaryData) Reset() {
	*x = BinaryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BinaryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryData) ProtoMessage() {}

func (x *BinaryData) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryData.ProtoReflect.Descriptor instead.
func (*BinaryData) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{9}
}

func (x *BinaryData) GetBinary() []byte {
	if x != nil {
		return x.Binary
	}
	return nil
}

func (x *BinaryData) GetMetadata() *BinaryMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// BinaryDataByFilterRequest requests the data and metadata of binary (image + file) data when a filter is provided
type BinaryDataByFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataRequest   *DataRequest `protobuf:"bytes,1,opt,name=data_request,json=dataRequest,proto3" json:"data_request,omitempty"`
	IncludeBinary bool         `protobuf:"varint,2,opt,name=include_binary,json=includeBinary,proto3" json:"include_binary,omitempty"`
	CountOnly     bool         `protobuf:"varint,3,opt,name=count_only,json=countOnly,proto3" json:"count_only,omitempty"`
}

func (x *BinaryDataByFilterRequest) Reset() {
	*x = BinaryDataByFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BinaryDataByFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryDataByFilterRequest) ProtoMessage() {}

func (x *BinaryDataByFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryDataByFilterRequest.ProtoReflect.Descriptor instead.
func (*BinaryDataByFilterRequest) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{10}
}

func (x *BinaryDataByFilterRequest) GetDataRequest() *DataRequest {
	if x != nil {
		return x.DataRequest
	}
	return nil
}

func (x *BinaryDataByFilterRequest) GetIncludeBinary() bool {
	if x != nil {
		return x.IncludeBinary
	}
	return false
}

func (x *BinaryDataByFilterRequest) GetCountOnly() bool {
	if x != nil {
		return x.CountOnly
	}
	return false
}

// BinaryDataByFilterResponse provides the data and metadata of binary (image + file) data when a filter is provided
type BinaryDataByFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*BinaryData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Count uint64        `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Last  string        `protobuf:"bytes,3,opt,name=last,proto3" json:"last,omitempty"`
}

func (x *BinaryDataByFilterResponse) Reset() {
	*x = BinaryDataByFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BinaryDataByFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryDataByFilterResponse) ProtoMessage() {}

func (x *BinaryDataByFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryDataByFilterResponse.ProtoReflect.Descriptor instead.
func (*BinaryDataByFilterResponse) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{11}
}

func (x *BinaryDataByFilterResponse) GetData() []*BinaryData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BinaryDataByFilterResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BinaryDataByFilterResponse) GetLast() string {
	if x != nil {
		return x.Last
	}
	return ""
}

// BinaryDataByFilterRequest requests the data and metadata of binary (image + file) data by file ids
type BinaryDataByIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileIds       []string `protobuf:"bytes,1,rep,name=file_ids,json=fileIds,proto3" json:"file_ids,omitempty"`
	IncludeBinary bool     `protobuf:"varint,2,opt,name=include_binary,json=includeBinary,proto3" json:"include_binary,omitempty"` // by default
}

func (x *BinaryDataByIDsRequest) Reset() {
	*x = BinaryDataByIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BinaryDataByIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryDataByIDsRequest) ProtoMessage() {}

func (x *BinaryDataByIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryDataByIDsRequest.ProtoReflect.Descriptor instead.
func (*BinaryDataByIDsRequest) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{12}
}

func (x *BinaryDataByIDsRequest) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

func (x *BinaryDataByIDsRequest) GetIncludeBinary() bool {
	if x != nil {
		return x.IncludeBinary
	}
	return false
}

// BinaryDataByIDsResponse provides the data and metadata of binary (image + file) data when a filter is provided
type BinaryDataByIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*BinaryData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Count uint64        `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *BinaryDataByIDsResponse) Reset() {
	*x = BinaryDataByIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BinaryDataByIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryDataByIDsResponse) ProtoMessage() {}

func (x *BinaryDataByIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryDataByIDsResponse.ProtoReflect.Descriptor instead.
func (*BinaryDataByIDsResponse) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{13}
}

func (x *BinaryDataByIDsResponse) GetData() []*BinaryData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BinaryDataByIDsResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type BinaryMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CaptureMetadata *CaptureMetadata       `protobuf:"bytes,2,opt,name=capture_metadata,json=captureMetadata,proto3" json:"capture_metadata,omitempty"`
	TimeRequested   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time_requested,json=timeRequested,proto3" json:"time_requested,omitempty"`
	TimeReceived    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=time_received,json=timeReceived,proto3" json:"time_received,omitempty"`
	FileName        string                 `protobuf:"bytes,5,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileExt         string                 `protobuf:"bytes,6,opt,name=file_ext,json=fileExt,proto3" json:"file_ext,omitempty"`
	Uri             string                 `protobuf:"bytes,7,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *BinaryMetadata) Reset() {
	*x = BinaryMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BinaryMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryMetadata) ProtoMessage() {}

func (x *BinaryMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryMetadata.ProtoReflect.Descriptor instead.
func (*BinaryMetadata) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{14}
}

func (x *BinaryMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BinaryMetadata) GetCaptureMetadata() *CaptureMetadata {
	if x != nil {
		return x.CaptureMetadata
	}
	return nil
}

func (x *BinaryMetadata) GetTimeRequested() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeRequested
	}
	return nil
}

func (x *BinaryMetadata) GetTimeReceived() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeReceived
	}
	return nil
}

func (x *BinaryMetadata) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *BinaryMetadata) GetFileExt() string {
	if x != nil {
		return x.FileExt
	}
	return ""
}

func (x *BinaryMetadata) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// DeleteTabularDataByFilterRequest deletes the data and metadata of tabular data when a filter is provided
type DeleteTabularDataByFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *DeleteTabularDataByFilterRequest) Reset() {
	*x = DeleteTabularDataByFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTabularDataByFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTabularDataByFilterRequest) ProtoMessage() {}

func (x *DeleteTabularDataByFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTabularDataByFilterRequest.ProtoReflect.Descriptor instead.
func (*DeleteTabularDataByFilterRequest) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteTabularDataByFilterRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// DeleteBinaryDataByFilterResponse returns the number of tabular datapoints deleted when a filter is provided
type DeleteTabularDataByFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedCount uint64  `protobuf:"varint,1,opt,name=deleted_count,json=deletedCount,proto3" json:"deleted_count,omitempty"`
	Result       *Result `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteTabularDataByFilterResponse) Reset() {
	*x = DeleteTabularDataByFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTabularDataByFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTabularDataByFilterResponse) ProtoMessage() {}

func (x *DeleteTabularDataByFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTabularDataByFilterResponse.ProtoReflect.Descriptor instead.
func (*DeleteTabularDataByFilterResponse) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteTabularDataByFilterResponse) GetDeletedCount() uint64 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

func (x *DeleteTabularDataByFilterResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// DeleteBinaryDataByFilterRequest deletes the data and metadata of binary data when a filter is provided
type DeleteBinaryDataByFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *DeleteBinaryDataByFilterRequest) Reset() {
	*x = DeleteBinaryDataByFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBinaryDataByFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBinaryDataByFilterRequest) ProtoMessage() {}

func (x *DeleteBinaryDataByFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBinaryDataByFilterRequest.ProtoReflect.Descriptor instead.
func (*DeleteBinaryDataByFilterRequest) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteBinaryDataByFilterRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// DeleteBinaryDataByFilterResponse returns the number of binary files deleted when a filter is provided
type DeleteBinaryDataByFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedCount uint64  `protobuf:"varint,1,opt,name=deleted_count,json=deletedCount,proto3" json:"deleted_count,omitempty"`
	Result       *Result `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteBinaryDataByFilterResponse) Reset() {
	*x = DeleteBinaryDataByFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBinaryDataByFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBinaryDataByFilterResponse) ProtoMessage() {}

func (x *DeleteBinaryDataByFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBinaryDataByFilterResponse.ProtoReflect.Descriptor instead.
func (*DeleteBinaryDataByFilterResponse) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteBinaryDataByFilterResponse) GetDeletedCount() uint64 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

func (x *DeleteBinaryDataByFilterResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// DeleteBinaryDataByIDsRequest deletes the data and metadata of binary data when file ids are provided
type DeleteBinaryDataByIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileIds []string `protobuf:"bytes,1,rep,name=file_ids,json=fileIds,proto3" json:"file_ids,omitempty"`
}

func (x *DeleteBinaryDataByIDsRequest) Reset() {
	*x = DeleteBinaryDataByIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBinaryDataByIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBinaryDataByIDsRequest) ProtoMessage() {}

func (x *DeleteBinaryDataByIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBinaryDataByIDsRequest.ProtoReflect.Descriptor instead.
func (*DeleteBinaryDataByIDsRequest) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteBinaryDataByIDsRequest) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

// DeleteBinaryDataByIDsResponse returns the number of binary files deleted when file ids are provided
type DeleteBinaryDataByIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedCount uint64  `protobuf:"varint,1,opt,name=deleted_count,json=deletedCount,proto3" json:"deleted_count,omitempty"`
	Result       *Result `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteBinaryDataByIDsResponse) Reset() {
	*x = DeleteBinaryDataByIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBinaryDataByIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBinaryDataByIDsResponse) ProtoMessage() {}

func (x *DeleteBinaryDataByIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBinaryDataByIDsResponse.ProtoReflect.Descriptor instead.
func (*DeleteBinaryDataByIDsResponse) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteBinaryDataByIDsResponse) GetDeletedCount() uint64 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

func (x *DeleteBinaryDataByIDsResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// AddTagsToBinaryDataByFileIDsRequest requests adding all specified tags to each of the files when file IDs are provided
type AddTagsToBinaryDataByFileIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileIds []string `protobuf:"bytes,1,rep,name=file_ids,json=fileIds,proto3" json:"file_ids,omitempty"`
	Tags    []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *AddTagsToBinaryDataByFileIDsRequest) Reset() {
	*x = AddTagsToBinaryDataByFileIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTagsToBinaryDataByFileIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTagsToBinaryDataByFileIDsRequest) ProtoMessage() {}

func (x *AddTagsToBinaryDataByFileIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTagsToBinaryDataByFileIDsRequest.ProtoReflect.Descriptor instead.
func (*AddTagsToBinaryDataByFileIDsRequest) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{21}
}

func (x *AddTagsToBinaryDataByFileIDsRequest) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

func (x *AddTagsToBinaryDataByFileIDsRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type AddTagsToBinaryDataByFileIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddTagsToBinaryDataByFileIDsResponse) Reset() {
	*x = AddTagsToBinaryDataByFileIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTagsToBinaryDataByFileIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTagsToBinaryDataByFileIDsResponse) ProtoMessage() {}

func (x *AddTagsToBinaryDataByFileIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTagsToBinaryDataByFileIDsResponse.ProtoReflect.Descriptor instead.
func (*AddTagsToBinaryDataByFileIDsResponse) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{22}
}

// AddTagsToBinaryDataByFilterRequest requests adding all specified tags to each of the files when a filter is provided
type AddTagsToBinaryDataByFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *Filter  `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Tags   []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *AddTagsToBinaryDataByFilterRequest) Reset() {
	*x = AddTagsToBinaryDataByFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTagsToBinaryDataByFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTagsToBinaryDataByFilterRequest) ProtoMessage() {}

func (x *AddTagsToBinaryDataByFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTagsToBinaryDataByFilterRequest.ProtoReflect.Descriptor instead.
func (*AddTagsToBinaryDataByFilterRequest) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{23}
}

func (x *AddTagsToBinaryDataByFilterRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *AddTagsToBinaryDataByFilterRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type AddTagsToBinaryDataByFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddTagsToBinaryDataByFilterResponse) Reset() {
	*x = AddTagsToBinaryDataByFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTagsToBinaryDataByFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTagsToBinaryDataByFilterResponse) ProtoMessage() {}

func (x *AddTagsToBinaryDataByFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTagsToBinaryDataByFilterResponse.ProtoReflect.Descriptor instead.
func (*AddTagsToBinaryDataByFilterResponse) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{24}
}

// RemoveTagsFromBinaryDataByFileIDsRequest requests removing the given tags value from each file when file IDs are provided
type RemoveTagsFromBinaryDataByFileIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileIds []string `protobuf:"bytes,1,rep,name=file_ids,json=fileIds,proto3" json:"file_ids,omitempty"`
	Tags    []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *RemoveTagsFromBinaryDataByFileIDsRequest) Reset() {
	*x = RemoveTagsFromBinaryDataByFileIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTagsFromBinaryDataByFileIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTagsFromBinaryDataByFileIDsRequest) ProtoMessage() {}

func (x *RemoveTagsFromBinaryDataByFileIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTagsFromBinaryDataByFileIDsRequest.ProtoReflect.Descriptor instead.
func (*RemoveTagsFromBinaryDataByFileIDsRequest) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{25}
}

func (x *RemoveTagsFromBinaryDataByFileIDsRequest) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

func (x *RemoveTagsFromBinaryDataByFileIDsRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// RemoveTagsFromBinaryDataByFileIDsResponse returns the number of binary files which had tags removed
type RemoveTagsFromBinaryDataByFileIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedCount uint64 `protobuf:"varint,1,opt,name=deleted_count,json=deletedCount,proto3" json:"deleted_count,omitempty"`
}

func (x *RemoveTagsFromBinaryDataByFileIDsResponse) Reset() {
	*x = RemoveTagsFromBinaryDataByFileIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTagsFromBinaryDataByFileIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTagsFromBinaryDataByFileIDsResponse) ProtoMessage() {}

func (x *RemoveTagsFromBinaryDataByFileIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTagsFromBinaryDataByFileIDsResponse.ProtoReflect.Descriptor instead.
func (*RemoveTagsFromBinaryDataByFileIDsResponse) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{26}
}

func (x *RemoveTagsFromBinaryDataByFileIDsResponse) GetDeletedCount() uint64 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

// RemoveTagsFromBinaryDataByFilterRequest requests removing the given tags value from each file when a filter is provided
type RemoveTagsFromBinaryDataByFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *Filter  `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Tags   []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *RemoveTagsFromBinaryDataByFilterRequest) Reset() {
	*x = RemoveTagsFromBinaryDataByFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTagsFromBinaryDataByFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTagsFromBinaryDataByFilterRequest) ProtoMessage() {}

func (x *RemoveTagsFromBinaryDataByFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTagsFromBinaryDataByFilterRequest.ProtoReflect.Descriptor instead.
func (*RemoveTagsFromBinaryDataByFilterRequest) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{27}
}

func (x *RemoveTagsFromBinaryDataByFilterRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *RemoveTagsFromBinaryDataByFilterRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// RemoveTagsFromBinaryDataByFilterResponse returns the number of binary files which had tags removed
type RemoveTagsFromBinaryDataByFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedCount uint64 `protobuf:"varint,1,opt,name=deleted_count,json=deletedCount,proto3" json:"deleted_count,omitempty"`
}

func (x *RemoveTagsFromBinaryDataByFilterResponse) Reset() {
	*x = RemoveTagsFromBinaryDataByFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTagsFromBinaryDataByFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTagsFromBinaryDataByFilterResponse) ProtoMessage() {}

func (x *RemoveTagsFromBinaryDataByFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTagsFromBinaryDataByFilterResponse.ProtoReflect.Descriptor instead.
func (*RemoveTagsFromBinaryDataByFilterResponse) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{28}
}

func (x *RemoveTagsFromBinaryDataByFilterResponse) GetDeletedCount() uint64 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

// TagsByFilterRequest requests the unique tags from data based on given filter
type TagsByFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *TagsByFilterRequest) Reset() {
	*x = TagsByFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagsByFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagsByFilterRequest) ProtoMessage() {}

func (x *TagsByFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagsByFilterRequest.ProtoReflect.Descriptor instead.
func (*TagsByFilterRequest) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{29}
}

func (x *TagsByFilterRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// TagsByFilterResponse returns the unique tags from data based on given filter
type TagsByFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *TagsByFilterResponse) Reset() {
	*x = TagsByFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagsByFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagsByFilterResponse) ProtoMessage() {}

func (x *TagsByFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagsByFilterResponse.ProtoReflect.Descriptor instead.
func (*TagsByFilterResponse) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{30}
}

func (x *TagsByFilterResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type SubmitTrainingJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter         *Filter   `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	OrganizationId string    `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	ModelName      string    `protobuf:"bytes,3,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	ModelVersion   string    `protobuf:"bytes,4,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"`
	ModelType      ModelType `protobuf:"varint,5,opt,name=model_type,json=modelType,proto3,enum=viam.app.data.v1.ModelType" json:"model_type,omitempty"`
	Tags           []string  `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *SubmitTrainingJobRequest) Reset() {
	*x = SubmitTrainingJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitTrainingJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTrainingJobRequest) ProtoMessage() {}

func (x *SubmitTrainingJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTrainingJobRequest.ProtoReflect.Descriptor instead.
func (*SubmitTrainingJobRequest) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{31}
}

func (x *SubmitTrainingJobRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *SubmitTrainingJobRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *SubmitTrainingJobRequest) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *SubmitTrainingJobRequest) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

func (x *SubmitTrainingJobRequest) GetModelType() ModelType {
	if x != nil {
		return x.ModelType
	}
	return ModelType_MODEL_TYPE_UNSPECIFIED
}

func (x *SubmitTrainingJobRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type SubmitTrainingJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SubmitTrainingJobResponse) Reset() {
	*x = SubmitTrainingJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitTrainingJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTrainingJobResponse) ProtoMessage() {}

func (x *SubmitTrainingJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTrainingJobResponse.ProtoReflect.Descriptor instead.
func (*SubmitTrainingJobResponse) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{32}
}

func (x *SubmitTrainingJobResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTrainingJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTrainingJobRequest) Reset() {
	*x = GetTrainingJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrainingJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainingJobRequest) ProtoMessage() {}

func (x *GetTrainingJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainingJobRequest.ProtoReflect.Descriptor instead.
func (*GetTrainingJobRequest) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{33}
}

func (x *GetTrainingJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTrainingJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Metadata *TrainingJobMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *GetTrainingJobResponse) Reset() {
	*x = GetTrainingJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrainingJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainingJobResponse) ProtoMessage() {}

func (x *GetTrainingJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainingJobResponse.ProtoReflect.Descriptor instead.
func (*GetTrainingJobResponse) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{34}
}

func (x *GetTrainingJobResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTrainingJobResponse) GetMetadata() *TrainingJobMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type TrainingJobMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request       *SubmitTrainingJobRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Status        TrainingStatus            `protobuf:"varint,2,opt,name=status,proto3,enum=viam.app.data.v1.TrainingStatus" json:"status,omitempty"`
	CreatedOn     *timestamppb.Timestamp    `protobuf:"bytes,3,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
	LastModified  *timestamppb.Timestamp    `protobuf:"bytes,4,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	SyncedModelId string                    `protobuf:"bytes,5,opt,name=synced_model_id,json=syncedModelId,proto3" json:"synced_model_id,omitempty"`
}

func (x *TrainingJobMetadata) Reset() {
	*x = TrainingJobMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingJobMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingJobMetadata) ProtoMessage() {}

func (x *TrainingJobMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingJobMetadata.ProtoReflect.Descriptor instead.
func (*TrainingJobMetadata) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{35}
}

func (x *TrainingJobMetadata) GetRequest() *SubmitTrainingJobRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *TrainingJobMetadata) GetStatus() TrainingStatus {
	if x != nil {
		return x.Status
	}
	return TrainingStatus_TRAINING_STATUS_UNSPECIFIED
}

func (x *TrainingJobMetadata) GetCreatedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedOn
	}
	return nil
}

func (x *TrainingJobMetadata) GetLastModified() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModified
	}
	return nil
}

func (x *TrainingJobMetadata) GetSyncedModelId() string {
	if x != nil {
		return x.SyncedModelId
	}
	return ""
}

type TrainingJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`
	Metadata   *TrainingJobMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata" bson:"metadata"`
	OutputPath string               `protobuf:"bytes,3,opt,name=output_path,json=outputPath,proto3" json:"output_path" bson:"output_path"`
	// The vertex_job_id is the id of the Vertex AI custom training job
	// backing our concept of a TrainingJob.
	VertexJobId   string           `protobuf:"bytes,4,opt,name=vertex_job_id,json=vertexJobId,proto3" json:"vertex_job_id" bson:"vertex_job_id"`
	ModelMetadata *structpb.Struct `protobuf:"bytes,5,opt,name=model_metadata,json=modelMetadata,proto3" json:"model_metadata" bson:"model_metadata"`
}

func (x *TrainingJob) Reset() {
	*x = TrainingJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_data_v1_data_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingJob) ProtoMessage() {}

func (x *TrainingJob) ProtoReflect() protoreflect.Message {
	mi := &file_app_data_v1_data_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingJob.ProtoReflect.Descriptor instead.
func (*TrainingJob) Descriptor() ([]byte, []int) {
	return file_app_data_v1_data_proto_rawDescGZIP(), []int{36}
}

func (x *TrainingJob) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TrainingJob) GetMetadata() *TrainingJobMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TrainingJob) GetOutputPath() string {
	if x != nil {
		return x.OutputPath
	}
	return ""
}

func (x *TrainingJob) GetVertexJobId() string {
	if x != nil {
		return x.VertexJobId
	}
	return ""
}

func (x *TrainingJob) GetModelMetadata() *structpb.Struct {
	if x != nil {
		return x.ModelMetadata
	}
	return nil
}

var File_app_data_v1_data_proto protoreflect.FileDescriptor

var file_app_data_v1_data_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x70, 0x70, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xf6, 0x03, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x76, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x3d, 0x0a, 0x0b, 0x74, 0x61, 0x67, 0x73,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x67, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x74, 0x61, 0x67,
	0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22,
	0x56, 0x0a, 0x0a, 0x54, 0x61, 0x67, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x34, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x76, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x67, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0xc3, 0x04, 0x0a, 0x0f, 0x43, 0x61, 0x70, 0x74,
	0x75, 0x72, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6f,
	0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61,
	0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x64, 0x0a, 0x11, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x10, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x1a, 0x59, 0x0a, 0x15, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x71, 0x0a,
	0x0f, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64,
	0x22, 0x7d, 0x0a, 0x1a, 0x54, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42,
	0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40,
	0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x22,
	0xb9, 0x01, 0x0a, 0x1b, 0x54, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42,
	0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x31,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76,
	0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x22, 0xe5, 0x01, 0x0a, 0x0b,
	0x54, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x41, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x22, 0x62, 0x0a, 0x0a, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa3, 0x01, 0x0a, 0x19, 0x42, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x78, 0x0a,
	0x1a, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x22, 0x5a, 0x0a, 0x16, 0x42, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x42, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x22, 0x61, 0x0a, 0x17, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76,
	0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xbc, 0x02, 0x0a, 0x0e, 0x42, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4c, 0x0a, 0x10, 0x63, 0x61, 0x70,
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x74, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x74,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65,
	0x45, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x54, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x7a, 0x0a, 0x21, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x53, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x69, 0x61,
	0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x79, 0x0a, 0x20,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x39, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x73, 0x22, 0x76, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x54, 0x0a, 0x23, 0x41, 0x64,
	0x64, 0x54, 0x61, 0x67, 0x73, 0x54, 0x6f, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x22, 0x26, 0x0a, 0x24, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x54, 0x6f, 0x42, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6a, 0x0a, 0x22, 0x41, 0x64, 0x64, 0x54,
	0x61, 0x67, 0x73, 0x54, 0x6f, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42,
	0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x22, 0x25, 0x0a, 0x23, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x54,
	0x6f, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x0a, 0x28, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x67, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x50, 0x0a, 0x29, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x54, 0x61, 0x67, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6f, 0x0a, 0x27, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x54, 0x61, 0x67, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x4f, 0x0a, 0x28, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x54, 0x61, 0x67, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x13, 0x54, 0x61,
	0x67, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x22, 0x2a, 0x0a, 0x14, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22,
	0x89, 0x02, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76,
	0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x27,
	0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x0a, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x2b, 0x0a, 0x19, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x6b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb9,
	0x02, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x76,
	0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4f,
	0x6e, 0x12, 0x3f, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x79, 0x6e,
	0x63, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x22, 0xbe, 0x03, 0x0a, 0x0b, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x12, 0x33, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0x9a, 0x84, 0x9e, 0x03, 0x1e, 0x62, 0x73, 0x6f,
	0x6e, 0x3a, 0x22, 0x5f, 0x69, 0x64, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x64,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x67, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x24, 0x9a, 0x84, 0x9e, 0x03, 0x1f, 0x62,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x20, 0x6a,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2a, 0x9a,
	0x84, 0x9e, 0x03, 0x25, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x22, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x52, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x5f,
	0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0x9a, 0x84,
	0x9e, 0x03, 0x29, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x5f,
	0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x76, 0x65,
	0x72, 0x74, 0x65, 0x78, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x22, 0x52, 0x0b, 0x76, 0x65,
	0x72, 0x74, 0x65, 0x78, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x70, 0x0a, 0x0e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x30, 0x9a, 0x84, 0x9e, 0x03,
	0x2b, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x52, 0x0d, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x49, 0x0a, 0x05, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4f,
	0x52, 0x44, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x53, 0x43, 0x45, 0x4e,
	0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x2a, 0x50, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x2a, 0x90, 0x01, 0x0a, 0x0e, 0x54, 0x61, 0x67,
	0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x54,
	0x41, 0x47, 0x53, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a,
	0x1c, 0x54, 0x41, 0x47, 0x53, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x42, 0x59, 0x5f, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x1b, 0x0a, 0x17, 0x54, 0x41, 0x47, 0x53, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x54, 0x41, 0x47, 0x47, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19,
	0x54, 0x41, 0x47, 0x53, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x54, 0x41, 0x47, 0x47, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x7e, 0x0a, 0x09, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x4f, 0x44, 0x45,
	0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x2a, 0x0a, 0x26, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x5f,
	0x43, 0x4c, 0x41, 0x53, 0x53, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01,
	0x12, 0x29, 0x0a, 0x25, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d,
	0x55, 0x4c, 0x54, 0x49, 0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53,
	0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x2a, 0xca, 0x01, 0x0a, 0x0e,
	0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f,
	0x0a, 0x1b, 0x54, 0x52, 0x41, 0x49, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1b, 0x0a, 0x17, 0x54, 0x52, 0x41, 0x49, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b,
	0x54, 0x52, 0x41, 0x49, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x1d, 0x0a,
	0x19, 0x54, 0x52, 0x41, 0x49, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16,
	0x54, 0x52, 0x41, 0x49, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x52, 0x41, 0x49,
	0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x42, 0x4d,
	0x49, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x32, 0xe9, 0x0c, 0x0a, 0x0b, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x72, 0x0a, 0x13, 0x54, 0x61, 0x62, 0x75,
	0x6c, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x2c, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x12,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x2b, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a,
	0x0f, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x44, 0x73,
	0x12, 0x28, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79,
	0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x76, 0x69, 0x61,
	0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x32, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a,
	0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x31, 0x2e, 0x76, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x76,
	0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x78, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x44, 0x73, 0x12, 0x2e, 0x2e, 0x76, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49,
	0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x76, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49,
	0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x1c, 0x41,
	0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x54, 0x6f, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x12, 0x35, 0x2e, 0x76, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x54, 0x6f, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x36, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x54, 0x6f, 0x42,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x1b, 0x41,
	0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x54, 0x6f, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x34, 0x2e, 0x76, 0x69, 0x61,
	0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x54, 0x61, 0x67, 0x73, 0x54, 0x6f, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x35, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x54, 0x6f, 0x42, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x21, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x54, 0x61, 0x67, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x12, 0x3a, 0x2e,
	0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x67, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x42,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x76, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x54, 0x61, 0x67, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x20, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x54, 0x61, 0x67, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x39, 0x2e, 0x76, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x67, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x54, 0x61, 0x67, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0c, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x25, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x76, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67,
	0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6c, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x12, 0x2a, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x63, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f,
	0x62, 0x12, 0x27, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x76, 0x69, 0x61,
	0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1d, 0x5a, 0x1b, 0x67, 0x6f, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_app_data_v1_data_proto_rawDescOnce sync.Once
	file_app_data_v1_data_proto_rawDescData = file_app_data_v1_data_proto_rawDesc
)

func file_app_data_v1_data_proto_rawDescGZIP() []byte {
	file_app_data_v1_data_proto_rawDescOnce.Do(func() {
		file_app_data_v1_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_data_v1_data_proto_rawDescData)
	})
	return file_app_data_v1_data_proto_rawDescData
}

var file_app_data_v1_data_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_app_data_v1_data_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_app_data_v1_data_proto_goTypes = []interface{}{
	(Order)(0),                                        // 0: viam.app.data.v1.Order
	(Status)(0),                                       // 1: viam.app.data.v1.Status
	(TagsFilterType)(0),                               // 2: viam.app.data.v1.TagsFilterType
	(ModelType)(0),                                    // 3: viam.app.data.v1.ModelType
	(TrainingStatus)(0),                               // 4: viam.app.data.v1.TrainingStatus
	(*Result)(nil),                                    // 5: viam.app.data.v1.Result
	(*DataRequest)(nil),                               // 6: viam.app.data.v1.DataRequest
	(*Filter)(nil),                                    // 7: viam.app.data.v1.Filter
	(*TagsFilter)(nil),                                // 8: viam.app.data.v1.TagsFilter
	(*CaptureMetadata)(nil),                           // 9: viam.app.data.v1.CaptureMetadata
	(*CaptureInterval)(nil),                           // 10: viam.app.data.v1.CaptureInterval
	(*TabularDataByFilterRequest)(nil),                // 11: viam.app.data.v1.TabularDataByFilterRequest
	(*TabularDataByFilterResponse)(nil),               // 12: viam.app.data.v1.TabularDataByFilterResponse
	(*TabularData)(nil),                               // 13: viam.app.data.v1.TabularData
	(*BinaryData)(nil),                                // 14: viam.app.data.v1.BinaryData
	(*BinaryDataByFilterRequest)(nil),                 // 15: viam.app.data.v1.BinaryDataByFilterRequest
	(*BinaryDataByFilterResponse)(nil),                // 16: viam.app.data.v1.BinaryDataByFilterResponse
	(*BinaryDataByIDsRequest)(nil),                    // 17: viam.app.data.v1.BinaryDataByIDsRequest
	(*BinaryDataByIDsResponse)(nil),                   // 18: viam.app.data.v1.BinaryDataByIDsResponse
	(*BinaryMetadata)(nil),                            // 19: viam.app.data.v1.BinaryMetadata
	(*DeleteTabularDataByFilterRequest)(nil),          // 20: viam.app.data.v1.DeleteTabularDataByFilterRequest
	(*DeleteTabularDataByFilterResponse)(nil),         // 21: viam.app.data.v1.DeleteTabularDataByFilterResponse
	(*DeleteBinaryDataByFilterRequest)(nil),           // 22: viam.app.data.v1.DeleteBinaryDataByFilterRequest
	(*DeleteBinaryDataByFilterResponse)(nil),          // 23: viam.app.data.v1.DeleteBinaryDataByFilterResponse
	(*DeleteBinaryDataByIDsRequest)(nil),              // 24: viam.app.data.v1.DeleteBinaryDataByIDsRequest
	(*DeleteBinaryDataByIDsResponse)(nil),             // 25: viam.app.data.v1.DeleteBinaryDataByIDsResponse
	(*AddTagsToBinaryDataByFileIDsRequest)(nil),       // 26: viam.app.data.v1.AddTagsToBinaryDataByFileIDsRequest
	(*AddTagsToBinaryDataByFileIDsResponse)(nil),      // 27: viam.app.data.v1.AddTagsToBinaryDataByFileIDsResponse
	(*AddTagsToBinaryDataByFilterRequest)(nil),        // 28: viam.app.data.v1.AddTagsToBinaryDataByFilterRequest
	(*AddTagsToBinaryDataByFilterResponse)(nil),       // 29: viam.app.data.v1.AddTagsToBinaryDataByFilterResponse
	(*RemoveTagsFromBinaryDataByFileIDsRequest)(nil),  // 30: viam.app.data.v1.RemoveTagsFromBinaryDataByFileIDsRequest
	(*RemoveTagsFromBinaryDataByFileIDsResponse)(nil), // 31: viam.app.data.v1.RemoveTagsFromBinaryDataByFileIDsResponse
	(*RemoveTagsFromBinaryDataByFilterRequest)(nil),   // 32: viam.app.data.v1.RemoveTagsFromBinaryDataByFilterRequest
	(*RemoveTagsFromBinaryDataByFilterResponse)(nil),  // 33: viam.app.data.v1.RemoveTagsFromBinaryDataByFilterResponse
	(*TagsByFilterRequest)(nil),                       // 34: viam.app.data.v1.TagsByFilterRequest
	(*TagsByFilterResponse)(nil),                      // 35: viam.app.data.v1.TagsByFilterResponse
	(*SubmitTrainingJobRequest)(nil),                  // 36: viam.app.data.v1.SubmitTrainingJobRequest
	(*SubmitTrainingJobResponse)(nil),                 // 37: viam.app.data.v1.SubmitTrainingJobResponse
	(*GetTrainingJobRequest)(nil),                     // 38: viam.app.data.v1.GetTrainingJobRequest
	(*GetTrainingJobResponse)(nil),                    // 39: viam.app.data.v1.GetTrainingJobResponse
	(*TrainingJobMetadata)(nil),                       // 40: viam.app.data.v1.TrainingJobMetadata
	(*TrainingJob)(nil),                               // 41: viam.app.data.v1.TrainingJob
	nil,                                               // 42: viam.app.data.v1.CaptureMetadata.MethodParametersEntry
	(*timestamppb.Timestamp)(nil),                     // 43: google.protobuf.Timestamp
	(*structpb.Struct)(nil),                           // 44: google.protobuf.Struct
	(*anypb.Any)(nil),                                 // 45: google.protobuf.Any
}
var file_app_data_v1_data_proto_depIdxs = []int32{
	1,  // 0: viam.app.data.v1.Result.status:type_name -> viam.app.data.v1.Status
	7,  // 1: viam.app.data.v1.DataRequest.filter:type_name -> viam.app.data.v1.Filter
	0,  // 2: viam.app.data.v1.DataRequest.sort_order:type_name -> viam.app.data.v1.Order
	10, // 3: viam.app.data.v1.Filter.interval:type_name -> viam.app.data.v1.CaptureInterval
	8,  // 4: viam.app.data.v1.Filter.tags_filter:type_name -> viam.app.data.v1.TagsFilter
	2,  // 5: viam.app.data.v1.TagsFilter.type:type_name -> viam.app.data.v1.TagsFilterType
	42, // 6: viam.app.data.v1.CaptureMetadata.method_parameters:type_name -> viam.app.data.v1.CaptureMetadata.MethodParametersEntry
	43, // 7: viam.app.data.v1.CaptureInterval.start:type_name -> google.protobuf.Timestamp
	43, // 8: viam.app.data.v1.CaptureInterval.end:type_name -> google.protobuf.Timestamp
	6,  // 9: viam.app.data.v1.TabularDataByFilterRequest.data_request:type_name -> viam.app.data.v1.DataRequest
	9,  // 10: viam.app.data.v1.TabularDataByFilterResponse.metadata:type_name -> viam.app.data.v1.CaptureMetadata
	13, // 11: viam.app.data.v1.TabularDataByFilterResponse.data:type_name -> viam.app.data.v1.TabularData
	44, // 12: viam.app.data.v1.TabularData.data:type_name -> google.protobuf.Struct
	43, // 13: viam.app.data.v1.TabularData.time_requested:type_name -> google.protobuf.Timestamp
	43, // 14: viam.app.data.v1.TabularData.time_received:type_name -> google.protobuf.Timestamp
	19, // 15: viam.app.data.v1.BinaryData.metadata:type_name -> viam.app.data.v1.BinaryMetadata
	6,  // 16: viam.app.data.v1.BinaryDataByFilterRequest.data_request:type_name -> viam.app.data.v1.DataRequest
	14, // 17: viam.app.data.v1.BinaryDataByFilterResponse.data:type_name -> viam.app.data.v1.BinaryData
	14, // 18: viam.app.data.v1.BinaryDataByIDsResponse.data:type_name -> viam.app.data.v1.BinaryData
	9,  // 19: viam.app.data.v1.BinaryMetadata.capture_metadata:type_name -> viam.app.data.v1.CaptureMetadata
	43, // 20: viam.app.data.v1.BinaryMetadata.time_requested:type_name -> google.protobuf.Timestamp
	43, // 21: viam.app.data.v1.BinaryMetadata.time_received:type_name -> google.protobuf.Timestamp
	7,  // 22: viam.app.data.v1.DeleteTabularDataByFilterRequest.filter:type_name -> viam.app.data.v1.Filter
	5,  // 23: viam.app.data.v1.DeleteTabularDataByFilterResponse.result:type_name -> viam.app.data.v1.Result
	7,  // 24: viam.app.data.v1.DeleteBinaryDataByFilterRequest.filter:type_name -> viam.app.data.v1.Filter
	5,  // 25: viam.app.data.v1.DeleteBinaryDataByFilterResponse.result:type_name -> viam.app.data.v1.Result
	5,  // 26: viam.app.data.v1.DeleteBinaryDataByIDsResponse.result:type_name -> viam.app.data.v1.Result
	7,  // 27: viam.app.data.v1.AddTagsToBinaryDataByFilterRequest.filter:type_name -> viam.app.data.v1.Filter
	7,  // 28: viam.app.data.v1.RemoveTagsFromBinaryDataByFilterRequest.filter:type_name -> viam.app.data.v1.Filter
	7,  // 29: viam.app.data.v1.TagsByFilterRequest.filter:type_name -> viam.app.data.v1.Filter
	7,  // 30: viam.app.data.v1.SubmitTrainingJobRequest.filter:type_name -> viam.app.data.v1.Filter
	3,  // 31: viam.app.data.v1.SubmitTrainingJobRequest.model_type:type_name -> viam.app.data.v1.ModelType
	40, // 32: viam.app.data.v1.GetTrainingJobResponse.metadata:type_name -> viam.app.data.v1.TrainingJobMetadata
	36, // 33: viam.app.data.v1.TrainingJobMetadata.request:type_name -> viam.app.data.v1.SubmitTrainingJobRequest
	4,  // 34: viam.app.data.v1.TrainingJobMetadata.status:type_name -> viam.app.data.v1.TrainingStatus
	43, // 35: viam.app.data.v1.TrainingJobMetadata.created_on:type_name -> google.protobuf.Timestamp
	43, // 36: viam.app.data.v1.TrainingJobMetadata.last_modified:type_name -> google.protobuf.Timestamp
	40, // 37: viam.app.data.v1.TrainingJob.metadata:type_name -> viam.app.data.v1.TrainingJobMetadata
	44, // 38: viam.app.data.v1.TrainingJob.model_metadata:type_name -> google.protobuf.Struct
	45, // 39: viam.app.data.v1.CaptureMetadata.MethodParametersEntry.value:type_name -> google.protobuf.Any
	11, // 40: viam.app.data.v1.DataService.TabularDataByFilter:input_type -> viam.app.data.v1.TabularDataByFilterRequest
	15, // 41: viam.app.data.v1.DataService.BinaryDataByFilter:input_type -> viam.app.data.v1.BinaryDataByFilterRequest
	17, // 42: viam.app.data.v1.DataService.BinaryDataByIDs:input_type -> viam.app.data.v1.BinaryDataByIDsRequest
	20, // 43: viam.app.data.v1.DataService.DeleteTabularDataByFilter:input_type -> viam.app.data.v1.DeleteTabularDataByFilterRequest
	22, // 44: viam.app.data.v1.DataService.DeleteBinaryDataByFilter:input_type -> viam.app.data.v1.DeleteBinaryDataByFilterRequest
	24, // 45: viam.app.data.v1.DataService.DeleteBinaryDataByIDs:input_type -> viam.app.data.v1.DeleteBinaryDataByIDsRequest
	26, // 46: viam.app.data.v1.DataService.AddTagsToBinaryDataByFileIDs:input_type -> viam.app.data.v1.AddTagsToBinaryDataByFileIDsRequest
	28, // 47: viam.app.data.v1.DataService.AddTagsToBinaryDataByFilter:input_type -> viam.app.data.v1.AddTagsToBinaryDataByFilterRequest
	30, // 48: viam.app.data.v1.DataService.RemoveTagsFromBinaryDataByFileIDs:input_type -> viam.app.data.v1.RemoveTagsFromBinaryDataByFileIDsRequest
	32, // 49: viam.app.data.v1.DataService.RemoveTagsFromBinaryDataByFilter:input_type -> viam.app.data.v1.RemoveTagsFromBinaryDataByFilterRequest
	34, // 50: viam.app.data.v1.DataService.TagsByFilter:input_type -> viam.app.data.v1.TagsByFilterRequest
	36, // 51: viam.app.data.v1.DataService.SubmitTrainingJob:input_type -> viam.app.data.v1.SubmitTrainingJobRequest
	38, // 52: viam.app.data.v1.DataService.GetTrainingJob:input_type -> viam.app.data.v1.GetTrainingJobRequest
	12, // 53: viam.app.data.v1.DataService.TabularDataByFilter:output_type -> viam.app.data.v1.TabularDataByFilterResponse
	16, // 54: viam.app.data.v1.DataService.BinaryDataByFilter:output_type -> viam.app.data.v1.BinaryDataByFilterResponse
	18, // 55: viam.app.data.v1.DataService.BinaryDataByIDs:output_type -> viam.app.data.v1.BinaryDataByIDsResponse
	21, // 56: viam.app.data.v1.DataService.DeleteTabularDataByFilter:output_type -> viam.app.data.v1.DeleteTabularDataByFilterResponse
	23, // 57: viam.app.data.v1.DataService.DeleteBinaryDataByFilter:output_type -> viam.app.data.v1.DeleteBinaryDataByFilterResponse
	25, // 58: viam.app.data.v1.DataService.DeleteBinaryDataByIDs:output_type -> viam.app.data.v1.DeleteBinaryDataByIDsResponse
	27, // 59: viam.app.data.v1.DataService.AddTagsToBinaryDataByFileIDs:output_type -> viam.app.data.v1.AddTagsToBinaryDataByFileIDsResponse
	29, // 60: viam.app.data.v1.DataService.AddTagsToBinaryDataByFilter:output_type -> viam.app.data.v1.AddTagsToBinaryDataByFilterResponse
	31, // 61: viam.app.data.v1.DataService.RemoveTagsFromBinaryDataByFileIDs:output_type -> viam.app.data.v1.RemoveTagsFromBinaryDataByFileIDsResponse
	33, // 62: viam.app.data.v1.DataService.RemoveTagsFromBinaryDataByFilter:output_type -> viam.app.data.v1.RemoveTagsFromBinaryDataByFilterResponse
	35, // 63: viam.app.data.v1.DataService.TagsByFilter:output_type -> viam.app.data.v1.TagsByFilterResponse
	37, // 64: viam.app.data.v1.DataService.SubmitTrainingJob:output_type -> viam.app.data.v1.SubmitTrainingJobResponse
	39, // 65: viam.app.data.v1.DataService.GetTrainingJob:output_type -> viam.app.data.v1.GetTrainingJobResponse
	53, // [53:66] is the sub-list for method output_type
	40, // [40:53] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_app_data_v1_data_proto_init() }
func file_app_data_v1_data_proto_init() {
	if File_app_data_v1_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_app_data_v1_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptureMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptureInterval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TabularDataByFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TabularDataByFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TabularData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BinaryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BinaryDataByFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BinaryDataByFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BinaryDataByIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BinaryDataByIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BinaryMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTabularDataByFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTabularDataByFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBinaryDataByFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBinaryDataByFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBinaryDataByIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBinaryDataByIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTagsToBinaryDataByFileIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTagsToBinaryDataByFileIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTagsToBinaryDataByFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTagsToBinaryDataByFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTagsFromBinaryDataByFileIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTagsFromBinaryDataByFileIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTagsFromBinaryDataByFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTagsFromBinaryDataByFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagsByFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagsByFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitTrainingJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitTrainingJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrainingJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrainingJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainingJobMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_data_v1_data_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainingJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_data_v1_data_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_app_data_v1_data_proto_goTypes,
		DependencyIndexes: file_app_data_v1_data_proto_depIdxs,
		EnumInfos:         file_app_data_v1_data_proto_enumTypes,
		MessageInfos:      file_app_data_v1_data_proto_msgTypes,
	}.Build()
	File_app_data_v1_data_proto = out.File
	file_app_data_v1_data_proto_rawDesc = nil
	file_app_data_v1_data_proto_goTypes = nil
	file_app_data_v1_data_proto_depIdxs = nil
}
