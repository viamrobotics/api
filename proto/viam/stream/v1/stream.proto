syntax = "proto3";

package proto.stream.v1;

option go_package = "github.com/edaniels/gostream/proto/stream/v1";

// A StreamService is used to coordinate with a WebRTC the listing,
// addition, and removal of registered video streams.
// TODO(https://github.com/viamrobotics/rdk/issues/509): support removal
service StreamService {
  // ListStreams returns all streams registered.
  rpc ListStreams(ListStreamsRequest) returns (ListStreamsResponse);

  // AddStream requests a particular stream be added.
  rpc AddStream(AddStreamRequest) returns (AddStreamResponse);

  // GetStreamOptions returns the options for a particular stream.
  rpc GetStreamOptions(GetStreamOptionsRequest) returns (GetStreamOptionsResponse);

  // SetStreamOptions sets the options for a particular stream.
  rpc SetStreamOptions(SetStreamOptionsRequest) returns (SetStreamOptionsResponse);

  // RemoveStream requests a particular stream be removed. If the calling client
  // is the last to be receiving the stream, it will attempt to be stopped to
  // conserve resources.
  rpc RemoveStream(RemoveStreamRequest) returns (RemoveStreamResponse);
}

// ListStreamsRequest requests all streams registered.
message ListStreamsRequest {}

// A ListStreamsResponse details streams registered.
message ListStreamsResponse {
  repeated string names = 1;
}

// A AddStreamRequest requests the given stream be added to the connection.
message AddStreamRequest {
  string name = 1;
}

// AddStreamResponse is returned after a successful AddStreamRequest.
message AddStreamResponse {}

// A RemoveStreamRequest requests the given stream be removed from the connection.
message RemoveStreamRequest {
  string name = 1;
}

// RemoveStreamResponse is returned after a successful RemoveStreamRequest.
message RemoveStreamResponse {}

// Resolution details the width and height of a stream.
message Resolution {
  int32 width = 1;
  int32 height = 2;
}

// GetStreamOptionsRequest requests the options for a particular stream.
message GetStreamOptionsRequest {
  string name = 1;
}

// GetStreamOptionsResponse details the options for a particular stream.
message GetStreamOptionsResponse {
  repeated Resolution resolutions = 1;
}

// SetStreamOptionsRequest sets the options for a particular stream.
message SetStreamOptionsRequest {
  string name = 1;
  Resolution resolution = 2;
}

// SetStreamOptionsResponse is returned after a successful SetStreamOptionsRequest.
message SetStreamOptionsResponse {}
