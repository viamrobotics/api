// source: service/sensors/v1/sensors.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var common_v1_common_pb = require('../../../common/v1/common_pb.js');
goog.object.extend(proto, common_v1_common_pb);
var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.viam.service.sensors.v1.GetReadingsRequest', null, global);
goog.exportSymbol('proto.viam.service.sensors.v1.GetReadingsResponse', null, global);
goog.exportSymbol('proto.viam.service.sensors.v1.GetSensorsRequest', null, global);
goog.exportSymbol('proto.viam.service.sensors.v1.GetSensorsResponse', null, global);
goog.exportSymbol('proto.viam.service.sensors.v1.Readings', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.sensors.v1.GetSensorsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.sensors.v1.GetSensorsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.sensors.v1.GetSensorsRequest.displayName = 'proto.viam.service.sensors.v1.GetSensorsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.sensors.v1.GetSensorsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.sensors.v1.GetSensorsResponse.repeatedFields_, null);
};
goog.inherits(proto.viam.service.sensors.v1.GetSensorsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.sensors.v1.GetSensorsResponse.displayName = 'proto.viam.service.sensors.v1.GetSensorsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.sensors.v1.GetReadingsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.sensors.v1.GetReadingsRequest.repeatedFields_, null);
};
goog.inherits(proto.viam.service.sensors.v1.GetReadingsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.sensors.v1.GetReadingsRequest.displayName = 'proto.viam.service.sensors.v1.GetReadingsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.sensors.v1.Readings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.sensors.v1.Readings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.sensors.v1.Readings.displayName = 'proto.viam.service.sensors.v1.Readings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.sensors.v1.GetReadingsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.sensors.v1.GetReadingsResponse.repeatedFields_, null);
};
goog.inherits(proto.viam.service.sensors.v1.GetReadingsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.sensors.v1.GetReadingsResponse.displayName = 'proto.viam.service.sensors.v1.GetReadingsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.sensors.v1.GetSensorsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.sensors.v1.GetSensorsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.sensors.v1.GetSensorsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.sensors.v1.GetSensorsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.sensors.v1.GetSensorsRequest}
 */
proto.viam.service.sensors.v1.GetSensorsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.sensors.v1.GetSensorsRequest;
  return proto.viam.service.sensors.v1.GetSensorsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.sensors.v1.GetSensorsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.sensors.v1.GetSensorsRequest}
 */
proto.viam.service.sensors.v1.GetSensorsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.sensors.v1.GetSensorsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.sensors.v1.GetSensorsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.sensors.v1.GetSensorsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.sensors.v1.GetSensorsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.sensors.v1.GetSensorsRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.sensors.v1.GetSensorsRequest} returns this
 */
proto.viam.service.sensors.v1.GetSensorsRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.sensors.v1.GetSensorsRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.sensors.v1.GetSensorsRequest} returns this
*/
proto.viam.service.sensors.v1.GetSensorsRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.sensors.v1.GetSensorsRequest} returns this
 */
proto.viam.service.sensors.v1.GetSensorsRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.sensors.v1.GetSensorsRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.sensors.v1.GetSensorsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.sensors.v1.GetSensorsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.sensors.v1.GetSensorsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.sensors.v1.GetSensorsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.sensors.v1.GetSensorsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    sensorNamesList: jspb.Message.toObjectList(msg.getSensorNamesList(),
    common_v1_common_pb.ResourceName.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.sensors.v1.GetSensorsResponse}
 */
proto.viam.service.sensors.v1.GetSensorsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.sensors.v1.GetSensorsResponse;
  return proto.viam.service.sensors.v1.GetSensorsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.sensors.v1.GetSensorsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.sensors.v1.GetSensorsResponse}
 */
proto.viam.service.sensors.v1.GetSensorsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_v1_common_pb.ResourceName;
      reader.readMessage(value,common_v1_common_pb.ResourceName.deserializeBinaryFromReader);
      msg.addSensorNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.sensors.v1.GetSensorsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.sensors.v1.GetSensorsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.sensors.v1.GetSensorsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.sensors.v1.GetSensorsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSensorNamesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      common_v1_common_pb.ResourceName.serializeBinaryToWriter
    );
  }
};


/**
 * repeated viam.common.v1.ResourceName sensor_names = 1;
 * @return {!Array<!proto.viam.common.v1.ResourceName>}
 */
proto.viam.service.sensors.v1.GetSensorsResponse.prototype.getSensorNamesList = function() {
  return /** @type{!Array<!proto.viam.common.v1.ResourceName>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_v1_common_pb.ResourceName, 1));
};


/**
 * @param {!Array<!proto.viam.common.v1.ResourceName>} value
 * @return {!proto.viam.service.sensors.v1.GetSensorsResponse} returns this
*/
proto.viam.service.sensors.v1.GetSensorsResponse.prototype.setSensorNamesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.viam.common.v1.ResourceName=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.common.v1.ResourceName}
 */
proto.viam.service.sensors.v1.GetSensorsResponse.prototype.addSensorNames = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.viam.common.v1.ResourceName, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.sensors.v1.GetSensorsResponse} returns this
 */
proto.viam.service.sensors.v1.GetSensorsResponse.prototype.clearSensorNamesList = function() {
  return this.setSensorNamesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.sensors.v1.GetReadingsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.sensors.v1.GetReadingsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.sensors.v1.GetReadingsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.sensors.v1.GetReadingsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.sensors.v1.GetReadingsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sensorNamesList: jspb.Message.toObjectList(msg.getSensorNamesList(),
    common_v1_common_pb.ResourceName.toObject, includeInstance),
    extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.sensors.v1.GetReadingsRequest}
 */
proto.viam.service.sensors.v1.GetReadingsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.sensors.v1.GetReadingsRequest;
  return proto.viam.service.sensors.v1.GetReadingsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.sensors.v1.GetReadingsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.sensors.v1.GetReadingsRequest}
 */
proto.viam.service.sensors.v1.GetReadingsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new common_v1_common_pb.ResourceName;
      reader.readMessage(value,common_v1_common_pb.ResourceName.deserializeBinaryFromReader);
      msg.addSensorNames(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.sensors.v1.GetReadingsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.sensors.v1.GetReadingsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.sensors.v1.GetReadingsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.sensors.v1.GetReadingsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSensorNamesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      common_v1_common_pb.ResourceName.serializeBinaryToWriter
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.sensors.v1.GetReadingsRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.sensors.v1.GetReadingsRequest} returns this
 */
proto.viam.service.sensors.v1.GetReadingsRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated viam.common.v1.ResourceName sensor_names = 2;
 * @return {!Array<!proto.viam.common.v1.ResourceName>}
 */
proto.viam.service.sensors.v1.GetReadingsRequest.prototype.getSensorNamesList = function() {
  return /** @type{!Array<!proto.viam.common.v1.ResourceName>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_v1_common_pb.ResourceName, 2));
};


/**
 * @param {!Array<!proto.viam.common.v1.ResourceName>} value
 * @return {!proto.viam.service.sensors.v1.GetReadingsRequest} returns this
*/
proto.viam.service.sensors.v1.GetReadingsRequest.prototype.setSensorNamesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.viam.common.v1.ResourceName=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.common.v1.ResourceName}
 */
proto.viam.service.sensors.v1.GetReadingsRequest.prototype.addSensorNames = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.viam.common.v1.ResourceName, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.sensors.v1.GetReadingsRequest} returns this
 */
proto.viam.service.sensors.v1.GetReadingsRequest.prototype.clearSensorNamesList = function() {
  return this.setSensorNamesList([]);
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.sensors.v1.GetReadingsRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.sensors.v1.GetReadingsRequest} returns this
*/
proto.viam.service.sensors.v1.GetReadingsRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.sensors.v1.GetReadingsRequest} returns this
 */
proto.viam.service.sensors.v1.GetReadingsRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.sensors.v1.GetReadingsRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.sensors.v1.Readings.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.sensors.v1.Readings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.sensors.v1.Readings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.sensors.v1.Readings.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = msg.getName()) && common_v1_common_pb.ResourceName.toObject(includeInstance, f),
    readingsMap: (f = msg.getReadingsMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.sensors.v1.Readings}
 */
proto.viam.service.sensors.v1.Readings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.sensors.v1.Readings;
  return proto.viam.service.sensors.v1.Readings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.sensors.v1.Readings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.sensors.v1.Readings}
 */
proto.viam.service.sensors.v1.Readings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_v1_common_pb.ResourceName;
      reader.readMessage(value,common_v1_common_pb.ResourceName.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 2:
      var value = msg.getReadingsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader, "", new proto.google.protobuf.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.sensors.v1.Readings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.sensors.v1.Readings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.sensors.v1.Readings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.sensors.v1.Readings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_v1_common_pb.ResourceName.serializeBinaryToWriter
    );
  }
  f = message.getReadingsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
};


/**
 * optional viam.common.v1.ResourceName name = 1;
 * @return {?proto.viam.common.v1.ResourceName}
 */
proto.viam.service.sensors.v1.Readings.prototype.getName = function() {
  return /** @type{?proto.viam.common.v1.ResourceName} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.ResourceName, 1));
};


/**
 * @param {?proto.viam.common.v1.ResourceName|undefined} value
 * @return {!proto.viam.service.sensors.v1.Readings} returns this
*/
proto.viam.service.sensors.v1.Readings.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.sensors.v1.Readings} returns this
 */
proto.viam.service.sensors.v1.Readings.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.sensors.v1.Readings.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<string, google.protobuf.Value> readings = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.viam.service.sensors.v1.Readings.prototype.getReadingsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.viam.service.sensors.v1.Readings} returns this
 */
proto.viam.service.sensors.v1.Readings.prototype.clearReadingsMap = function() {
  this.getReadingsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.sensors.v1.GetReadingsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.sensors.v1.GetReadingsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.sensors.v1.GetReadingsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.sensors.v1.GetReadingsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.sensors.v1.GetReadingsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    readingsList: jspb.Message.toObjectList(msg.getReadingsList(),
    proto.viam.service.sensors.v1.Readings.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.sensors.v1.GetReadingsResponse}
 */
proto.viam.service.sensors.v1.GetReadingsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.sensors.v1.GetReadingsResponse;
  return proto.viam.service.sensors.v1.GetReadingsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.sensors.v1.GetReadingsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.sensors.v1.GetReadingsResponse}
 */
proto.viam.service.sensors.v1.GetReadingsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.service.sensors.v1.Readings;
      reader.readMessage(value,proto.viam.service.sensors.v1.Readings.deserializeBinaryFromReader);
      msg.addReadings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.sensors.v1.GetReadingsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.sensors.v1.GetReadingsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.sensors.v1.GetReadingsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.sensors.v1.GetReadingsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReadingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.viam.service.sensors.v1.Readings.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Readings readings = 1;
 * @return {!Array<!proto.viam.service.sensors.v1.Readings>}
 */
proto.viam.service.sensors.v1.GetReadingsResponse.prototype.getReadingsList = function() {
  return /** @type{!Array<!proto.viam.service.sensors.v1.Readings>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.service.sensors.v1.Readings, 1));
};


/**
 * @param {!Array<!proto.viam.service.sensors.v1.Readings>} value
 * @return {!proto.viam.service.sensors.v1.GetReadingsResponse} returns this
*/
proto.viam.service.sensors.v1.GetReadingsResponse.prototype.setReadingsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.viam.service.sensors.v1.Readings=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.service.sensors.v1.Readings}
 */
proto.viam.service.sensors.v1.GetReadingsResponse.prototype.addReadings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.viam.service.sensors.v1.Readings, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.sensors.v1.GetReadingsResponse} returns this
 */
proto.viam.service.sensors.v1.GetReadingsResponse.prototype.clearReadingsList = function() {
  return this.setReadingsList([]);
};


goog.object.extend(exports, proto.viam.service.sensors.v1);
