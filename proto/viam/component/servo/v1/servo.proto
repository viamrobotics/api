syntax = "proto3";

package viam.component.servo.v1;

import "common/v1/common.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";

option go_package = "go.viam.com/api/component/servo/v1";
option java_package = "com.viam.component.servo.v1";

// A ServoService maintains all servos associated with a robot
service ServoService {
  // Move requests the servo of the underlying robot to move.
  // This will block until done or a new operation cancels this one
  rpc Move(MoveRequest) returns (MoveResponse) {
    option (common.v1.safety_heartbeat_monitored) = true;
    option (google.api.http) = {
      put: "/viam/api/v1/component/servo/{name}/move"
    };
  }

  // GetPosition returns the current set angle (degrees) of the servo of the underlying robot.
  rpc GetPosition(GetPositionRequest) returns (GetPositionResponse) {
    option (google.api.http) = {
      get: "/viam/api/v1/component/servo/{name}/position"
    };
  }

  // Stop stops a robot's servo
  rpc Stop(StopRequest) returns (StopResponse) {
    option (google.api.http) = {
      post: "/viam/api/v1/component/servo/{name}/stop"
    };
  }

  // IsMoving reports if a component is in motion
  rpc IsMoving(IsMovingRequest) returns (IsMovingResponse) {
    option (google.api.http) = {
      get: "/viam/api/v1/component/servo/{name}/is_moving"
    };
  }

  // DoCommand sends/receives arbitrary commands
  rpc DoCommand(common.v1.DoCommandRequest) returns (common.v1.DoCommandResponse) {
    option (google.api.http) = {
      post: "/viam/api/v1/component/servo/{name}/do_command"
    };
  }

  // GetGeometries returns the geometries of the component in their current configuration
  rpc GetGeometries(common.v1.GetGeometriesRequest) returns (common.v1.GetGeometriesResponse) {
    option (google.api.http) = {
      get: "/viam/api/v1/component/servo/{name}/geometries"
    };
  }
}

message MoveRequest {
  // the name of the servo, as registered
  string name = 1;
  // the degrees by which to rotate the servo.
  uint32 angle_deg = 2;
  // Additional arguments to the method
  google.protobuf.Struct extra = 99;
}

message MoveResponse {}

message GetPositionRequest {
  // the name of the servo, as registered
  string name = 1;
  // Additional arguments to the method
  google.protobuf.Struct extra = 99;
}

message GetPositionResponse {
  // the degrees from neutral by which the servo is currently rotated.
  uint32 position_deg = 1;
}

message StopRequest {
  // Name of a servo
  string name = 1;
  // Additional arguments to the method
  google.protobuf.Struct extra = 99;
}

message StopResponse {}

message Status {
  uint32 position_deg = 1;
  bool is_moving = 2;
}

message IsMovingRequest {
  string name = 1;
}

message IsMovingResponse {
  bool is_moving = 1;
}
