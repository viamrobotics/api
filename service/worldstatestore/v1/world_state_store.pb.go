// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: service/worldstatestore/v1/world_state_store.proto

package v1

import (
	v1 "go.viam.com/api/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransformChangeType int32

const (
	TransformChangeType_TRANSFORM_CHANGE_TYPE_UNSPECIFIED TransformChangeType = 0
	TransformChangeType_TRANSFORM_CHANGE_TYPE_ADDED       TransformChangeType = 1
	TransformChangeType_TRANSFORM_CHANGE_TYPE_REMOVED     TransformChangeType = 2
	TransformChangeType_TRANSFORM_CHANGE_TYPE_UPDATED     TransformChangeType = 3
)

// Enum value maps for TransformChangeType.
var (
	TransformChangeType_name = map[int32]string{
		0: "TRANSFORM_CHANGE_TYPE_UNSPECIFIED",
		1: "TRANSFORM_CHANGE_TYPE_ADDED",
		2: "TRANSFORM_CHANGE_TYPE_REMOVED",
		3: "TRANSFORM_CHANGE_TYPE_UPDATED",
	}
	TransformChangeType_value = map[string]int32{
		"TRANSFORM_CHANGE_TYPE_UNSPECIFIED": 0,
		"TRANSFORM_CHANGE_TYPE_ADDED":       1,
		"TRANSFORM_CHANGE_TYPE_REMOVED":     2,
		"TRANSFORM_CHANGE_TYPE_UPDATED":     3,
	}
)

func (x TransformChangeType) Enum() *TransformChangeType {
	p := new(TransformChangeType)
	*p = x
	return p
}

func (x TransformChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransformChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_service_worldstatestore_v1_world_state_store_proto_enumTypes[0].Descriptor()
}

func (TransformChangeType) Type() protoreflect.EnumType {
	return &file_service_worldstatestore_v1_world_state_store_proto_enumTypes[0]
}

func (x TransformChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransformChangeType.Descriptor instead.
func (TransformChangeType) EnumDescriptor() ([]byte, []int) {
	return file_service_worldstatestore_v1_world_state_store_proto_rawDescGZIP(), []int{0}
}

type ListUUIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the world object store service
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Additional arguments to the method
	Extra *structpb.Struct `protobuf:"bytes,99,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *ListUUIDsRequest) Reset() {
	*x = ListUUIDsRequest{}
	mi := &file_service_worldstatestore_v1_world_state_store_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUUIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUUIDsRequest) ProtoMessage() {}

func (x *ListUUIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_worldstatestore_v1_world_state_store_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUUIDsRequest.ProtoReflect.Descriptor instead.
func (*ListUUIDsRequest) Descriptor() ([]byte, []int) {
	return file_service_worldstatestore_v1_world_state_store_proto_rawDescGZIP(), []int{0}
}

func (x *ListUUIDsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListUUIDsRequest) GetExtra() *structpb.Struct {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ListUUIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuids [][]byte `protobuf:"bytes,1,rep,name=uuids,proto3" json:"uuids,omitempty"`
}

func (x *ListUUIDsResponse) Reset() {
	*x = ListUUIDsResponse{}
	mi := &file_service_worldstatestore_v1_world_state_store_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUUIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUUIDsResponse) ProtoMessage() {}

func (x *ListUUIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_worldstatestore_v1_world_state_store_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUUIDsResponse.ProtoReflect.Descriptor instead.
func (*ListUUIDsResponse) Descriptor() ([]byte, []int) {
	return file_service_worldstatestore_v1_world_state_store_proto_rawDescGZIP(), []int{1}
}

func (x *ListUUIDsResponse) GetUuids() [][]byte {
	if x != nil {
		return x.Uuids
	}
	return nil
}

type GetTransformRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the world object store service
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid []byte `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Additional arguments to the method
	Extra *structpb.Struct `protobuf:"bytes,99,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *GetTransformRequest) Reset() {
	*x = GetTransformRequest{}
	mi := &file_service_worldstatestore_v1_world_state_store_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransformRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransformRequest) ProtoMessage() {}

func (x *GetTransformRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_worldstatestore_v1_world_state_store_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransformRequest.ProtoReflect.Descriptor instead.
func (*GetTransformRequest) Descriptor() ([]byte, []int) {
	return file_service_worldstatestore_v1_world_state_store_proto_rawDescGZIP(), []int{2}
}

func (x *GetTransformRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetTransformRequest) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *GetTransformRequest) GetExtra() *structpb.Struct {
	if x != nil {
		return x.Extra
	}
	return nil
}

type GetTransformResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transform *v1.Transform `protobuf:"bytes,2,opt,name=transform,proto3" json:"transform,omitempty"`
}

func (x *GetTransformResponse) Reset() {
	*x = GetTransformResponse{}
	mi := &file_service_worldstatestore_v1_world_state_store_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransformResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransformResponse) ProtoMessage() {}

func (x *GetTransformResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_worldstatestore_v1_world_state_store_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransformResponse.ProtoReflect.Descriptor instead.
func (*GetTransformResponse) Descriptor() ([]byte, []int) {
	return file_service_worldstatestore_v1_world_state_store_proto_rawDescGZIP(), []int{3}
}

func (x *GetTransformResponse) GetTransform() *v1.Transform {
	if x != nil {
		return x.Transform
	}
	return nil
}

type StreamTransformChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the world object store service
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Additional arguments to the method
	Extra *structpb.Struct `protobuf:"bytes,99,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *StreamTransformChangesRequest) Reset() {
	*x = StreamTransformChangesRequest{}
	mi := &file_service_worldstatestore_v1_world_state_store_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTransformChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTransformChangesRequest) ProtoMessage() {}

func (x *StreamTransformChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_worldstatestore_v1_world_state_store_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTransformChangesRequest.ProtoReflect.Descriptor instead.
func (*StreamTransformChangesRequest) Descriptor() ([]byte, []int) {
	return file_service_worldstatestore_v1_world_state_store_proto_rawDescGZIP(), []int{4}
}

func (x *StreamTransformChangesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StreamTransformChangesRequest) GetExtra() *structpb.Struct {
	if x != nil {
		return x.Extra
	}
	return nil
}

type StreamTransformChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChangeType TransformChangeType `protobuf:"varint,1,opt,name=change_type,json=changeType,proto3,enum=viam.service.worldstatestore.v1.TransformChangeType" json:"change_type,omitempty"`
	Transform  *v1.Transform       `protobuf:"bytes,2,opt,name=transform,proto3" json:"transform,omitempty"`
	// The field mask of the transform that has changed, if any. For added transforms, this will be empty. For updated
	// transforms, this will be the fields that have changed. For removed transforms, this will be the transform's UUID
	// path.
	UpdatedFields *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=updated_fields,json=updatedFields,proto3" json:"updated_fields,omitempty"`
}

func (x *StreamTransformChangesResponse) Reset() {
	*x = StreamTransformChangesResponse{}
	mi := &file_service_worldstatestore_v1_world_state_store_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTransformChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTransformChangesResponse) ProtoMessage() {}

func (x *StreamTransformChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_worldstatestore_v1_world_state_store_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTransformChangesResponse.ProtoReflect.Descriptor instead.
func (*StreamTransformChangesResponse) Descriptor() ([]byte, []int) {
	return file_service_worldstatestore_v1_world_state_store_proto_rawDescGZIP(), []int{5}
}

func (x *StreamTransformChangesResponse) GetChangeType() TransformChangeType {
	if x != nil {
		return x.ChangeType
	}
	return TransformChangeType_TRANSFORM_CHANGE_TYPE_UNSPECIFIED
}

func (x *StreamTransformChangesResponse) GetTransform() *v1.Transform {
	if x != nil {
		return x.Transform
	}
	return nil
}

func (x *StreamTransformChangesResponse) GetUpdatedFields() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdatedFields
	}
	return nil
}

var File_service_worldstatestore_v1_world_state_store_proto protoreflect.FileDescriptor

var file_service_worldstatestore_v1_world_state_store_proto_rawDesc = []byte{
	0x0a, 0x32, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x55, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x63, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x22, 0x29, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x75, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x75, 0x75, 0x69, 0x64, 0x73, 0x22, 0x6c, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x4f, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x62, 0x0a, 0x1d,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2d, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x22, 0xf3, 0x01, 0x0a, 0x1e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x76, 0x69, 0x61, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x41, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x2a, 0xa3, 0x01, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25,
	0x0a, 0x21, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x4f,
	0x52, 0x4d, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41,
	0x44, 0x44, 0x45, 0x44, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46,
	0x4f, 0x52, 0x4d, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x03, 0x32, 0x8c, 0x05, 0x0a,
	0x16, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x74, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x55, 0x49, 0x44, 0x73, 0x12, 0x31, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x55,
	0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x34, 0x2e,
	0x76, 0x69, 0x61, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xe9, 0x01, 0x0a,
	0x16, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x3e, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x46,
	0x12, 0x44, 0x2f, 0x76, 0x69, 0x61, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x30, 0x01, 0x12, 0x90, 0x01, 0x0a, 0x09, 0x44, 0x6f, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x20, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x38, 0x22, 0x36, 0x2f, 0x76, 0x69, 0x61, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d,
	0x2f, 0x64, 0x6f, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x51, 0x0a, 0x23, 0x63,
	0x6f, 0x6d, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x5a, 0x2a, 0x67, 0x6f, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_worldstatestore_v1_world_state_store_proto_rawDescOnce sync.Once
	file_service_worldstatestore_v1_world_state_store_proto_rawDescData = file_service_worldstatestore_v1_world_state_store_proto_rawDesc
)

func file_service_worldstatestore_v1_world_state_store_proto_rawDescGZIP() []byte {
	file_service_worldstatestore_v1_world_state_store_proto_rawDescOnce.Do(func() {
		file_service_worldstatestore_v1_world_state_store_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_worldstatestore_v1_world_state_store_proto_rawDescData)
	})
	return file_service_worldstatestore_v1_world_state_store_proto_rawDescData
}

var file_service_worldstatestore_v1_world_state_store_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_service_worldstatestore_v1_world_state_store_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_service_worldstatestore_v1_world_state_store_proto_goTypes = []any{
	(TransformChangeType)(0),               // 0: viam.service.worldstatestore.v1.TransformChangeType
	(*ListUUIDsRequest)(nil),               // 1: viam.service.worldstatestore.v1.ListUUIDsRequest
	(*ListUUIDsResponse)(nil),              // 2: viam.service.worldstatestore.v1.ListUUIDsResponse
	(*GetTransformRequest)(nil),            // 3: viam.service.worldstatestore.v1.GetTransformRequest
	(*GetTransformResponse)(nil),           // 4: viam.service.worldstatestore.v1.GetTransformResponse
	(*StreamTransformChangesRequest)(nil),  // 5: viam.service.worldstatestore.v1.StreamTransformChangesRequest
	(*StreamTransformChangesResponse)(nil), // 6: viam.service.worldstatestore.v1.StreamTransformChangesResponse
	(*structpb.Struct)(nil),                // 7: google.protobuf.Struct
	(*v1.Transform)(nil),                   // 8: viam.common.v1.Transform
	(*fieldmaskpb.FieldMask)(nil),          // 9: google.protobuf.FieldMask
	(*v1.DoCommandRequest)(nil),            // 10: viam.common.v1.DoCommandRequest
	(*v1.DoCommandResponse)(nil),           // 11: viam.common.v1.DoCommandResponse
}
var file_service_worldstatestore_v1_world_state_store_proto_depIdxs = []int32{
	7,  // 0: viam.service.worldstatestore.v1.ListUUIDsRequest.extra:type_name -> google.protobuf.Struct
	7,  // 1: viam.service.worldstatestore.v1.GetTransformRequest.extra:type_name -> google.protobuf.Struct
	8,  // 2: viam.service.worldstatestore.v1.GetTransformResponse.transform:type_name -> viam.common.v1.Transform
	7,  // 3: viam.service.worldstatestore.v1.StreamTransformChangesRequest.extra:type_name -> google.protobuf.Struct
	0,  // 4: viam.service.worldstatestore.v1.StreamTransformChangesResponse.change_type:type_name -> viam.service.worldstatestore.v1.TransformChangeType
	8,  // 5: viam.service.worldstatestore.v1.StreamTransformChangesResponse.transform:type_name -> viam.common.v1.Transform
	9,  // 6: viam.service.worldstatestore.v1.StreamTransformChangesResponse.updated_fields:type_name -> google.protobuf.FieldMask
	1,  // 7: viam.service.worldstatestore.v1.WorldStateStoreService.ListUUIDs:input_type -> viam.service.worldstatestore.v1.ListUUIDsRequest
	3,  // 8: viam.service.worldstatestore.v1.WorldStateStoreService.GetTransform:input_type -> viam.service.worldstatestore.v1.GetTransformRequest
	5,  // 9: viam.service.worldstatestore.v1.WorldStateStoreService.StreamTransformChanges:input_type -> viam.service.worldstatestore.v1.StreamTransformChangesRequest
	10, // 10: viam.service.worldstatestore.v1.WorldStateStoreService.DoCommand:input_type -> viam.common.v1.DoCommandRequest
	2,  // 11: viam.service.worldstatestore.v1.WorldStateStoreService.ListUUIDs:output_type -> viam.service.worldstatestore.v1.ListUUIDsResponse
	4,  // 12: viam.service.worldstatestore.v1.WorldStateStoreService.GetTransform:output_type -> viam.service.worldstatestore.v1.GetTransformResponse
	6,  // 13: viam.service.worldstatestore.v1.WorldStateStoreService.StreamTransformChanges:output_type -> viam.service.worldstatestore.v1.StreamTransformChangesResponse
	11, // 14: viam.service.worldstatestore.v1.WorldStateStoreService.DoCommand:output_type -> viam.common.v1.DoCommandResponse
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_service_worldstatestore_v1_world_state_store_proto_init() }
func file_service_worldstatestore_v1_world_state_store_proto_init() {
	if File_service_worldstatestore_v1_world_state_store_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_worldstatestore_v1_world_state_store_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_worldstatestore_v1_world_state_store_proto_goTypes,
		DependencyIndexes: file_service_worldstatestore_v1_world_state_store_proto_depIdxs,
		EnumInfos:         file_service_worldstatestore_v1_world_state_store_proto_enumTypes,
		MessageInfos:      file_service_worldstatestore_v1_world_state_store_proto_msgTypes,
	}.Build()
	File_service_worldstatestore_v1_world_state_store_proto = out.File
	file_service_worldstatestore_v1_world_state_store_proto_rawDesc = nil
	file_service_worldstatestore_v1_world_state_store_proto_goTypes = nil
	file_service_worldstatestore_v1_world_state_store_proto_depIdxs = nil
}
