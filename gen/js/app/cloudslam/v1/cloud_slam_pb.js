// source: app/cloudslam/v1/cloud_slam.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var common_v1_common_pb = require('../../../common/v1/common_pb.js');
goog.object.extend(proto, common_v1_common_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.viam.app.cloudslam.v1.CaptureInterval', null, global);
goog.exportSymbol('proto.viam.app.cloudslam.v1.EndStatus', null, global);
goog.exportSymbol('proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest', null, global);
goog.exportSymbol('proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse', null, global);
goog.exportSymbol('proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest', null, global);
goog.exportSymbol('proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse', null, global);
goog.exportSymbol('proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest', null, global);
goog.exportSymbol('proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse', null, global);
goog.exportSymbol('proto.viam.app.cloudslam.v1.ListMappingSessionsRequest', null, global);
goog.exportSymbol('proto.viam.app.cloudslam.v1.ListMappingSessionsResponse', null, global);
goog.exportSymbol('proto.viam.app.cloudslam.v1.MappingMetadata', null, global);
goog.exportSymbol('proto.viam.app.cloudslam.v1.SensorInfo', null, global);
goog.exportSymbol('proto.viam.app.cloudslam.v1.StartMappingSessionRequest', null, global);
goog.exportSymbol('proto.viam.app.cloudslam.v1.StartMappingSessionResponse', null, global);
goog.exportSymbol('proto.viam.app.cloudslam.v1.StopMappingSessionRequest', null, global);
goog.exportSymbol('proto.viam.app.cloudslam.v1.StopMappingSessionResponse', null, global);
goog.exportSymbol('proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest', null, global);
goog.exportSymbol('proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.app.cloudslam.v1.StartMappingSessionRequest.repeatedFields_, null);
};
goog.inherits(proto.viam.app.cloudslam.v1.StartMappingSessionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.cloudslam.v1.StartMappingSessionRequest.displayName = 'proto.viam.app.cloudslam.v1.StartMappingSessionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.cloudslam.v1.SensorInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.cloudslam.v1.SensorInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.cloudslam.v1.SensorInfo.displayName = 'proto.viam.app.cloudslam.v1.SensorInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.cloudslam.v1.CaptureInterval = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.cloudslam.v1.CaptureInterval, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.cloudslam.v1.CaptureInterval.displayName = 'proto.viam.app.cloudslam.v1.CaptureInterval';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.cloudslam.v1.StartMappingSessionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.cloudslam.v1.StartMappingSessionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.cloudslam.v1.StartMappingSessionResponse.displayName = 'proto.viam.app.cloudslam.v1.StartMappingSessionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest.displayName = 'proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse.displayName = 'proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest.displayName = 'proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse.displayName = 'proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.cloudslam.v1.ListMappingSessionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.cloudslam.v1.ListMappingSessionsRequest.displayName = 'proto.viam.app.cloudslam.v1.ListMappingSessionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.app.cloudslam.v1.ListMappingSessionsResponse.repeatedFields_, null);
};
goog.inherits(proto.viam.app.cloudslam.v1.ListMappingSessionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.cloudslam.v1.ListMappingSessionsResponse.displayName = 'proto.viam.app.cloudslam.v1.ListMappingSessionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.cloudslam.v1.StopMappingSessionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.cloudslam.v1.StopMappingSessionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.cloudslam.v1.StopMappingSessionRequest.displayName = 'proto.viam.app.cloudslam.v1.StopMappingSessionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.cloudslam.v1.StopMappingSessionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.cloudslam.v1.StopMappingSessionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.cloudslam.v1.StopMappingSessionResponse.displayName = 'proto.viam.app.cloudslam.v1.StopMappingSessionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest.displayName = 'proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse.displayName = 'proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.displayName = 'proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse.displayName = 'proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.app.cloudslam.v1.MappingMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.app.cloudslam.v1.MappingMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.app.cloudslam.v1.MappingMetadata.displayName = 'proto.viam.app.cloudslam.v1.MappingMetadata';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.cloudslam.v1.StartMappingSessionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.cloudslam.v1.StartMappingSessionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    slamVersion: jspb.Message.getFieldWithDefault(msg, 1, ""),
    viamServerVersion: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mapName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    organizationId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    locationId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    robotId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    captureInterval: (f = msg.getCaptureInterval()) && proto.viam.app.cloudslam.v1.CaptureInterval.toObject(includeInstance, f),
    sensorsList: jspb.Message.toObjectList(msg.getSensorsList(),
    proto.viam.app.cloudslam.v1.SensorInfo.toObject, includeInstance),
    slamAlgorithmParams: (f = msg.getSlamAlgorithmParams()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    existingMapVersion: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.cloudslam.v1.StartMappingSessionRequest}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.cloudslam.v1.StartMappingSessionRequest;
  return proto.viam.app.cloudslam.v1.StartMappingSessionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.cloudslam.v1.StartMappingSessionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.cloudslam.v1.StartMappingSessionRequest}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlamVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setViamServerVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMapName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRobotId(value);
      break;
    case 7:
      var value = new proto.viam.app.cloudslam.v1.CaptureInterval;
      reader.readMessage(value,proto.viam.app.cloudslam.v1.CaptureInterval.deserializeBinaryFromReader);
      msg.setCaptureInterval(value);
      break;
    case 8:
      var value = new proto.viam.app.cloudslam.v1.SensorInfo;
      reader.readMessage(value,proto.viam.app.cloudslam.v1.SensorInfo.deserializeBinaryFromReader);
      msg.addSensors(value);
      break;
    case 10:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setSlamAlgorithmParams(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setExistingMapVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.cloudslam.v1.StartMappingSessionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.cloudslam.v1.StartMappingSessionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlamVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getViamServerVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMapName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLocationId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRobotId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCaptureInterval();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.viam.app.cloudslam.v1.CaptureInterval.serializeBinaryToWriter
    );
  }
  f = message.getSensorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.viam.app.cloudslam.v1.SensorInfo.serializeBinaryToWriter
    );
  }
  f = message.getSlamAlgorithmParams();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getExistingMapVersion();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string slam_version = 1;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.getSlamVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.StartMappingSessionRequest} returns this
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.setSlamVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string viam_server_version = 2;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.getViamServerVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.StartMappingSessionRequest} returns this
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.setViamServerVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string map_name = 3;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.getMapName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.StartMappingSessionRequest} returns this
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.setMapName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string organization_id = 4;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.getOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.StartMappingSessionRequest} returns this
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string location_id = 5;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.getLocationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.StartMappingSessionRequest} returns this
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.setLocationId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string robot_id = 6;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.getRobotId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.StartMappingSessionRequest} returns this
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.setRobotId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional CaptureInterval capture_interval = 7;
 * @return {?proto.viam.app.cloudslam.v1.CaptureInterval}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.getCaptureInterval = function() {
  return /** @type{?proto.viam.app.cloudslam.v1.CaptureInterval} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.cloudslam.v1.CaptureInterval, 7));
};


/**
 * @param {?proto.viam.app.cloudslam.v1.CaptureInterval|undefined} value
 * @return {!proto.viam.app.cloudslam.v1.StartMappingSessionRequest} returns this
*/
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.setCaptureInterval = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.cloudslam.v1.StartMappingSessionRequest} returns this
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.clearCaptureInterval = function() {
  return this.setCaptureInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.hasCaptureInterval = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated SensorInfo sensors = 8;
 * @return {!Array<!proto.viam.app.cloudslam.v1.SensorInfo>}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.getSensorsList = function() {
  return /** @type{!Array<!proto.viam.app.cloudslam.v1.SensorInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.app.cloudslam.v1.SensorInfo, 8));
};


/**
 * @param {!Array<!proto.viam.app.cloudslam.v1.SensorInfo>} value
 * @return {!proto.viam.app.cloudslam.v1.StartMappingSessionRequest} returns this
*/
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.setSensorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.viam.app.cloudslam.v1.SensorInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.app.cloudslam.v1.SensorInfo}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.addSensors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.viam.app.cloudslam.v1.SensorInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.cloudslam.v1.StartMappingSessionRequest} returns this
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.clearSensorsList = function() {
  return this.setSensorsList([]);
};


/**
 * optional google.protobuf.Struct slam_algorithm_params = 10;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.getSlamAlgorithmParams = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 10));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.app.cloudslam.v1.StartMappingSessionRequest} returns this
*/
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.setSlamAlgorithmParams = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.cloudslam.v1.StartMappingSessionRequest} returns this
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.clearSlamAlgorithmParams = function() {
  return this.setSlamAlgorithmParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.hasSlamAlgorithmParams = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string existing_map_version = 11;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.getExistingMapVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.StartMappingSessionRequest} returns this
 */
proto.viam.app.cloudslam.v1.StartMappingSessionRequest.prototype.setExistingMapVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.cloudslam.v1.SensorInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.cloudslam.v1.SensorInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.cloudslam.v1.SensorInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.SensorInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourceComponentName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dataFrequencyHz: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.cloudslam.v1.SensorInfo}
 */
proto.viam.app.cloudslam.v1.SensorInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.cloudslam.v1.SensorInfo;
  return proto.viam.app.cloudslam.v1.SensorInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.cloudslam.v1.SensorInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.cloudslam.v1.SensorInfo}
 */
proto.viam.app.cloudslam.v1.SensorInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceComponentName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataFrequencyHz(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.cloudslam.v1.SensorInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.cloudslam.v1.SensorInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.cloudslam.v1.SensorInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.SensorInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourceComponentName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDataFrequencyHz();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string source_component_name = 1;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.SensorInfo.prototype.getSourceComponentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.SensorInfo} returns this
 */
proto.viam.app.cloudslam.v1.SensorInfo.prototype.setSourceComponentName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.SensorInfo.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.SensorInfo} returns this
 */
proto.viam.app.cloudslam.v1.SensorInfo.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string data_frequency_hz = 3;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.SensorInfo.prototype.getDataFrequencyHz = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.SensorInfo} returns this
 */
proto.viam.app.cloudslam.v1.SensorInfo.prototype.setDataFrequencyHz = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.cloudslam.v1.CaptureInterval.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.cloudslam.v1.CaptureInterval.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.cloudslam.v1.CaptureInterval} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.CaptureInterval.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.cloudslam.v1.CaptureInterval}
 */
proto.viam.app.cloudslam.v1.CaptureInterval.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.cloudslam.v1.CaptureInterval;
  return proto.viam.app.cloudslam.v1.CaptureInterval.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.cloudslam.v1.CaptureInterval} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.cloudslam.v1.CaptureInterval}
 */
proto.viam.app.cloudslam.v1.CaptureInterval.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.cloudslam.v1.CaptureInterval.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.cloudslam.v1.CaptureInterval.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.cloudslam.v1.CaptureInterval} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.CaptureInterval.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp start_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.viam.app.cloudslam.v1.CaptureInterval.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.viam.app.cloudslam.v1.CaptureInterval} returns this
*/
proto.viam.app.cloudslam.v1.CaptureInterval.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.cloudslam.v1.CaptureInterval} returns this
 */
proto.viam.app.cloudslam.v1.CaptureInterval.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.cloudslam.v1.CaptureInterval.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.viam.app.cloudslam.v1.CaptureInterval.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.viam.app.cloudslam.v1.CaptureInterval} returns this
*/
proto.viam.app.cloudslam.v1.CaptureInterval.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.cloudslam.v1.CaptureInterval} returns this
 */
proto.viam.app.cloudslam.v1.CaptureInterval.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.cloudslam.v1.CaptureInterval.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.cloudslam.v1.StartMappingSessionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.cloudslam.v1.StartMappingSessionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.StartMappingSessionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.cloudslam.v1.StartMappingSessionResponse}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.cloudslam.v1.StartMappingSessionResponse;
  return proto.viam.app.cloudslam.v1.StartMappingSessionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.cloudslam.v1.StartMappingSessionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.cloudslam.v1.StartMappingSessionResponse}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.cloudslam.v1.StartMappingSessionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.cloudslam.v1.StartMappingSessionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.StartMappingSessionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string session_id = 1;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.StartMappingSessionResponse.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.StartMappingSessionResponse} returns this
 */
proto.viam.app.cloudslam.v1.StartMappingSessionResponse.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    robotId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest}
 */
proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest;
  return proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest}
 */
proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRobotId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRobotId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string robot_id = 1;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest.prototype.getRobotId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest} returns this
 */
proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotRequest.prototype.setRobotId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse}
 */
proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse;
  return proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse}
 */
proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string session_id = 1;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse} returns this
 */
proto.viam.app.cloudslam.v1.GetActiveMappingSessionsForRobotResponse.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest;
  return proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string session_id = 1;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest} returns this
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudRequest.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    mapUrl: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pose: (f = msg.getPose()) && common_v1_common_pb.Pose.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse;
  return proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMapUrl(value);
      break;
    case 2:
      var value = new common_v1_common_pb.Pose;
      reader.readMessage(value,common_v1_common_pb.Pose.deserializeBinaryFromReader);
      msg.setPose(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMapUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPose();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_v1_common_pb.Pose.serializeBinaryToWriter
    );
  }
};


/**
 * optional string map_url = 1;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse.prototype.getMapUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse} returns this
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse.prototype.setMapUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional viam.common.v1.Pose pose = 2;
 * @return {?proto.viam.common.v1.Pose}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse.prototype.getPose = function() {
  return /** @type{?proto.viam.common.v1.Pose} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.Pose, 2));
};


/**
 * @param {?proto.viam.common.v1.Pose|undefined} value
 * @return {!proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse} returns this
*/
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse.prototype.setPose = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse} returns this
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse.prototype.clearPose = function() {
  return this.setPose(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionPointCloudResponse.prototype.hasPose = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.cloudslam.v1.ListMappingSessionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.cloudslam.v1.ListMappingSessionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organizationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    locationId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.cloudslam.v1.ListMappingSessionsRequest}
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.cloudslam.v1.ListMappingSessionsRequest;
  return proto.viam.app.cloudslam.v1.ListMappingSessionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.cloudslam.v1.ListMappingSessionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.cloudslam.v1.ListMappingSessionsRequest}
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.cloudslam.v1.ListMappingSessionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.cloudslam.v1.ListMappingSessionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string organization_id = 1;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsRequest.prototype.getOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.ListMappingSessionsRequest} returns this
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsRequest.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string location_id = 2;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsRequest.prototype.getLocationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.ListMappingSessionsRequest} returns this
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsRequest.prototype.setLocationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.cloudslam.v1.ListMappingSessionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.cloudslam.v1.ListMappingSessionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionList: jspb.Message.toObjectList(msg.getSessionList(),
    proto.viam.app.cloudslam.v1.MappingMetadata.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.cloudslam.v1.ListMappingSessionsResponse}
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.cloudslam.v1.ListMappingSessionsResponse;
  return proto.viam.app.cloudslam.v1.ListMappingSessionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.cloudslam.v1.ListMappingSessionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.cloudslam.v1.ListMappingSessionsResponse}
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.app.cloudslam.v1.MappingMetadata;
      reader.readMessage(value,proto.viam.app.cloudslam.v1.MappingMetadata.deserializeBinaryFromReader);
      msg.addSession(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.cloudslam.v1.ListMappingSessionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.cloudslam.v1.ListMappingSessionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.viam.app.cloudslam.v1.MappingMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MappingMetadata session = 1;
 * @return {!Array<!proto.viam.app.cloudslam.v1.MappingMetadata>}
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsResponse.prototype.getSessionList = function() {
  return /** @type{!Array<!proto.viam.app.cloudslam.v1.MappingMetadata>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.app.cloudslam.v1.MappingMetadata, 1));
};


/**
 * @param {!Array<!proto.viam.app.cloudslam.v1.MappingMetadata>} value
 * @return {!proto.viam.app.cloudslam.v1.ListMappingSessionsResponse} returns this
*/
proto.viam.app.cloudslam.v1.ListMappingSessionsResponse.prototype.setSessionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.viam.app.cloudslam.v1.MappingMetadata=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata}
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsResponse.prototype.addSession = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.viam.app.cloudslam.v1.MappingMetadata, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.app.cloudslam.v1.ListMappingSessionsResponse} returns this
 */
proto.viam.app.cloudslam.v1.ListMappingSessionsResponse.prototype.clearSessionList = function() {
  return this.setSessionList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.cloudslam.v1.StopMappingSessionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.cloudslam.v1.StopMappingSessionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.cloudslam.v1.StopMappingSessionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.StopMappingSessionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.cloudslam.v1.StopMappingSessionRequest}
 */
proto.viam.app.cloudslam.v1.StopMappingSessionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.cloudslam.v1.StopMappingSessionRequest;
  return proto.viam.app.cloudslam.v1.StopMappingSessionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.cloudslam.v1.StopMappingSessionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.cloudslam.v1.StopMappingSessionRequest}
 */
proto.viam.app.cloudslam.v1.StopMappingSessionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.cloudslam.v1.StopMappingSessionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.cloudslam.v1.StopMappingSessionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.cloudslam.v1.StopMappingSessionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.StopMappingSessionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string session_id = 1;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.StopMappingSessionRequest.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.StopMappingSessionRequest} returns this
 */
proto.viam.app.cloudslam.v1.StopMappingSessionRequest.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.cloudslam.v1.StopMappingSessionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.cloudslam.v1.StopMappingSessionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.cloudslam.v1.StopMappingSessionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.StopMappingSessionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    packageId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.cloudslam.v1.StopMappingSessionResponse}
 */
proto.viam.app.cloudslam.v1.StopMappingSessionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.cloudslam.v1.StopMappingSessionResponse;
  return proto.viam.app.cloudslam.v1.StopMappingSessionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.cloudslam.v1.StopMappingSessionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.cloudslam.v1.StopMappingSessionResponse}
 */
proto.viam.app.cloudslam.v1.StopMappingSessionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackageId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.cloudslam.v1.StopMappingSessionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.cloudslam.v1.StopMappingSessionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.cloudslam.v1.StopMappingSessionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.StopMappingSessionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPackageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string package_id = 1;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.StopMappingSessionResponse.prototype.getPackageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.StopMappingSessionResponse} returns this
 */
proto.viam.app.cloudslam.v1.StopMappingSessionResponse.prototype.setPackageId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string version = 2;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.StopMappingSessionResponse.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.StopMappingSessionResponse} returns this
 */
proto.viam.app.cloudslam.v1.StopMappingSessionResponse.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest;
  return proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string session_id = 1;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest} returns this
 */
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDRequest.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionMetadata: (f = msg.getSessionMetadata()) && proto.viam.app.cloudslam.v1.MappingMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse;
  return proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.app.cloudslam.v1.MappingMetadata;
      reader.readMessage(value,proto.viam.app.cloudslam.v1.MappingMetadata.deserializeBinaryFromReader);
      msg.setSessionMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.viam.app.cloudslam.v1.MappingMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional MappingMetadata session_metadata = 1;
 * @return {?proto.viam.app.cloudslam.v1.MappingMetadata}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse.prototype.getSessionMetadata = function() {
  return /** @type{?proto.viam.app.cloudslam.v1.MappingMetadata} */ (
    jspb.Message.getWrapperField(this, proto.viam.app.cloudslam.v1.MappingMetadata, 1));
};


/**
 * @param {?proto.viam.app.cloudslam.v1.MappingMetadata|undefined} value
 * @return {!proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse} returns this
*/
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse.prototype.setSessionMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse} returns this
 */
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse.prototype.clearSessionMetadata = function() {
  return this.setSessionMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.cloudslam.v1.GetMappingSessionMetadataByIDResponse.prototype.hasSessionMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    endStatus: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timeCloudRunJobEnded: (f = msg.getTimeCloudRunJobEnded()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    errorMsg: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest}
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest;
  return proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest}
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    case 2:
      var value = /** @type {!proto.viam.app.cloudslam.v1.EndStatus} */ (reader.readEnum());
      msg.setEndStatus(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimeCloudRunJobEnded(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEndStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTimeCloudRunJobEnded();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getErrorMsg();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string session_id = 1;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest} returns this
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EndStatus end_status = 2;
 * @return {!proto.viam.app.cloudslam.v1.EndStatus}
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.prototype.getEndStatus = function() {
  return /** @type {!proto.viam.app.cloudslam.v1.EndStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.viam.app.cloudslam.v1.EndStatus} value
 * @return {!proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest} returns this
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.prototype.setEndStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp time_cloud_run_job_ended = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.prototype.getTimeCloudRunJobEnded = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest} returns this
*/
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.prototype.setTimeCloudRunJobEnded = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest} returns this
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.prototype.clearTimeCloudRunJobEnded = function() {
  return this.setTimeCloudRunJobEnded(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.prototype.hasTimeCloudRunJobEnded = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string error_msg = 4;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.prototype.getErrorMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest} returns this
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDRequest.prototype.setErrorMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse}
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse;
  return proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse}
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.UpdateMappingSessionMetadataByIDResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.app.cloudslam.v1.MappingMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.app.cloudslam.v1.MappingMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.MappingMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    orgId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    locationId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    robotId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    timeStartSubmitted: (f = msg.getTimeStartSubmitted()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    timeCloudRunJobStarted: (f = msg.getTimeCloudRunJobStarted()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    timeEndSubmitted: (f = msg.getTimeEndSubmitted()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    timeCloudRunJobEnded: (f = msg.getTimeCloudRunJobEnded()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endStatus: jspb.Message.getFieldWithDefault(msg, 8, 0),
    cloudRunJobId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    viamServerVersion: jspb.Message.getFieldWithDefault(msg, 10, ""),
    mapName: jspb.Message.getFieldWithDefault(msg, 11, ""),
    slamVersion: jspb.Message.getFieldWithDefault(msg, 12, ""),
    config: jspb.Message.getFieldWithDefault(msg, 13, ""),
    errorMsg: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.app.cloudslam.v1.MappingMetadata;
  return proto.viam.app.cloudslam.v1.MappingMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.app.cloudslam.v1.MappingMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRobotId(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimeStartSubmitted(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimeCloudRunJobStarted(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimeEndSubmitted(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimeCloudRunJobEnded(value);
      break;
    case 8:
      var value = /** @type {!proto.viam.app.cloudslam.v1.EndStatus} */ (reader.readEnum());
      msg.setEndStatus(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloudRunJobId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setViamServerVersion(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMapName(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlamVersion(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfig(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.app.cloudslam.v1.MappingMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.app.cloudslam.v1.MappingMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.app.cloudslam.v1.MappingMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRobotId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTimeStartSubmitted();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTimeCloudRunJobStarted();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTimeEndSubmitted();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTimeCloudRunJobEnded();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getCloudRunJobId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getViamServerVersion();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getMapName();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSlamVersion();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getConfig();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getErrorMsg();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional string org_id = 1;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata} returns this
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.setOrgId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string location_id = 2;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.getLocationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata} returns this
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.setLocationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string robot_id = 3;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.getRobotId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata} returns this
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.setRobotId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp time_start_submitted = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.getTimeStartSubmitted = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata} returns this
*/
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.setTimeStartSubmitted = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata} returns this
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.clearTimeStartSubmitted = function() {
  return this.setTimeStartSubmitted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.hasTimeStartSubmitted = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp time_cloud_run_job_started = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.getTimeCloudRunJobStarted = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata} returns this
*/
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.setTimeCloudRunJobStarted = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata} returns this
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.clearTimeCloudRunJobStarted = function() {
  return this.setTimeCloudRunJobStarted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.hasTimeCloudRunJobStarted = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp time_end_submitted = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.getTimeEndSubmitted = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata} returns this
*/
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.setTimeEndSubmitted = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata} returns this
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.clearTimeEndSubmitted = function() {
  return this.setTimeEndSubmitted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.hasTimeEndSubmitted = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp time_cloud_run_job_ended = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.getTimeCloudRunJobEnded = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata} returns this
*/
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.setTimeCloudRunJobEnded = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata} returns this
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.clearTimeCloudRunJobEnded = function() {
  return this.setTimeCloudRunJobEnded(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.hasTimeCloudRunJobEnded = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional EndStatus end_status = 8;
 * @return {!proto.viam.app.cloudslam.v1.EndStatus}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.getEndStatus = function() {
  return /** @type {!proto.viam.app.cloudslam.v1.EndStatus} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.viam.app.cloudslam.v1.EndStatus} value
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata} returns this
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.setEndStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional string cloud_run_job_id = 9;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.getCloudRunJobId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata} returns this
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.setCloudRunJobId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string viam_server_version = 10;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.getViamServerVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata} returns this
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.setViamServerVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string map_name = 11;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.getMapName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata} returns this
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.setMapName = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string slam_version = 12;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.getSlamVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata} returns this
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.setSlamVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string config = 13;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.getConfig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata} returns this
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.setConfig = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string error_msg = 14;
 * @return {string}
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.getErrorMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.app.cloudslam.v1.MappingMetadata} returns this
 */
proto.viam.app.cloudslam.v1.MappingMetadata.prototype.setErrorMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * @enum {number}
 */
proto.viam.app.cloudslam.v1.EndStatus = {
  END_STATUS_UNSPECIFIED: 0,
  END_STATUS_SUCCESS: 1,
  END_STATUS_TIMEOUT: 2,
  END_STATUS_FAIL: 3
};

goog.object.extend(exports, proto.viam.app.cloudslam.v1);
