name: Compile Protos

concurrency:
  group: ${{ github.event.pull_request.id }}
  cancel-in-progress: true

on:
  pull_request:
    # branches:
    # - main

env:
  # guards against running this action on its own previous commit
  is-auto-commit:
  commit-message:
  commit-author:

jobs:
  compile-protos:
    runs-on: ubuntu-latest
    container: ghcr.io/viamrobotics/canon:amd64-cache
    env:
      CI_COMMIT_MESSAGE_PREFIX: Built new protos from
      CI_COMMIT_AUTHOR: github-actions
      LABEL_NAME: protos-compiled
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2
      # Set environment variables based on the last commit
      - name: Set environment variable "commit-message"
        run: |
          echo "commit-message=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV
          echo "commit-author=$(git log -1 --pretty=format:'%an')" >> $GITHUB_ENV
      # If the last commit is an auto-generated commit from this workflow, we can exit early
      - name: Set environment variable "is-auto-commit"
        if: startsWith(env.commit-message, env.CI_COMMIT_MESSAGE_PREFIX) && env.commit-author == env.CI_COMMIT_AUTHOR
        run: echo "is-auto-commit=true" >> $GITHUB_ENV
      # Remove label if exists, since we're about to compile again
      # - name: remove label
      #   if: ${{ !env.is-auto-commit }}
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: gh pr edit ${{ github.event.pull_request.number }} --remove-label ${{ env.LABEL_NAME }}
      # Build and push
      - uses: bufbuild/buf-setup-action@v1
        if: ${{ !env.is-auto-commit }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: arduino/setup-protoc@v1
        if: ${{ !env.is-auto-commit }}

      - name: Compile protos
        if: ${{ !env.is-auto-commit }}
        run: make dist/buf

      - name: Add SHORT_SHA env property
        if: ${{ !env.is-auto-commit }}
        id: short_sha
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: commit + push
        if: ${{ !env.is-auto-commit }}
        run: |
          # todo: do I need `git add .`
          git branch
          git status
          git commit -a -m "${{ env.CI_COMMIT_MESSAGE_PREFIX }} inspect output"

      # - name: Commit + Push
      #   if: ${{ !env.is-auto-commit }}
      #   uses: EndBug/add-and-commit@v9.0.0
      #   with:
      #     default_author: github_actions
      #     message: ${{ env.CI_COMMIT_MESSAGE_PREFIX }} ${{ steps.short_sha.outputs.short_sha }}
      #     push: true

      # - name: add back label
      #   if: ${{ !env.is-auto-commit }}
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: gh pr edit ${{ github.event.pull_request.number }} --add-label ${{ env.LABEL_NAME }}
