// source: service/mlmodel/v1/mlmodel.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.viam.service.mlmodel.v1.File', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.FlatTensor', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.FlatTensor.TensorCase', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.FlatTensorDataDouble', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.FlatTensorDataFloat', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.FlatTensorDataInt16', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.FlatTensorDataInt32', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.FlatTensorDataInt64', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.FlatTensorDataInt8', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.FlatTensorDataUInt16', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.FlatTensorDataUInt32', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.FlatTensorDataUInt64', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.FlatTensorDataUInt8', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.FlatTensors', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.InferRequest', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.InferResponse', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.LabelType', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.Metadata', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.MetadataRequest', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.MetadataResponse', null, global);
goog.exportSymbol('proto.viam.service.mlmodel.v1.TensorInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.mlmodel.v1.InferRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.mlmodel.v1.InferRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.mlmodel.v1.InferRequest.displayName = 'proto.viam.service.mlmodel.v1.InferRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.mlmodel.v1.InferResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.mlmodel.v1.InferResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.mlmodel.v1.InferResponse.displayName = 'proto.viam.service.mlmodel.v1.InferResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.mlmodel.v1.MetadataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.mlmodel.v1.MetadataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.mlmodel.v1.MetadataRequest.displayName = 'proto.viam.service.mlmodel.v1.MetadataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.mlmodel.v1.MetadataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.mlmodel.v1.MetadataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.mlmodel.v1.MetadataResponse.displayName = 'proto.viam.service.mlmodel.v1.MetadataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.mlmodel.v1.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.mlmodel.v1.Metadata.repeatedFields_, null);
};
goog.inherits(proto.viam.service.mlmodel.v1.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.mlmodel.v1.Metadata.displayName = 'proto.viam.service.mlmodel.v1.Metadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.mlmodel.v1.TensorInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.mlmodel.v1.TensorInfo.repeatedFields_, null);
};
goog.inherits(proto.viam.service.mlmodel.v1.TensorInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.mlmodel.v1.TensorInfo.displayName = 'proto.viam.service.mlmodel.v1.TensorInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.mlmodel.v1.File = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.mlmodel.v1.File, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.mlmodel.v1.File.displayName = 'proto.viam.service.mlmodel.v1.File';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt8 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.mlmodel.v1.FlatTensorDataInt8, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.mlmodel.v1.FlatTensorDataInt8.displayName = 'proto.viam.service.mlmodel.v1.FlatTensorDataInt8';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt8 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.mlmodel.v1.FlatTensorDataUInt8, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.mlmodel.v1.FlatTensorDataUInt8.displayName = 'proto.viam.service.mlmodel.v1.FlatTensorDataUInt8';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt16 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.mlmodel.v1.FlatTensorDataInt16.repeatedFields_, null);
};
goog.inherits(proto.viam.service.mlmodel.v1.FlatTensorDataInt16, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.mlmodel.v1.FlatTensorDataInt16.displayName = 'proto.viam.service.mlmodel.v1.FlatTensorDataInt16';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt16 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.mlmodel.v1.FlatTensorDataUInt16.repeatedFields_, null);
};
goog.inherits(proto.viam.service.mlmodel.v1.FlatTensorDataUInt16, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.mlmodel.v1.FlatTensorDataUInt16.displayName = 'proto.viam.service.mlmodel.v1.FlatTensorDataUInt16';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt32 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.mlmodel.v1.FlatTensorDataInt32.repeatedFields_, null);
};
goog.inherits(proto.viam.service.mlmodel.v1.FlatTensorDataInt32, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.mlmodel.v1.FlatTensorDataInt32.displayName = 'proto.viam.service.mlmodel.v1.FlatTensorDataInt32';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt32 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.mlmodel.v1.FlatTensorDataUInt32.repeatedFields_, null);
};
goog.inherits(proto.viam.service.mlmodel.v1.FlatTensorDataUInt32, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.mlmodel.v1.FlatTensorDataUInt32.displayName = 'proto.viam.service.mlmodel.v1.FlatTensorDataUInt32';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt64 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.mlmodel.v1.FlatTensorDataInt64.repeatedFields_, null);
};
goog.inherits(proto.viam.service.mlmodel.v1.FlatTensorDataInt64, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.mlmodel.v1.FlatTensorDataInt64.displayName = 'proto.viam.service.mlmodel.v1.FlatTensorDataInt64';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt64 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.mlmodel.v1.FlatTensorDataUInt64.repeatedFields_, null);
};
goog.inherits(proto.viam.service.mlmodel.v1.FlatTensorDataUInt64, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.mlmodel.v1.FlatTensorDataUInt64.displayName = 'proto.viam.service.mlmodel.v1.FlatTensorDataUInt64';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.mlmodel.v1.FlatTensorDataFloat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.mlmodel.v1.FlatTensorDataFloat.repeatedFields_, null);
};
goog.inherits(proto.viam.service.mlmodel.v1.FlatTensorDataFloat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.mlmodel.v1.FlatTensorDataFloat.displayName = 'proto.viam.service.mlmodel.v1.FlatTensorDataFloat';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.mlmodel.v1.FlatTensorDataDouble = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.mlmodel.v1.FlatTensorDataDouble.repeatedFields_, null);
};
goog.inherits(proto.viam.service.mlmodel.v1.FlatTensorDataDouble, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.mlmodel.v1.FlatTensorDataDouble.displayName = 'proto.viam.service.mlmodel.v1.FlatTensorDataDouble';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.mlmodel.v1.FlatTensor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.viam.service.mlmodel.v1.FlatTensor.repeatedFields_, proto.viam.service.mlmodel.v1.FlatTensor.oneofGroups_);
};
goog.inherits(proto.viam.service.mlmodel.v1.FlatTensor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.mlmodel.v1.FlatTensor.displayName = 'proto.viam.service.mlmodel.v1.FlatTensor';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.viam.service.mlmodel.v1.FlatTensors = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.viam.service.mlmodel.v1.FlatTensors, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.viam.service.mlmodel.v1.FlatTensors.displayName = 'proto.viam.service.mlmodel.v1.FlatTensors';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.mlmodel.v1.InferRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.mlmodel.v1.InferRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.mlmodel.v1.InferRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.InferRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
inputTensors: (f = msg.getInputTensors()) && proto.viam.service.mlmodel.v1.FlatTensors.toObject(includeInstance, f),
extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.mlmodel.v1.InferRequest}
 */
proto.viam.service.mlmodel.v1.InferRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.mlmodel.v1.InferRequest;
  return proto.viam.service.mlmodel.v1.InferRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.mlmodel.v1.InferRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.mlmodel.v1.InferRequest}
 */
proto.viam.service.mlmodel.v1.InferRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.viam.service.mlmodel.v1.FlatTensors;
      reader.readMessage(value,proto.viam.service.mlmodel.v1.FlatTensors.deserializeBinaryFromReader);
      msg.setInputTensors(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.InferRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.mlmodel.v1.InferRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.mlmodel.v1.InferRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.InferRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInputTensors();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.viam.service.mlmodel.v1.FlatTensors.serializeBinaryToWriter
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.mlmodel.v1.InferRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.mlmodel.v1.InferRequest} returns this
 */
proto.viam.service.mlmodel.v1.InferRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional FlatTensors input_tensors = 3;
 * @return {?proto.viam.service.mlmodel.v1.FlatTensors}
 */
proto.viam.service.mlmodel.v1.InferRequest.prototype.getInputTensors = function() {
  return /** @type{?proto.viam.service.mlmodel.v1.FlatTensors} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.mlmodel.v1.FlatTensors, 3));
};


/**
 * @param {?proto.viam.service.mlmodel.v1.FlatTensors|undefined} value
 * @return {!proto.viam.service.mlmodel.v1.InferRequest} returns this
*/
proto.viam.service.mlmodel.v1.InferRequest.prototype.setInputTensors = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.mlmodel.v1.InferRequest} returns this
 */
proto.viam.service.mlmodel.v1.InferRequest.prototype.clearInputTensors = function() {
  return this.setInputTensors(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.mlmodel.v1.InferRequest.prototype.hasInputTensors = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.mlmodel.v1.InferRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.mlmodel.v1.InferRequest} returns this
*/
proto.viam.service.mlmodel.v1.InferRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.mlmodel.v1.InferRequest} returns this
 */
proto.viam.service.mlmodel.v1.InferRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.mlmodel.v1.InferRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.mlmodel.v1.InferResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.mlmodel.v1.InferResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.mlmodel.v1.InferResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.InferResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
outputTensors: (f = msg.getOutputTensors()) && proto.viam.service.mlmodel.v1.FlatTensors.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.mlmodel.v1.InferResponse}
 */
proto.viam.service.mlmodel.v1.InferResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.mlmodel.v1.InferResponse;
  return proto.viam.service.mlmodel.v1.InferResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.mlmodel.v1.InferResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.mlmodel.v1.InferResponse}
 */
proto.viam.service.mlmodel.v1.InferResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new proto.viam.service.mlmodel.v1.FlatTensors;
      reader.readMessage(value,proto.viam.service.mlmodel.v1.FlatTensors.deserializeBinaryFromReader);
      msg.setOutputTensors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.InferResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.mlmodel.v1.InferResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.mlmodel.v1.InferResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.InferResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutputTensors();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.viam.service.mlmodel.v1.FlatTensors.serializeBinaryToWriter
    );
  }
};


/**
 * optional FlatTensors output_tensors = 3;
 * @return {?proto.viam.service.mlmodel.v1.FlatTensors}
 */
proto.viam.service.mlmodel.v1.InferResponse.prototype.getOutputTensors = function() {
  return /** @type{?proto.viam.service.mlmodel.v1.FlatTensors} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.mlmodel.v1.FlatTensors, 3));
};


/**
 * @param {?proto.viam.service.mlmodel.v1.FlatTensors|undefined} value
 * @return {!proto.viam.service.mlmodel.v1.InferResponse} returns this
*/
proto.viam.service.mlmodel.v1.InferResponse.prototype.setOutputTensors = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.mlmodel.v1.InferResponse} returns this
 */
proto.viam.service.mlmodel.v1.InferResponse.prototype.clearOutputTensors = function() {
  return this.setOutputTensors(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.mlmodel.v1.InferResponse.prototype.hasOutputTensors = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.mlmodel.v1.MetadataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.mlmodel.v1.MetadataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.mlmodel.v1.MetadataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.MetadataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.mlmodel.v1.MetadataRequest}
 */
proto.viam.service.mlmodel.v1.MetadataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.mlmodel.v1.MetadataRequest;
  return proto.viam.service.mlmodel.v1.MetadataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.mlmodel.v1.MetadataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.mlmodel.v1.MetadataRequest}
 */
proto.viam.service.mlmodel.v1.MetadataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.MetadataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.mlmodel.v1.MetadataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.mlmodel.v1.MetadataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.MetadataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.mlmodel.v1.MetadataRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.mlmodel.v1.MetadataRequest} returns this
 */
proto.viam.service.mlmodel.v1.MetadataRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.mlmodel.v1.MetadataRequest.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.mlmodel.v1.MetadataRequest} returns this
*/
proto.viam.service.mlmodel.v1.MetadataRequest.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.mlmodel.v1.MetadataRequest} returns this
 */
proto.viam.service.mlmodel.v1.MetadataRequest.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.mlmodel.v1.MetadataRequest.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.mlmodel.v1.MetadataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.mlmodel.v1.MetadataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.mlmodel.v1.MetadataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.MetadataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
metadata: (f = msg.getMetadata()) && proto.viam.service.mlmodel.v1.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.mlmodel.v1.MetadataResponse}
 */
proto.viam.service.mlmodel.v1.MetadataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.mlmodel.v1.MetadataResponse;
  return proto.viam.service.mlmodel.v1.MetadataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.mlmodel.v1.MetadataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.mlmodel.v1.MetadataResponse}
 */
proto.viam.service.mlmodel.v1.MetadataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.viam.service.mlmodel.v1.Metadata;
      reader.readMessage(value,proto.viam.service.mlmodel.v1.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.MetadataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.mlmodel.v1.MetadataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.mlmodel.v1.MetadataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.MetadataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.viam.service.mlmodel.v1.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional Metadata metadata = 1;
 * @return {?proto.viam.service.mlmodel.v1.Metadata}
 */
proto.viam.service.mlmodel.v1.MetadataResponse.prototype.getMetadata = function() {
  return /** @type{?proto.viam.service.mlmodel.v1.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.mlmodel.v1.Metadata, 1));
};


/**
 * @param {?proto.viam.service.mlmodel.v1.Metadata|undefined} value
 * @return {!proto.viam.service.mlmodel.v1.MetadataResponse} returns this
*/
proto.viam.service.mlmodel.v1.MetadataResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.mlmodel.v1.MetadataResponse} returns this
 */
proto.viam.service.mlmodel.v1.MetadataResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.mlmodel.v1.MetadataResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.mlmodel.v1.Metadata.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.mlmodel.v1.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.mlmodel.v1.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.mlmodel.v1.Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
type: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
inputInfoList: jspb.Message.toObjectList(msg.getInputInfoList(),
    proto.viam.service.mlmodel.v1.TensorInfo.toObject, includeInstance),
outputInfoList: jspb.Message.toObjectList(msg.getOutputInfoList(),
    proto.viam.service.mlmodel.v1.TensorInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.mlmodel.v1.Metadata}
 */
proto.viam.service.mlmodel.v1.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.mlmodel.v1.Metadata;
  return proto.viam.service.mlmodel.v1.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.mlmodel.v1.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.mlmodel.v1.Metadata}
 */
proto.viam.service.mlmodel.v1.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = new proto.viam.service.mlmodel.v1.TensorInfo;
      reader.readMessage(value,proto.viam.service.mlmodel.v1.TensorInfo.deserializeBinaryFromReader);
      msg.addInputInfo(value);
      break;
    case 5:
      var value = new proto.viam.service.mlmodel.v1.TensorInfo;
      reader.readMessage(value,proto.viam.service.mlmodel.v1.TensorInfo.deserializeBinaryFromReader);
      msg.addOutputInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.mlmodel.v1.Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.mlmodel.v1.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInputInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.viam.service.mlmodel.v1.TensorInfo.serializeBinaryToWriter
    );
  }
  f = message.getOutputInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.viam.service.mlmodel.v1.TensorInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.mlmodel.v1.Metadata.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.mlmodel.v1.Metadata} returns this
 */
proto.viam.service.mlmodel.v1.Metadata.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.viam.service.mlmodel.v1.Metadata.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.mlmodel.v1.Metadata} returns this
 */
proto.viam.service.mlmodel.v1.Metadata.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.viam.service.mlmodel.v1.Metadata.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.mlmodel.v1.Metadata} returns this
 */
proto.viam.service.mlmodel.v1.Metadata.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated TensorInfo input_info = 4;
 * @return {!Array<!proto.viam.service.mlmodel.v1.TensorInfo>}
 */
proto.viam.service.mlmodel.v1.Metadata.prototype.getInputInfoList = function() {
  return /** @type{!Array<!proto.viam.service.mlmodel.v1.TensorInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.service.mlmodel.v1.TensorInfo, 4));
};


/**
 * @param {!Array<!proto.viam.service.mlmodel.v1.TensorInfo>} value
 * @return {!proto.viam.service.mlmodel.v1.Metadata} returns this
*/
proto.viam.service.mlmodel.v1.Metadata.prototype.setInputInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.viam.service.mlmodel.v1.TensorInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.service.mlmodel.v1.TensorInfo}
 */
proto.viam.service.mlmodel.v1.Metadata.prototype.addInputInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.viam.service.mlmodel.v1.TensorInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.mlmodel.v1.Metadata} returns this
 */
proto.viam.service.mlmodel.v1.Metadata.prototype.clearInputInfoList = function() {
  return this.setInputInfoList([]);
};


/**
 * repeated TensorInfo output_info = 5;
 * @return {!Array<!proto.viam.service.mlmodel.v1.TensorInfo>}
 */
proto.viam.service.mlmodel.v1.Metadata.prototype.getOutputInfoList = function() {
  return /** @type{!Array<!proto.viam.service.mlmodel.v1.TensorInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.service.mlmodel.v1.TensorInfo, 5));
};


/**
 * @param {!Array<!proto.viam.service.mlmodel.v1.TensorInfo>} value
 * @return {!proto.viam.service.mlmodel.v1.Metadata} returns this
*/
proto.viam.service.mlmodel.v1.Metadata.prototype.setOutputInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.viam.service.mlmodel.v1.TensorInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.service.mlmodel.v1.TensorInfo}
 */
proto.viam.service.mlmodel.v1.Metadata.prototype.addOutputInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.viam.service.mlmodel.v1.TensorInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.mlmodel.v1.Metadata} returns this
 */
proto.viam.service.mlmodel.v1.Metadata.prototype.clearOutputInfoList = function() {
  return this.setOutputInfoList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.mlmodel.v1.TensorInfo.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.mlmodel.v1.TensorInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.mlmodel.v1.TensorInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.mlmodel.v1.TensorInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.TensorInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
description: jspb.Message.getFieldWithDefault(msg, 2, ""),
dataType: jspb.Message.getFieldWithDefault(msg, 3, ""),
shapeList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
associatedFilesList: jspb.Message.toObjectList(msg.getAssociatedFilesList(),
    proto.viam.service.mlmodel.v1.File.toObject, includeInstance),
extra: (f = msg.getExtra()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.mlmodel.v1.TensorInfo}
 */
proto.viam.service.mlmodel.v1.TensorInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.mlmodel.v1.TensorInfo;
  return proto.viam.service.mlmodel.v1.TensorInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.mlmodel.v1.TensorInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.mlmodel.v1.TensorInfo}
 */
proto.viam.service.mlmodel.v1.TensorInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataType(value);
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addShape(values[i]);
      }
      break;
    case 5:
      var value = new proto.viam.service.mlmodel.v1.File;
      reader.readMessage(value,proto.viam.service.mlmodel.v1.File.deserializeBinaryFromReader);
      msg.addAssociatedFiles(value);
      break;
    case 99:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.TensorInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.mlmodel.v1.TensorInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.mlmodel.v1.TensorInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.TensorInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDataType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getShapeList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
  f = message.getAssociatedFilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.viam.service.mlmodel.v1.File.serializeBinaryToWriter
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.mlmodel.v1.TensorInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.mlmodel.v1.TensorInfo} returns this
 */
proto.viam.service.mlmodel.v1.TensorInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.viam.service.mlmodel.v1.TensorInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.mlmodel.v1.TensorInfo} returns this
 */
proto.viam.service.mlmodel.v1.TensorInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string data_type = 3;
 * @return {string}
 */
proto.viam.service.mlmodel.v1.TensorInfo.prototype.getDataType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.mlmodel.v1.TensorInfo} returns this
 */
proto.viam.service.mlmodel.v1.TensorInfo.prototype.setDataType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated int32 shape = 4;
 * @return {!Array<number>}
 */
proto.viam.service.mlmodel.v1.TensorInfo.prototype.getShapeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.viam.service.mlmodel.v1.TensorInfo} returns this
 */
proto.viam.service.mlmodel.v1.TensorInfo.prototype.setShapeList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.viam.service.mlmodel.v1.TensorInfo} returns this
 */
proto.viam.service.mlmodel.v1.TensorInfo.prototype.addShape = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.mlmodel.v1.TensorInfo} returns this
 */
proto.viam.service.mlmodel.v1.TensorInfo.prototype.clearShapeList = function() {
  return this.setShapeList([]);
};


/**
 * repeated File associated_files = 5;
 * @return {!Array<!proto.viam.service.mlmodel.v1.File>}
 */
proto.viam.service.mlmodel.v1.TensorInfo.prototype.getAssociatedFilesList = function() {
  return /** @type{!Array<!proto.viam.service.mlmodel.v1.File>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.viam.service.mlmodel.v1.File, 5));
};


/**
 * @param {!Array<!proto.viam.service.mlmodel.v1.File>} value
 * @return {!proto.viam.service.mlmodel.v1.TensorInfo} returns this
*/
proto.viam.service.mlmodel.v1.TensorInfo.prototype.setAssociatedFilesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.viam.service.mlmodel.v1.File=} opt_value
 * @param {number=} opt_index
 * @return {!proto.viam.service.mlmodel.v1.File}
 */
proto.viam.service.mlmodel.v1.TensorInfo.prototype.addAssociatedFiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.viam.service.mlmodel.v1.File, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.mlmodel.v1.TensorInfo} returns this
 */
proto.viam.service.mlmodel.v1.TensorInfo.prototype.clearAssociatedFilesList = function() {
  return this.setAssociatedFilesList([]);
};


/**
 * optional google.protobuf.Struct extra = 99;
 * @return {?proto.google.protobuf.Struct}
 */
proto.viam.service.mlmodel.v1.TensorInfo.prototype.getExtra = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 99));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.viam.service.mlmodel.v1.TensorInfo} returns this
*/
proto.viam.service.mlmodel.v1.TensorInfo.prototype.setExtra = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.mlmodel.v1.TensorInfo} returns this
 */
proto.viam.service.mlmodel.v1.TensorInfo.prototype.clearExtra = function() {
  return this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.mlmodel.v1.TensorInfo.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 99) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.mlmodel.v1.File.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.mlmodel.v1.File.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.mlmodel.v1.File} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.File.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
description: jspb.Message.getFieldWithDefault(msg, 2, ""),
labelType: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.mlmodel.v1.File}
 */
proto.viam.service.mlmodel.v1.File.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.mlmodel.v1.File;
  return proto.viam.service.mlmodel.v1.File.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.mlmodel.v1.File} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.mlmodel.v1.File}
 */
proto.viam.service.mlmodel.v1.File.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {!proto.viam.service.mlmodel.v1.LabelType} */ (reader.readEnum());
      msg.setLabelType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.File.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.mlmodel.v1.File.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.mlmodel.v1.File} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.File.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLabelType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.viam.service.mlmodel.v1.File.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.mlmodel.v1.File} returns this
 */
proto.viam.service.mlmodel.v1.File.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.viam.service.mlmodel.v1.File.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.viam.service.mlmodel.v1.File} returns this
 */
proto.viam.service.mlmodel.v1.File.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional LabelType label_type = 3;
 * @return {!proto.viam.service.mlmodel.v1.LabelType}
 */
proto.viam.service.mlmodel.v1.File.prototype.getLabelType = function() {
  return /** @type {!proto.viam.service.mlmodel.v1.LabelType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.viam.service.mlmodel.v1.LabelType} value
 * @return {!proto.viam.service.mlmodel.v1.File} returns this
 */
proto.viam.service.mlmodel.v1.File.prototype.setLabelType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt8.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.mlmodel.v1.FlatTensorDataInt8.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataInt8} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt8.toObject = function(includeInstance, msg) {
  var f, obj = {
data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataInt8}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt8.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.mlmodel.v1.FlatTensorDataInt8;
  return proto.viam.service.mlmodel.v1.FlatTensorDataInt8.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataInt8} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataInt8}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt8.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt8.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.mlmodel.v1.FlatTensorDataInt8.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataInt8} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt8.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {string}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt8.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt8.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt8.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataInt8} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt8.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt8.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.mlmodel.v1.FlatTensorDataUInt8.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt8} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt8.toObject = function(includeInstance, msg) {
  var f, obj = {
data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt8}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt8.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.mlmodel.v1.FlatTensorDataUInt8;
  return proto.viam.service.mlmodel.v1.FlatTensorDataUInt8.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt8} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt8}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt8.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt8.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.mlmodel.v1.FlatTensorDataUInt8.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt8} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt8.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {string}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt8.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt8.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt8.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt8} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt8.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt16.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt16.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.mlmodel.v1.FlatTensorDataInt16.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataInt16} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt16.toObject = function(includeInstance, msg) {
  var f, obj = {
dataList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataInt16}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt16.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.mlmodel.v1.FlatTensorDataInt16;
  return proto.viam.service.mlmodel.v1.FlatTensorDataInt16.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataInt16} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataInt16}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt16.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFixed32() : [reader.readFixed32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addData(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt16.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.mlmodel.v1.FlatTensorDataInt16.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataInt16} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt16.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writePackedFixed32(
      1,
      f
    );
  }
};


/**
 * repeated fixed32 data = 1;
 * @return {!Array<number>}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt16.prototype.getDataList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataInt16} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt16.prototype.setDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataInt16} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt16.prototype.addData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataInt16} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt16.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt16.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt16.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.mlmodel.v1.FlatTensorDataUInt16.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt16} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt16.toObject = function(includeInstance, msg) {
  var f, obj = {
dataList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt16}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt16.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.mlmodel.v1.FlatTensorDataUInt16;
  return proto.viam.service.mlmodel.v1.FlatTensorDataUInt16.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt16} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt16}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt16.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFixed32() : [reader.readFixed32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addData(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt16.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.mlmodel.v1.FlatTensorDataUInt16.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt16} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt16.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writePackedFixed32(
      1,
      f
    );
  }
};


/**
 * repeated fixed32 data = 1;
 * @return {!Array<number>}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt16.prototype.getDataList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt16} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt16.prototype.setDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt16} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt16.prototype.addData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt16} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt16.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt32.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt32.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.mlmodel.v1.FlatTensorDataInt32.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataInt32} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt32.toObject = function(includeInstance, msg) {
  var f, obj = {
dataList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataInt32}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt32.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.mlmodel.v1.FlatTensorDataInt32;
  return proto.viam.service.mlmodel.v1.FlatTensorDataInt32.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataInt32} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataInt32}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt32.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSfixed32() : [reader.readSfixed32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addData(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt32.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.mlmodel.v1.FlatTensorDataInt32.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataInt32} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt32.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writePackedSfixed32(
      1,
      f
    );
  }
};


/**
 * repeated sfixed32 data = 1;
 * @return {!Array<number>}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt32.prototype.getDataList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataInt32} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt32.prototype.setDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataInt32} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt32.prototype.addData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataInt32} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt32.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt32.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt32.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.mlmodel.v1.FlatTensorDataUInt32.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt32} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt32.toObject = function(includeInstance, msg) {
  var f, obj = {
dataList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt32}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt32.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.mlmodel.v1.FlatTensorDataUInt32;
  return proto.viam.service.mlmodel.v1.FlatTensorDataUInt32.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt32} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt32}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt32.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFixed32() : [reader.readFixed32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addData(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt32.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.mlmodel.v1.FlatTensorDataUInt32.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt32} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt32.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writePackedFixed32(
      1,
      f
    );
  }
};


/**
 * repeated fixed32 data = 1;
 * @return {!Array<number>}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt32.prototype.getDataList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt32} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt32.prototype.setDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt32} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt32.prototype.addData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt32} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt32.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt64.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt64.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.mlmodel.v1.FlatTensorDataInt64.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataInt64} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt64.toObject = function(includeInstance, msg) {
  var f, obj = {
dataList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataInt64}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt64.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.mlmodel.v1.FlatTensorDataInt64;
  return proto.viam.service.mlmodel.v1.FlatTensorDataInt64.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataInt64} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataInt64}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt64.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSfixed64() : [reader.readSfixed64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addData(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt64.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.mlmodel.v1.FlatTensorDataInt64.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataInt64} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt64.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writePackedSfixed64(
      1,
      f
    );
  }
};


/**
 * repeated sfixed64 data = 1;
 * @return {!Array<number>}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt64.prototype.getDataList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataInt64} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt64.prototype.setDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataInt64} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt64.prototype.addData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataInt64} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataInt64.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt64.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt64.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.mlmodel.v1.FlatTensorDataUInt64.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt64} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt64.toObject = function(includeInstance, msg) {
  var f, obj = {
dataList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt64}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt64.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.mlmodel.v1.FlatTensorDataUInt64;
  return proto.viam.service.mlmodel.v1.FlatTensorDataUInt64.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt64} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt64}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt64.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFixed64() : [reader.readFixed64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addData(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt64.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.mlmodel.v1.FlatTensorDataUInt64.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt64} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt64.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writePackedFixed64(
      1,
      f
    );
  }
};


/**
 * repeated fixed64 data = 1;
 * @return {!Array<number>}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt64.prototype.getDataList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt64} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt64.prototype.setDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt64} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt64.prototype.addData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataUInt64} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataUInt64.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.mlmodel.v1.FlatTensorDataFloat.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataFloat.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.mlmodel.v1.FlatTensorDataFloat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataFloat} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataFloat.toObject = function(includeInstance, msg) {
  var f, obj = {
dataList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataFloat}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataFloat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.mlmodel.v1.FlatTensorDataFloat;
  return proto.viam.service.mlmodel.v1.FlatTensorDataFloat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataFloat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataFloat}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataFloat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addData(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataFloat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.mlmodel.v1.FlatTensorDataFloat.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataFloat} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataFloat.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writePackedFloat(
      1,
      f
    );
  }
};


/**
 * repeated float data = 1;
 * @return {!Array<number>}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataFloat.prototype.getDataList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataFloat} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataFloat.prototype.setDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataFloat} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataFloat.prototype.addData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataFloat} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataFloat.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.mlmodel.v1.FlatTensorDataDouble.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataDouble.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.mlmodel.v1.FlatTensorDataDouble.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataDouble} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataDouble.toObject = function(includeInstance, msg) {
  var f, obj = {
dataList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataDouble}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataDouble.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.mlmodel.v1.FlatTensorDataDouble;
  return proto.viam.service.mlmodel.v1.FlatTensorDataDouble.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataDouble} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataDouble}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataDouble.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addData(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataDouble.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.mlmodel.v1.FlatTensorDataDouble.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensorDataDouble} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensorDataDouble.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writePackedDouble(
      1,
      f
    );
  }
};


/**
 * repeated double data = 1;
 * @return {!Array<number>}
 */
proto.viam.service.mlmodel.v1.FlatTensorDataDouble.prototype.getDataList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataDouble} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataDouble.prototype.setDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataDouble} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataDouble.prototype.addData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensorDataDouble} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensorDataDouble.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.viam.service.mlmodel.v1.FlatTensor.repeatedFields_ = [1];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.viam.service.mlmodel.v1.FlatTensor.oneofGroups_ = [[2,3,4,5,6,7,8,9,10,11]];

/**
 * @enum {number}
 */
proto.viam.service.mlmodel.v1.FlatTensor.TensorCase = {
  TENSOR_NOT_SET: 0,
  INT8_TENSOR: 2,
  UINT8_TENSOR: 3,
  INT16_TENSOR: 4,
  UINT16_TENSOR: 5,
  INT32_TENSOR: 6,
  UINT32_TENSOR: 7,
  INT64_TENSOR: 8,
  UINT64_TENSOR: 9,
  FLOAT_TENSOR: 10,
  DOUBLE_TENSOR: 11
};

/**
 * @return {proto.viam.service.mlmodel.v1.FlatTensor.TensorCase}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.getTensorCase = function() {
  return /** @type {proto.viam.service.mlmodel.v1.FlatTensor.TensorCase} */(jspb.Message.computeOneofCase(this, proto.viam.service.mlmodel.v1.FlatTensor.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.mlmodel.v1.FlatTensor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.mlmodel.v1.FlatTensor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensor.toObject = function(includeInstance, msg) {
  var f, obj = {
shapeList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
int8Tensor: (f = msg.getInt8Tensor()) && proto.viam.service.mlmodel.v1.FlatTensorDataInt8.toObject(includeInstance, f),
uint8Tensor: (f = msg.getUint8Tensor()) && proto.viam.service.mlmodel.v1.FlatTensorDataUInt8.toObject(includeInstance, f),
int16Tensor: (f = msg.getInt16Tensor()) && proto.viam.service.mlmodel.v1.FlatTensorDataInt16.toObject(includeInstance, f),
uint16Tensor: (f = msg.getUint16Tensor()) && proto.viam.service.mlmodel.v1.FlatTensorDataUInt16.toObject(includeInstance, f),
int32Tensor: (f = msg.getInt32Tensor()) && proto.viam.service.mlmodel.v1.FlatTensorDataInt32.toObject(includeInstance, f),
uint32Tensor: (f = msg.getUint32Tensor()) && proto.viam.service.mlmodel.v1.FlatTensorDataUInt32.toObject(includeInstance, f),
int64Tensor: (f = msg.getInt64Tensor()) && proto.viam.service.mlmodel.v1.FlatTensorDataInt64.toObject(includeInstance, f),
uint64Tensor: (f = msg.getUint64Tensor()) && proto.viam.service.mlmodel.v1.FlatTensorDataUInt64.toObject(includeInstance, f),
floatTensor: (f = msg.getFloatTensor()) && proto.viam.service.mlmodel.v1.FlatTensorDataFloat.toObject(includeInstance, f),
doubleTensor: (f = msg.getDoubleTensor()) && proto.viam.service.mlmodel.v1.FlatTensorDataDouble.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor}
 */
proto.viam.service.mlmodel.v1.FlatTensor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.mlmodel.v1.FlatTensor;
  return proto.viam.service.mlmodel.v1.FlatTensor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor}
 */
proto.viam.service.mlmodel.v1.FlatTensor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFixed64() : [reader.readFixed64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addShape(values[i]);
      }
      break;
    case 2:
      var value = new proto.viam.service.mlmodel.v1.FlatTensorDataInt8;
      reader.readMessage(value,proto.viam.service.mlmodel.v1.FlatTensorDataInt8.deserializeBinaryFromReader);
      msg.setInt8Tensor(value);
      break;
    case 3:
      var value = new proto.viam.service.mlmodel.v1.FlatTensorDataUInt8;
      reader.readMessage(value,proto.viam.service.mlmodel.v1.FlatTensorDataUInt8.deserializeBinaryFromReader);
      msg.setUint8Tensor(value);
      break;
    case 4:
      var value = new proto.viam.service.mlmodel.v1.FlatTensorDataInt16;
      reader.readMessage(value,proto.viam.service.mlmodel.v1.FlatTensorDataInt16.deserializeBinaryFromReader);
      msg.setInt16Tensor(value);
      break;
    case 5:
      var value = new proto.viam.service.mlmodel.v1.FlatTensorDataUInt16;
      reader.readMessage(value,proto.viam.service.mlmodel.v1.FlatTensorDataUInt16.deserializeBinaryFromReader);
      msg.setUint16Tensor(value);
      break;
    case 6:
      var value = new proto.viam.service.mlmodel.v1.FlatTensorDataInt32;
      reader.readMessage(value,proto.viam.service.mlmodel.v1.FlatTensorDataInt32.deserializeBinaryFromReader);
      msg.setInt32Tensor(value);
      break;
    case 7:
      var value = new proto.viam.service.mlmodel.v1.FlatTensorDataUInt32;
      reader.readMessage(value,proto.viam.service.mlmodel.v1.FlatTensorDataUInt32.deserializeBinaryFromReader);
      msg.setUint32Tensor(value);
      break;
    case 8:
      var value = new proto.viam.service.mlmodel.v1.FlatTensorDataInt64;
      reader.readMessage(value,proto.viam.service.mlmodel.v1.FlatTensorDataInt64.deserializeBinaryFromReader);
      msg.setInt64Tensor(value);
      break;
    case 9:
      var value = new proto.viam.service.mlmodel.v1.FlatTensorDataUInt64;
      reader.readMessage(value,proto.viam.service.mlmodel.v1.FlatTensorDataUInt64.deserializeBinaryFromReader);
      msg.setUint64Tensor(value);
      break;
    case 10:
      var value = new proto.viam.service.mlmodel.v1.FlatTensorDataFloat;
      reader.readMessage(value,proto.viam.service.mlmodel.v1.FlatTensorDataFloat.deserializeBinaryFromReader);
      msg.setFloatTensor(value);
      break;
    case 11:
      var value = new proto.viam.service.mlmodel.v1.FlatTensorDataDouble;
      reader.readMessage(value,proto.viam.service.mlmodel.v1.FlatTensorDataDouble.deserializeBinaryFromReader);
      msg.setDoubleTensor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.mlmodel.v1.FlatTensor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShapeList();
  if (f.length > 0) {
    writer.writePackedFixed64(
      1,
      f
    );
  }
  f = message.getInt8Tensor();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.viam.service.mlmodel.v1.FlatTensorDataInt8.serializeBinaryToWriter
    );
  }
  f = message.getUint8Tensor();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.viam.service.mlmodel.v1.FlatTensorDataUInt8.serializeBinaryToWriter
    );
  }
  f = message.getInt16Tensor();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.viam.service.mlmodel.v1.FlatTensorDataInt16.serializeBinaryToWriter
    );
  }
  f = message.getUint16Tensor();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.viam.service.mlmodel.v1.FlatTensorDataUInt16.serializeBinaryToWriter
    );
  }
  f = message.getInt32Tensor();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.viam.service.mlmodel.v1.FlatTensorDataInt32.serializeBinaryToWriter
    );
  }
  f = message.getUint32Tensor();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.viam.service.mlmodel.v1.FlatTensorDataUInt32.serializeBinaryToWriter
    );
  }
  f = message.getInt64Tensor();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.viam.service.mlmodel.v1.FlatTensorDataInt64.serializeBinaryToWriter
    );
  }
  f = message.getUint64Tensor();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.viam.service.mlmodel.v1.FlatTensorDataUInt64.serializeBinaryToWriter
    );
  }
  f = message.getFloatTensor();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.viam.service.mlmodel.v1.FlatTensorDataFloat.serializeBinaryToWriter
    );
  }
  f = message.getDoubleTensor();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.viam.service.mlmodel.v1.FlatTensorDataDouble.serializeBinaryToWriter
    );
  }
};


/**
 * repeated fixed64 shape = 1;
 * @return {!Array<number>}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.getShapeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.setShapeList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.addShape = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.clearShapeList = function() {
  return this.setShapeList([]);
};


/**
 * optional FlatTensorDataInt8 int8_tensor = 2;
 * @return {?proto.viam.service.mlmodel.v1.FlatTensorDataInt8}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.getInt8Tensor = function() {
  return /** @type{?proto.viam.service.mlmodel.v1.FlatTensorDataInt8} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.mlmodel.v1.FlatTensorDataInt8, 2));
};


/**
 * @param {?proto.viam.service.mlmodel.v1.FlatTensorDataInt8|undefined} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
*/
proto.viam.service.mlmodel.v1.FlatTensor.prototype.setInt8Tensor = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.viam.service.mlmodel.v1.FlatTensor.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.clearInt8Tensor = function() {
  return this.setInt8Tensor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.hasInt8Tensor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FlatTensorDataUInt8 uint8_tensor = 3;
 * @return {?proto.viam.service.mlmodel.v1.FlatTensorDataUInt8}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.getUint8Tensor = function() {
  return /** @type{?proto.viam.service.mlmodel.v1.FlatTensorDataUInt8} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.mlmodel.v1.FlatTensorDataUInt8, 3));
};


/**
 * @param {?proto.viam.service.mlmodel.v1.FlatTensorDataUInt8|undefined} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
*/
proto.viam.service.mlmodel.v1.FlatTensor.prototype.setUint8Tensor = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.viam.service.mlmodel.v1.FlatTensor.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.clearUint8Tensor = function() {
  return this.setUint8Tensor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.hasUint8Tensor = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional FlatTensorDataInt16 int16_tensor = 4;
 * @return {?proto.viam.service.mlmodel.v1.FlatTensorDataInt16}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.getInt16Tensor = function() {
  return /** @type{?proto.viam.service.mlmodel.v1.FlatTensorDataInt16} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.mlmodel.v1.FlatTensorDataInt16, 4));
};


/**
 * @param {?proto.viam.service.mlmodel.v1.FlatTensorDataInt16|undefined} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
*/
proto.viam.service.mlmodel.v1.FlatTensor.prototype.setInt16Tensor = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.viam.service.mlmodel.v1.FlatTensor.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.clearInt16Tensor = function() {
  return this.setInt16Tensor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.hasInt16Tensor = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional FlatTensorDataUInt16 uint16_tensor = 5;
 * @return {?proto.viam.service.mlmodel.v1.FlatTensorDataUInt16}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.getUint16Tensor = function() {
  return /** @type{?proto.viam.service.mlmodel.v1.FlatTensorDataUInt16} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.mlmodel.v1.FlatTensorDataUInt16, 5));
};


/**
 * @param {?proto.viam.service.mlmodel.v1.FlatTensorDataUInt16|undefined} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
*/
proto.viam.service.mlmodel.v1.FlatTensor.prototype.setUint16Tensor = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.viam.service.mlmodel.v1.FlatTensor.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.clearUint16Tensor = function() {
  return this.setUint16Tensor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.hasUint16Tensor = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional FlatTensorDataInt32 int32_tensor = 6;
 * @return {?proto.viam.service.mlmodel.v1.FlatTensorDataInt32}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.getInt32Tensor = function() {
  return /** @type{?proto.viam.service.mlmodel.v1.FlatTensorDataInt32} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.mlmodel.v1.FlatTensorDataInt32, 6));
};


/**
 * @param {?proto.viam.service.mlmodel.v1.FlatTensorDataInt32|undefined} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
*/
proto.viam.service.mlmodel.v1.FlatTensor.prototype.setInt32Tensor = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.viam.service.mlmodel.v1.FlatTensor.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.clearInt32Tensor = function() {
  return this.setInt32Tensor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.hasInt32Tensor = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional FlatTensorDataUInt32 uint32_tensor = 7;
 * @return {?proto.viam.service.mlmodel.v1.FlatTensorDataUInt32}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.getUint32Tensor = function() {
  return /** @type{?proto.viam.service.mlmodel.v1.FlatTensorDataUInt32} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.mlmodel.v1.FlatTensorDataUInt32, 7));
};


/**
 * @param {?proto.viam.service.mlmodel.v1.FlatTensorDataUInt32|undefined} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
*/
proto.viam.service.mlmodel.v1.FlatTensor.prototype.setUint32Tensor = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.viam.service.mlmodel.v1.FlatTensor.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.clearUint32Tensor = function() {
  return this.setUint32Tensor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.hasUint32Tensor = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional FlatTensorDataInt64 int64_tensor = 8;
 * @return {?proto.viam.service.mlmodel.v1.FlatTensorDataInt64}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.getInt64Tensor = function() {
  return /** @type{?proto.viam.service.mlmodel.v1.FlatTensorDataInt64} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.mlmodel.v1.FlatTensorDataInt64, 8));
};


/**
 * @param {?proto.viam.service.mlmodel.v1.FlatTensorDataInt64|undefined} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
*/
proto.viam.service.mlmodel.v1.FlatTensor.prototype.setInt64Tensor = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.viam.service.mlmodel.v1.FlatTensor.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.clearInt64Tensor = function() {
  return this.setInt64Tensor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.hasInt64Tensor = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional FlatTensorDataUInt64 uint64_tensor = 9;
 * @return {?proto.viam.service.mlmodel.v1.FlatTensorDataUInt64}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.getUint64Tensor = function() {
  return /** @type{?proto.viam.service.mlmodel.v1.FlatTensorDataUInt64} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.mlmodel.v1.FlatTensorDataUInt64, 9));
};


/**
 * @param {?proto.viam.service.mlmodel.v1.FlatTensorDataUInt64|undefined} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
*/
proto.viam.service.mlmodel.v1.FlatTensor.prototype.setUint64Tensor = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.viam.service.mlmodel.v1.FlatTensor.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.clearUint64Tensor = function() {
  return this.setUint64Tensor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.hasUint64Tensor = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional FlatTensorDataFloat float_tensor = 10;
 * @return {?proto.viam.service.mlmodel.v1.FlatTensorDataFloat}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.getFloatTensor = function() {
  return /** @type{?proto.viam.service.mlmodel.v1.FlatTensorDataFloat} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.mlmodel.v1.FlatTensorDataFloat, 10));
};


/**
 * @param {?proto.viam.service.mlmodel.v1.FlatTensorDataFloat|undefined} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
*/
proto.viam.service.mlmodel.v1.FlatTensor.prototype.setFloatTensor = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.viam.service.mlmodel.v1.FlatTensor.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.clearFloatTensor = function() {
  return this.setFloatTensor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.hasFloatTensor = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional FlatTensorDataDouble double_tensor = 11;
 * @return {?proto.viam.service.mlmodel.v1.FlatTensorDataDouble}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.getDoubleTensor = function() {
  return /** @type{?proto.viam.service.mlmodel.v1.FlatTensorDataDouble} */ (
    jspb.Message.getWrapperField(this, proto.viam.service.mlmodel.v1.FlatTensorDataDouble, 11));
};


/**
 * @param {?proto.viam.service.mlmodel.v1.FlatTensorDataDouble|undefined} value
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
*/
proto.viam.service.mlmodel.v1.FlatTensor.prototype.setDoubleTensor = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.viam.service.mlmodel.v1.FlatTensor.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensor} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.clearDoubleTensor = function() {
  return this.setDoubleTensor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.viam.service.mlmodel.v1.FlatTensor.prototype.hasDoubleTensor = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.viam.service.mlmodel.v1.FlatTensors.prototype.toObject = function(opt_includeInstance) {
  return proto.viam.service.mlmodel.v1.FlatTensors.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.viam.service.mlmodel.v1.FlatTensors} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensors.toObject = function(includeInstance, msg) {
  var f, obj = {
tensorsMap: (f = msg.getTensorsMap()) ? f.toObject(includeInstance, proto.viam.service.mlmodel.v1.FlatTensor.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensors}
 */
proto.viam.service.mlmodel.v1.FlatTensors.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.viam.service.mlmodel.v1.FlatTensors;
  return proto.viam.service.mlmodel.v1.FlatTensors.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensors} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensors}
 */
proto.viam.service.mlmodel.v1.FlatTensors.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getTensorsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.viam.service.mlmodel.v1.FlatTensor.deserializeBinaryFromReader, "", new proto.viam.service.mlmodel.v1.FlatTensor());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.viam.service.mlmodel.v1.FlatTensors.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.viam.service.mlmodel.v1.FlatTensors.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.viam.service.mlmodel.v1.FlatTensors} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.viam.service.mlmodel.v1.FlatTensors.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTensorsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.viam.service.mlmodel.v1.FlatTensor.serializeBinaryToWriter);
  }
};


/**
 * map<string, FlatTensor> tensors = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.viam.service.mlmodel.v1.FlatTensor>}
 */
proto.viam.service.mlmodel.v1.FlatTensors.prototype.getTensorsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.viam.service.mlmodel.v1.FlatTensor>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.viam.service.mlmodel.v1.FlatTensor));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.viam.service.mlmodel.v1.FlatTensors} returns this
 */
proto.viam.service.mlmodel.v1.FlatTensors.prototype.clearTensorsMap = function() {
  this.getTensorsMap().clear();
  return this;
};


/**
 * @enum {number}
 */
proto.viam.service.mlmodel.v1.LabelType = {
  LABEL_TYPE_UNSPECIFIED: 0,
  LABEL_TYPE_TENSOR_VALUE: 1,
  LABEL_TYPE_TENSOR_AXIS: 2
};

goog.object.extend(exports, proto.viam.service.mlmodel.v1);
